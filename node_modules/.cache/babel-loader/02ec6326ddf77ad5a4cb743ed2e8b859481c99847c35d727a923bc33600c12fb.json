{"ast":null,"code":"var _jsxFileName = \"C:\\\\Source\\\\BudgetCalculator\\\\src\\\\components\\\\BudgetCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetCalculator = () => {\n  _s();\n  const [monthlyIncome, setMonthlyIncome] = useState('');\n  const [budgetCategories, setBudgetCategories] = useState({\n    bills: '',\n    food: '',\n    save: ''\n  });\n  const [categoryColors, setCategoryColors] = useState({\n    bills: '#FF6B6B',\n    food: '#4ECDC4',\n    save: '#45B7D1'\n  });\n  const [categoryOrder, setCategoryOrder] = useState(['bills', 'food', 'save']);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [timeFrame, setTimeFrame] = useState('12'); // Default to 12 months\n\n  const handleIncomeChange = e => {\n    setMonthlyIncome(e.target.value);\n  };\n  const handleCategoryChange = (category, value) => {\n    setBudgetCategories(prev => ({\n      ...prev,\n      [category]: value\n    }));\n  };\n  const addCategory = () => {\n    const newCategoryName = prompt('Enter category name:');\n    if (newCategoryName && newCategoryName.trim()) {\n      const trimmedName = newCategoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n      if (!budgetCategories.hasOwnProperty(trimmedName)) {\n        setBudgetCategories(prev => ({\n          ...prev,\n          [trimmedName]: ''\n        }));\n        setCategoryColors(prev => ({\n          ...prev,\n          [trimmedName]: getRandomColor()\n        }));\n        setCategoryOrder(prev => [...prev, trimmedName]);\n      } else {\n        alert('Category already exists!');\n      }\n    }\n  };\n  const removeCategory = categoryToRemove => {\n    if (Object.keys(budgetCategories).length > 1) {\n      const newCategories = {\n        ...budgetCategories\n      };\n      delete newCategories[categoryToRemove];\n      setBudgetCategories(newCategories);\n      const newColors = {\n        ...categoryColors\n      };\n      delete newColors[categoryToRemove];\n      setCategoryColors(newColors);\n      setCategoryOrder(prev => prev.filter(cat => cat !== categoryToRemove));\n    } else {\n      alert('You must have at least one category!');\n    }\n  };\n  const getRandomColor = () => {\n    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#A8E6CF', '#FF8B94', '#FFC3A0', '#FFD3B6', '#FFAAA5', '#FF8B94', '#B8E6B8', '#FFB6C1', '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n  const handleDragStart = (e, category) => {\n    setDraggedItem(category);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const handleDrop = (e, targetCategory) => {\n    e.preventDefault();\n    if (draggedItem && draggedItem !== targetCategory) {\n      const newOrder = [...categoryOrder];\n      const draggedIndex = newOrder.indexOf(draggedItem);\n      const targetIndex = newOrder.indexOf(targetCategory);\n      newOrder.splice(draggedIndex, 1);\n      newOrder.splice(targetIndex, 0, draggedItem);\n      setCategoryOrder(newOrder);\n    }\n    setDraggedItem(null);\n  };\n  const handleColorChange = (category, color) => {\n    setCategoryColors(prev => ({\n      ...prev,\n      [category]: color\n    }));\n  };\n  const calculateTotal = () => {\n    return Object.values(budgetCategories).reduce((total, value) => {\n      return total + (parseFloat(value) || 0);\n    }, 0);\n  };\n  const calculateRemaining = () => {\n    const total = calculateTotal();\n    const income = parseFloat(monthlyIncome) || 0;\n    return income - total;\n  };\n  const calculateProjectedTotals = () => {\n    const months = parseInt(timeFrame);\n    const income = parseFloat(monthlyIncome) || 0;\n    const totalAllocated = calculateTotal();\n    const remaining = calculateRemaining();\n    return {\n      totalIncome: income * months,\n      totalAllocated: totalAllocated * months,\n      totalRemaining: remaining * months,\n      totalSaved: (budgetCategories.save || 0) * months,\n      totalBills: (budgetCategories.bills || 0) * months,\n      totalFood: (budgetCategories.food || 0) * months\n    };\n  };\n  const getTimeFrameLabel = () => {\n    const months = parseInt(timeFrame);\n    if (months === 1) return '1 Month';\n    if (months === 3) return '3 Months (Quarterly)';\n    if (months === 6) return '6 Months (Semi-Annually)';\n    if (months === 12) return '12 Months (Yearly)';\n    if (months === 24) return '24 Months (2 Years)';\n    if (months === 60) return '60 Months (5 Years)';\n    return `${months} Months`;\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount || 0);\n  };\n  const getCategoryPercentage = categoryValue => {\n    if (!monthlyIncome || !categoryValue) return 0;\n    return parseFloat(categoryValue) / parseFloat(monthlyIncome) * 100;\n  };\n  const getCategoryColor = category => {\n    return categoryColors[category] || '#6C5CE7';\n  };\n  const renderProgressBar = (category, value) => {\n    const percentage = getCategoryPercentage(value);\n    const color = getCategoryColor(category);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${Math.min(percentage, 100)}%`,\n            backgroundColor: color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-text\",\n        children: [percentage.toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  };\n  const renderPieChart = () => {\n    const categories = Object.entries(budgetCategories);\n    const total = calculateTotal();\n    const remaining = calculateRemaining();\n    const income = parseFloat(monthlyIncome) || 0;\n    if (income === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"Enter your monthly income to see budget distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 30\n    }, this);\n    let currentAngle = 0;\n    const radius = 80;\n    const centerX = 100;\n    const centerY = 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Budget Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"200\",\n        height: \"200\",\n        className: \"pie-chart\",\n        children: [categoryOrder.map(category => {\n          const value = budgetCategories[category];\n          if (!value || parseFloat(value) === 0) return null;\n          const percentage = parseFloat(value) / income * 100;\n          const angle = percentage / 100 * 360;\n          const startAngle = currentAngle;\n          const endAngle = currentAngle + angle;\n          const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n          const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n          const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n          const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n          const largeArcFlag = angle > 180 ? 1 : 0;\n          const pathData = [`M ${centerX} ${centerY}`, `L ${x1} ${y1}`, `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`, 'Z'].join(' ');\n          currentAngle += angle;\n          return /*#__PURE__*/_jsxDEV(\"path\", {\n            d: pathData,\n            fill: getCategoryColor(category),\n            stroke: \"#fff\",\n            strokeWidth: \"2\"\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this);\n        }), remaining > 0 && (() => {\n          const percentage = remaining / income * 100;\n          const angle = percentage / 100 * 360;\n          const startAngle = currentAngle;\n          const endAngle = currentAngle + angle;\n          const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n          const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n          const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n          const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n          const largeArcFlag = angle > 180 ? 1 : 0;\n          const pathData = [`M ${centerX} ${centerY}`, `L ${x1} ${y1}`, `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`, 'Z'].join(' ');\n          return /*#__PURE__*/_jsxDEV(\"path\", {\n            d: pathData,\n            fill: \"#6c757d\",\n            stroke: \"#fff\",\n            strokeWidth: \"2\"\n          }, \"unallocated\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-legend\",\n        children: [categoryOrder.map(category => {\n          const value = budgetCategories[category];\n          if (!value || parseFloat(value) === 0) return null;\n          const percentage = parseFloat(value) / income * 100;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: getCategoryColor(category)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-text\",\n              children: [formatCategoryName(category), \": \", percentage.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this);\n        }), remaining > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#6c757d'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-text\",\n            children: [\"Unallocated: \", (remaining / income * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  };\n  const renderProjectedTotals = () => {\n    const projected = calculateProjectedTotals();\n    const months = parseInt(timeFrame);\n    if (!monthlyIncome) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projected-totals\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Projected Totals - \", getTimeFrameLabel()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-frame-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeFrame\",\n          children: \"Time Frame:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeFrame\",\n          value: timeFrame,\n          onChange: e => setTimeFrame(e.target.value),\n          className: \"time-frame-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"1 Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"3 Months (Quarterly)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"6\",\n            children: \"6 Months (Semi-Annually)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"12\",\n            children: \"12 Months (Yearly)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"24\",\n            children: \"24 Months (2 Years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"60\",\n            children: \"60 Months (5 Years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projected-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Income:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value income\",\n            children: formatCurrency(projected.totalIncome)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Allocated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value allocated\",\n            children: formatCurrency(projected.totalAllocated)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Remaining:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value remaining\",\n            children: formatCurrency(projected.totalRemaining)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), budgetCategories.save && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item highlight\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Saved:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value saved\",\n            children: formatCurrency(projected.totalSaved)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), budgetCategories.bills && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Bills:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value bills\",\n            children: formatCurrency(projected.totalBills)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), budgetCategories.food && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Food:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value food\",\n            children: formatCurrency(projected.totalFood)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this);\n  };\n  const formatCategoryName = category => {\n    return category.charAt(0).toUpperCase() + category.slice(1).replace(/_/g, ' ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Welcome to your Budget Calculator!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"payBox\",\n        children: \"How much will you be paid this month?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"payBox\",\n        value: monthlyIncome,\n        onChange: handleIncomeChange,\n        placeholder: \"Enter amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"budget-table-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"budget-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Budget Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-category-btn\",\n            onClick: addCategory,\n            title: \"Add new category\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"calcTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"budget-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [categoryOrder.map(category => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: draggedItem === category ? 'dragging' : '',\n                draggable: true,\n                onDragStart: e => handleDragStart(e, category),\n                onDragOver: handleDragOver,\n                onDrop: e => handleDrop(e, category),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"category-name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"drag-handle\",\n                    children: \"\\u22EE\\u22EE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 23\n                  }, this), formatCategoryName(category)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"budget-input\",\n                    value: budgetCategories[category],\n                    onChange: e => handleCategoryChange(category, e.target.value),\n                    placeholder: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: renderProgressBar(category, budgetCategories[category])\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"color\",\n                    className: \"color-picker\",\n                    value: getCategoryColor(category),\n                    onChange: e => handleColorChange(category, e.target.value),\n                    title: \"Choose color\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-category-btn\",\n                    onClick: () => removeCategory(category),\n                    title: \"Delete category\",\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 21\n                }, this)]\n              }, category, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"total-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Allocated\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: formatCurrency(calculateTotal())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progress-fill total-progress\",\n                        style: {\n                          width: `${Math.min(calculateTotal() / parseFloat(monthlyIncome || 1) * 100, 100)}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 463,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-text\",\n                      children: monthlyIncome ? `${(calculateTotal() / parseFloat(monthlyIncome) * 100).toFixed(1)}%` : '0%'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"remaining-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Remaining\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: formatCurrency(calculateRemaining())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progress-fill remaining-progress\",\n                        style: {\n                          width: `${Math.min(calculateRemaining() / parseFloat(monthlyIncome || 1) * 100, 100)}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 484,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 483,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-text\",\n                      children: monthlyIncome ? `${(calculateRemaining() / parseFloat(monthlyIncome) * 100).toFixed(1)}%` : '0%'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-section\",\n        children: [renderPieChart(), renderProjectedTotals()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetCalculator, \"ySxZxQKQNG587jNr1EgjBA0XpAE=\");\n_c = BudgetCalculator;\nexport default BudgetCalculator;\nvar _c;\n$RefreshReg$(_c, \"BudgetCalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BudgetCalculator","_s","monthlyIncome","setMonthlyIncome","budgetCategories","setBudgetCategories","bills","food","save","categoryColors","setCategoryColors","categoryOrder","setCategoryOrder","draggedItem","setDraggedItem","timeFrame","setTimeFrame","handleIncomeChange","e","target","value","handleCategoryChange","category","prev","addCategory","newCategoryName","prompt","trim","trimmedName","toLowerCase","replace","hasOwnProperty","getRandomColor","alert","removeCategory","categoryToRemove","Object","keys","length","newCategories","newColors","filter","cat","colors","Math","floor","random","handleDragStart","dataTransfer","effectAllowed","handleDragOver","preventDefault","dropEffect","handleDrop","targetCategory","newOrder","draggedIndex","indexOf","targetIndex","splice","handleColorChange","color","calculateTotal","values","reduce","total","parseFloat","calculateRemaining","income","calculateProjectedTotals","months","parseInt","totalAllocated","remaining","totalIncome","totalRemaining","totalSaved","totalBills","totalFood","getTimeFrameLabel","formatCurrency","amount","Intl","NumberFormat","style","currency","format","getCategoryPercentage","categoryValue","getCategoryColor","renderProgressBar","percentage","className","children","width","min","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","renderPieChart","categories","entries","currentAngle","radius","centerX","centerY","height","map","angle","startAngle","endAngle","x1","cos","PI","y1","sin","x2","y2","largeArcFlag","pathData","join","d","fill","stroke","strokeWidth","formatCategoryName","renderProjectedTotals","projected","htmlFor","id","onChange","charAt","toUpperCase","slice","type","placeholder","onClick","title","draggable","onDragStart","onDragOver","onDrop","_c","$RefreshReg$"],"sources":["C:/Source/BudgetCalculator/src/components/BudgetCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst BudgetCalculator = () => {\n  const [monthlyIncome, setMonthlyIncome] = useState('');\n  const [budgetCategories, setBudgetCategories] = useState({\n    bills: '',\n    food: '',\n    save: ''\n  });\n  const [categoryColors, setCategoryColors] = useState({\n    bills: '#FF6B6B',\n    food: '#4ECDC4',\n    save: '#45B7D1'\n  });\n  const [categoryOrder, setCategoryOrder] = useState([\n    'bills', 'food', 'save'\n  ]);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [timeFrame, setTimeFrame] = useState('12'); // Default to 12 months\n\n  const handleIncomeChange = (e) => {\n    setMonthlyIncome(e.target.value);\n  };\n\n  const handleCategoryChange = (category, value) => {\n    setBudgetCategories(prev => ({\n      ...prev,\n      [category]: value\n    }));\n  };\n\n  const addCategory = () => {\n    const newCategoryName = prompt('Enter category name:');\n    if (newCategoryName && newCategoryName.trim()) {\n      const trimmedName = newCategoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n      if (!budgetCategories.hasOwnProperty(trimmedName)) {\n        setBudgetCategories(prev => ({\n          ...prev,\n          [trimmedName]: ''\n        }));\n        setCategoryColors(prev => ({\n          ...prev,\n          [trimmedName]: getRandomColor()\n        }));\n        setCategoryOrder(prev => [...prev, trimmedName]);\n      } else {\n        alert('Category already exists!');\n      }\n    }\n  };\n\n  const removeCategory = (categoryToRemove) => {\n    if (Object.keys(budgetCategories).length > 1) {\n      const newCategories = { ...budgetCategories };\n      delete newCategories[categoryToRemove];\n      setBudgetCategories(newCategories);\n      \n      const newColors = { ...categoryColors };\n      delete newColors[categoryToRemove];\n      setCategoryColors(newColors);\n      \n      setCategoryOrder(prev => prev.filter(cat => cat !== categoryToRemove));\n    } else {\n      alert('You must have at least one category!');\n    }\n  };\n\n  const getRandomColor = () => {\n    const colors = [\n      '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD',\n      '#A8E6CF', '#FF8B94', '#FFC3A0', '#FFD3B6', '#FFAAA5', '#FF8B94',\n      '#B8E6B8', '#FFB6C1', '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE'\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  const handleDragStart = (e, category) => {\n    setDraggedItem(category);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const handleDrop = (e, targetCategory) => {\n    e.preventDefault();\n    if (draggedItem && draggedItem !== targetCategory) {\n      const newOrder = [...categoryOrder];\n      const draggedIndex = newOrder.indexOf(draggedItem);\n      const targetIndex = newOrder.indexOf(targetCategory);\n      \n      newOrder.splice(draggedIndex, 1);\n      newOrder.splice(targetIndex, 0, draggedItem);\n      \n      setCategoryOrder(newOrder);\n    }\n    setDraggedItem(null);\n  };\n\n  const handleColorChange = (category, color) => {\n    setCategoryColors(prev => ({\n      ...prev,\n      [category]: color\n    }));\n  };\n\n  const calculateTotal = () => {\n    return Object.values(budgetCategories).reduce((total, value) => {\n      return total + (parseFloat(value) || 0);\n    }, 0);\n  };\n\n  const calculateRemaining = () => {\n    const total = calculateTotal();\n    const income = parseFloat(monthlyIncome) || 0;\n    return income - total;\n  };\n\n  const calculateProjectedTotals = () => {\n    const months = parseInt(timeFrame);\n    const income = parseFloat(monthlyIncome) || 0;\n    const totalAllocated = calculateTotal();\n    const remaining = calculateRemaining();\n    \n    return {\n      totalIncome: income * months,\n      totalAllocated: totalAllocated * months,\n      totalRemaining: remaining * months,\n      totalSaved: (budgetCategories.save || 0) * months,\n      totalBills: (budgetCategories.bills || 0) * months,\n      totalFood: (budgetCategories.food || 0) * months\n    };\n  };\n\n  const getTimeFrameLabel = () => {\n    const months = parseInt(timeFrame);\n    if (months === 1) return '1 Month';\n    if (months === 3) return '3 Months (Quarterly)';\n    if (months === 6) return '6 Months (Semi-Annually)';\n    if (months === 12) return '12 Months (Yearly)';\n    if (months === 24) return '24 Months (2 Years)';\n    if (months === 60) return '60 Months (5 Years)';\n    return `${months} Months`;\n  };\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount || 0);\n  };\n\n  const getCategoryPercentage = (categoryValue) => {\n    if (!monthlyIncome || !categoryValue) return 0;\n    return (parseFloat(categoryValue) / parseFloat(monthlyIncome)) * 100;\n  };\n\n  const getCategoryColor = (category) => {\n    return categoryColors[category] || '#6C5CE7';\n  };\n\n  const renderProgressBar = (category, value) => {\n    const percentage = getCategoryPercentage(value);\n    const color = getCategoryColor(category);\n    \n    return (\n      <div className=\"progress-container\">\n        <div className=\"progress-bar\">\n          <div \n            className=\"progress-fill\"\n            style={{ \n              width: `${Math.min(percentage, 100)}%`,\n              backgroundColor: color\n            }}\n          ></div>\n        </div>\n        <span className=\"progress-text\">{percentage.toFixed(1)}%</span>\n      </div>\n    );\n  };\n\n  const renderPieChart = () => {\n    const categories = Object.entries(budgetCategories);\n    const total = calculateTotal();\n    const remaining = calculateRemaining();\n    const income = parseFloat(monthlyIncome) || 0;\n    \n    if (income === 0) return <div className=\"no-data\">Enter your monthly income to see budget distribution</div>;\n\n    let currentAngle = 0;\n    const radius = 80;\n    const centerX = 100;\n    const centerY = 100;\n\n    return (\n      <div className=\"pie-chart-container\">\n        <h3>Budget Distribution</h3>\n        <svg width=\"200\" height=\"200\" className=\"pie-chart\">\n          {/* Render allocated categories in order */}\n          {categoryOrder.map(category => {\n            const value = budgetCategories[category];\n            if (!value || parseFloat(value) === 0) return null;\n            \n            const percentage = (parseFloat(value) / income) * 100;\n            const angle = (percentage / 100) * 360;\n            const startAngle = currentAngle;\n            const endAngle = currentAngle + angle;\n            \n            const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n            const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n            const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n            const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n            \n            const largeArcFlag = angle > 180 ? 1 : 0;\n            \n            const pathData = [\n              `M ${centerX} ${centerY}`,\n              `L ${x1} ${y1}`,\n              `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,\n              'Z'\n            ].join(' ');\n            \n            currentAngle += angle;\n            \n            return (\n              <path\n                key={category}\n                d={pathData}\n                fill={getCategoryColor(category)}\n                stroke=\"#fff\"\n                strokeWidth=\"2\"\n              />\n            );\n          })}\n          \n          {/* Render unallocated/remaining slice */}\n          {remaining > 0 && (\n            (() => {\n              const percentage = (remaining / income) * 100;\n              const angle = (percentage / 100) * 360;\n              const startAngle = currentAngle;\n              const endAngle = currentAngle + angle;\n              \n              const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n              const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n              const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n              const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n              \n              const largeArcFlag = angle > 180 ? 1 : 0;\n              \n              const pathData = [\n                `M ${centerX} ${centerY}`,\n                `L ${x1} ${y1}`,\n                `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,\n                'Z'\n              ].join(' ');\n              \n              return (\n                <path\n                  key=\"unallocated\"\n                  d={pathData}\n                  fill=\"#6c757d\"\n                  stroke=\"#fff\"\n                  strokeWidth=\"2\"\n                />\n              );\n            })()\n          )}\n        </svg>\n        <div className=\"chart-legend\">\n          {/* Show allocated categories in order */}\n          {categoryOrder.map(category => {\n            const value = budgetCategories[category];\n            if (!value || parseFloat(value) === 0) return null;\n            const percentage = (parseFloat(value) / income) * 100;\n            return (\n              <div key={category} className=\"legend-item\">\n                <div \n                  className=\"legend-color\" \n                  style={{ backgroundColor: getCategoryColor(category) }}\n                ></div>\n                <span className=\"legend-text\">\n                  {formatCategoryName(category)}: {percentage.toFixed(1)}%\n                </span>\n              </div>\n            );\n          })}\n          \n          {/* Show unallocated/remaining */}\n          {remaining > 0 && (\n            <div className=\"legend-item\">\n              <div \n                className=\"legend-color\" \n                style={{ backgroundColor: '#6c757d' }}\n              ></div>\n              <span className=\"legend-text\">\n                Unallocated: {((remaining / income) * 100).toFixed(1)}%\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const renderProjectedTotals = () => {\n    const projected = calculateProjectedTotals();\n    const months = parseInt(timeFrame);\n    \n    if (!monthlyIncome) return null;\n\n    return (\n      <div className=\"projected-totals\">\n        <h3>Projected Totals - {getTimeFrameLabel()}</h3>\n        <div className=\"time-frame-selector\">\n          <label htmlFor=\"timeFrame\">Time Frame:</label>\n          <select \n            id=\"timeFrame\" \n            value={timeFrame} \n            onChange={(e) => setTimeFrame(e.target.value)}\n            className=\"time-frame-select\"\n          >\n            <option value=\"1\">1 Month</option>\n            <option value=\"3\">3 Months (Quarterly)</option>\n            <option value=\"6\">6 Months (Semi-Annually)</option>\n            <option value=\"12\">12 Months (Yearly)</option>\n            <option value=\"24\">24 Months (2 Years)</option>\n            <option value=\"60\">60 Months (5 Years)</option>\n          </select>\n        </div>\n        <div className=\"projected-grid\">\n          <div className=\"projected-item\">\n            <span className=\"projected-label\">Total Income:</span>\n            <span className=\"projected-value income\">{formatCurrency(projected.totalIncome)}</span>\n          </div>\n          <div className=\"projected-item\">\n            <span className=\"projected-label\">Total Allocated:</span>\n            <span className=\"projected-value allocated\">{formatCurrency(projected.totalAllocated)}</span>\n          </div>\n          <div className=\"projected-item\">\n            <span className=\"projected-label\">Total Remaining:</span>\n            <span className=\"projected-value remaining\">{formatCurrency(projected.totalRemaining)}</span>\n          </div>\n          {budgetCategories.save && (\n            <div className=\"projected-item highlight\">\n              <span className=\"projected-label\">Total Saved:</span>\n              <span className=\"projected-value saved\">{formatCurrency(projected.totalSaved)}</span>\n            </div>\n          )}\n          {budgetCategories.bills && (\n            <div className=\"projected-item\">\n              <span className=\"projected-label\">Total Bills:</span>\n              <span className=\"projected-value bills\">{formatCurrency(projected.totalBills)}</span>\n            </div>\n          )}\n          {budgetCategories.food && (\n            <div className=\"projected-item\">\n              <span className=\"projected-label\">Total Food:</span>\n            <span className=\"projected-value food\">{formatCurrency(projected.totalFood)}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const formatCategoryName = (category) => {\n    return category.charAt(0).toUpperCase() + category.slice(1).replace(/_/g, ' ');\n  };\n\n  return (\n    <div>\n      <header>Welcome to your Budget Calculator!</header>\n      \n      <div className=\"budget-form\">\n        <label htmlFor=\"payBox\">How much will you be paid this month?</label>\n        <input\n          type=\"number\"\n          id=\"payBox\"\n          value={monthlyIncome}\n          onChange={handleIncomeChange}\n          placeholder=\"Enter amount\"\n        />\n      </div>\n\n      <div className=\"budget-container\">\n        <div className=\"budget-table-section\">\n          <div className=\"budget-header\">\n            <h3>Budget Breakdown</h3>\n            <button \n              className=\"add-category-btn\"\n              onClick={addCategory}\n              title=\"Add new category\"\n            >\n              +\n            </button>\n          </div>\n          <div id=\"calcTable\">\n            <table className=\"budget-table\">\n              <thead>\n                <tr>\n                  <th>Category</th>\n                  <th>Amount</th>\n                  <th>Progress</th>\n                  <th>Color</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {categoryOrder.map((category) => (\n                  <tr \n                    key={category}\n                    className={draggedItem === category ? 'dragging' : ''}\n                    draggable\n                    onDragStart={(e) => handleDragStart(e, category)}\n                    onDragOver={handleDragOver}\n                    onDrop={(e) => handleDrop(e, category)}\n                  >\n                    <td className=\"category-name\">\n                      <span className=\"drag-handle\">⋮⋮</span>\n                      {formatCategoryName(category)}\n                    </td>\n                    <td>\n                      <input\n                        type=\"number\"\n                        className=\"budget-input\"\n                        value={budgetCategories[category]}\n                        onChange={(e) => handleCategoryChange(category, e.target.value)}\n                        placeholder=\"0\"\n                      />\n                    </td>\n                    <td>\n                      {renderProgressBar(category, budgetCategories[category])}\n                    </td>\n                    <td>\n                      <input\n                        type=\"color\"\n                        className=\"color-picker\"\n                        value={getCategoryColor(category)}\n                        onChange={(e) => handleColorChange(category, e.target.value)}\n                        title=\"Choose color\"\n                      />\n                    </td>\n                    <td>\n                      <button \n                        className=\"delete-category-btn\"\n                        onClick={() => removeCategory(category)}\n                        title=\"Delete category\"\n                      >\n                        ×\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n                <tr className=\"total-row\">\n                  <td><strong>Total Allocated</strong></td>\n                  <td><strong>{formatCurrency(calculateTotal())}</strong></td>\n                  <td>\n                    <div className=\"progress-container\">\n                      <div className=\"progress-bar\">\n                        <div \n                          className=\"progress-fill total-progress\"\n                          style={{ \n                            width: `${Math.min((calculateTotal() / parseFloat(monthlyIncome || 1)) * 100, 100)}%`\n                          }}\n                        ></div>\n                      </div>\n                      <span className=\"progress-text\">\n                        {monthlyIncome ? `${((calculateTotal() / parseFloat(monthlyIncome)) * 100).toFixed(1)}%` : '0%'}\n                      </span>\n                    </div>\n                  </td>\n                  <td></td>\n                  <td></td>\n                </tr>\n                <tr className=\"remaining-row\">\n                  <td><strong>Remaining</strong></td>\n                  <td><strong>{formatCurrency(calculateRemaining())}</strong></td>\n                  <td>\n                    <div className=\"progress-container\">\n                      <div className=\"progress-bar\">\n                        <div \n                          className=\"progress-fill remaining-progress\"\n                          style={{ \n                            width: `${Math.min((calculateRemaining() / parseFloat(monthlyIncome || 1)) * 100, 100)}%`\n                          }}\n                        ></div>\n                      </div>\n                      <span className=\"progress-text\">\n                        {monthlyIncome ? `${((calculateRemaining() / parseFloat(monthlyIncome)) * 100).toFixed(1)}%` : '0%'}\n                      </span>\n                    </div>\n                  </td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div className=\"visualization-section\">\n          {renderPieChart()}\n          {renderProjectedTotals()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BudgetCalculator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}