{"ast":null,"code":"var _jsxFileName = \"C:\\\\Source\\\\BudgetCalculator\\\\src\\\\components\\\\BudgetCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetCalculator = () => {\n  _s();\n  const [monthlyIncome, setMonthlyIncome] = useState('');\n  const [budgetCategories, setBudgetCategories] = useState({\n    bills: '',\n    food: '',\n    save: ''\n  });\n  const [categoryColors, setCategoryColors] = useState({\n    bills: '#FF6B6B',\n    food: '#4ECDC4',\n    save: '#45B7D1'\n  });\n  const [categoryOrder, setCategoryOrder] = useState(['bills', 'food', 'save']);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [timeFrame, setTimeFrame] = useState('12'); // Default to 12 months\n  const [templateCategory, setTemplateCategory] = useState('');\n  const [isAddingCategory, setIsAddingCategory] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editingCategoryName, setEditingCategoryName] = useState('');\n  const handleIncomeChange = e => {\n    setMonthlyIncome(e.target.value);\n  };\n  const handleCategoryChange = (category, value) => {\n    setBudgetCategories(prev => ({\n      ...prev,\n      [category]: value\n    }));\n  };\n  const addCategory = () => {\n    const newCategoryName = prompt('Enter category name:');\n    if (newCategoryName && newCategoryName.trim()) {\n      const trimmedName = newCategoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n      if (!budgetCategories.hasOwnProperty(trimmedName)) {\n        setBudgetCategories(prev => ({\n          ...prev,\n          [trimmedName]: ''\n        }));\n        setCategoryColors(prev => ({\n          ...prev,\n          [trimmedName]: getRandomColor()\n        }));\n        setCategoryOrder(prev => [...prev, trimmedName]);\n      } else {\n        alert('Category already exists!');\n      }\n    }\n  };\n  const addCategoryFromTemplate = categoryName => {\n    if (categoryName && categoryName.trim()) {\n      const trimmedName = categoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n      if (!budgetCategories.hasOwnProperty(trimmedName)) {\n        setBudgetCategories(prev => ({\n          ...prev,\n          [trimmedName]: ''\n        }));\n        setCategoryColors(prev => ({\n          ...prev,\n          [trimmedName]: getRandomColor()\n        }));\n        setCategoryOrder(prev => [...prev, trimmedName]);\n        return true;\n      } else {\n        alert('Category already exists!');\n        return false;\n      }\n    }\n    return false;\n  };\n  const startEditingCategory = category => {\n    setEditingCategory(category);\n    setEditingCategoryName(formatCategoryName(category));\n  };\n  const saveCategoryName = oldCategory => {\n    if (editingCategoryName && editingCategoryName.trim()) {\n      const newCategoryName = editingCategoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n\n      // Check if the new name already exists (excluding the current category)\n      if (newCategoryName !== oldCategory && budgetCategories.hasOwnProperty(newCategoryName)) {\n        alert('Category name already exists!');\n        return;\n      }\n\n      // Update category order\n      const newOrder = categoryOrder.map(cat => cat === oldCategory ? newCategoryName : cat);\n      setCategoryOrder(newOrder);\n\n      // Update budget categories\n      const newCategories = {\n        ...budgetCategories\n      };\n      newCategories[newCategoryName] = newCategories[oldCategory];\n      delete newCategories[oldCategory];\n      setBudgetCategories(newCategories);\n\n      // Update category colors\n      const newColors = {\n        ...categoryColors\n      };\n      newColors[newCategoryName] = newColors[oldCategory];\n      delete newColors[oldCategory];\n      setCategoryColors(newColors);\n      setEditingCategory(null);\n      setEditingCategoryName('');\n    }\n  };\n  const cancelEditing = () => {\n    setEditingCategory(null);\n    setEditingCategoryName('');\n  };\n  const removeCategory = categoryToRemove => {\n    if (Object.keys(budgetCategories).length > 1) {\n      const newCategories = {\n        ...budgetCategories\n      };\n      delete newCategories[categoryToRemove];\n      setBudgetCategories(newCategories);\n      const newColors = {\n        ...categoryColors\n      };\n      delete newColors[categoryToRemove];\n      setCategoryColors(newColors);\n      setCategoryOrder(prev => prev.filter(cat => cat !== categoryToRemove));\n    } else {\n      alert('You must have at least one category!');\n    }\n  };\n  const getRandomColor = () => {\n    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#A8E6CF', '#FF8B94', '#FFC3A0', '#FFD3B6', '#FFAAA5', '#FF8B94', '#B8E6B8', '#FFB6C1', '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n  const handleDragStart = (e, category) => {\n    setDraggedItem(category);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const handleDrop = (e, targetCategory) => {\n    e.preventDefault();\n    if (draggedItem && draggedItem !== targetCategory) {\n      const newOrder = [...categoryOrder];\n      const draggedIndex = newOrder.indexOf(draggedItem);\n      const targetIndex = newOrder.indexOf(targetCategory);\n      newOrder.splice(draggedIndex, 1);\n      newOrder.splice(targetIndex, 0, draggedItem);\n      setCategoryOrder(newOrder);\n    }\n    setDraggedItem(null);\n  };\n  const handleColorChange = (category, color) => {\n    setCategoryColors(prev => ({\n      ...prev,\n      [category]: color\n    }));\n  };\n  const calculateTotal = () => {\n    return Object.values(budgetCategories).reduce((total, value) => {\n      return total + (parseFloat(value) || 0);\n    }, 0);\n  };\n  const calculateRemaining = () => {\n    const total = calculateTotal();\n    const income = parseFloat(monthlyIncome) || 0;\n    return income - total;\n  };\n  const calculateProjectedTotals = () => {\n    const months = parseInt(timeFrame);\n    const income = parseFloat(monthlyIncome) || 0;\n    const totalAllocated = calculateTotal();\n    const remaining = calculateRemaining();\n    return {\n      totalIncome: income * months,\n      totalAllocated: totalAllocated * months,\n      totalRemaining: remaining * months,\n      totalSaved: (budgetCategories.save || 0) * months,\n      totalBills: (budgetCategories.bills || 0) * months,\n      totalFood: (budgetCategories.food || 0) * months\n    };\n  };\n  const getTimeFrameLabel = () => {\n    const months = parseInt(timeFrame);\n    if (months === 1) return '1 Month';\n    if (months === 3) return '3 Months (Quarterly)';\n    if (months === 6) return '6 Months (Semi-Annually)';\n    if (months === 12) return '12 Months (Yearly)';\n    if (months === 24) return '24 Months (2 Years)';\n    if (months === 60) return '60 Months (5 Years)';\n    return `${months} Months`;\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount || 0);\n  };\n  const formatLargeCurrency = amount => {\n    if (amount >= 1000000) {\n      return `$${(amount / 1000000).toFixed(1)}M`;\n    } else if (amount >= 1000) {\n      return `$${(amount / 1000).toFixed(1)}K`;\n    }\n    return formatCurrency(amount);\n  };\n  const getCategoryPercentage = categoryValue => {\n    if (!monthlyIncome || !categoryValue) return 0;\n    return parseFloat(categoryValue) / parseFloat(monthlyIncome) * 100;\n  };\n  const getCategoryColor = category => {\n    return categoryColors[category] || '#6C5CE7';\n  };\n  const renderProgressBar = (category, value) => {\n    const percentage = getCategoryPercentage(value);\n    const color = getCategoryColor(category);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${Math.min(percentage, 100)}%`,\n            backgroundColor: color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-text\",\n        children: [percentage.toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this);\n  };\n  const renderPieChart = () => {\n    const categories = Object.entries(budgetCategories);\n    const total = calculateTotal();\n    const remaining = calculateRemaining();\n    const income = parseFloat(monthlyIncome) || 0;\n    if (income === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"Enter your monthly income to see budget distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 30\n    }, this);\n    let currentAngle = 0;\n    const radius = 80;\n    const centerX = 100;\n    const centerY = 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Budget Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"200\",\n        height: \"200\",\n        className: \"pie-chart\",\n        children: [categoryOrder.map(category => {\n          const value = budgetCategories[category];\n          if (!value || parseFloat(value) === 0) return null;\n          const percentage = parseFloat(value) / income * 100;\n          const angle = percentage / 100 * 360;\n          const startAngle = currentAngle;\n          const endAngle = currentAngle + angle;\n          const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n          const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n          const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n          const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n          const largeArcFlag = angle > 180 ? 1 : 0;\n          const pathData = [`M ${centerX} ${centerY}`, `L ${x1} ${y1}`, `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`, 'Z'].join(' ');\n          currentAngle += angle;\n          return /*#__PURE__*/_jsxDEV(\"path\", {\n            d: pathData,\n            fill: getCategoryColor(category),\n            stroke: \"#fff\",\n            strokeWidth: \"2\"\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this);\n        }), remaining > 0 && (() => {\n          const percentage = remaining / income * 100;\n          const angle = percentage / 100 * 360;\n          const startAngle = currentAngle;\n          const endAngle = currentAngle + angle;\n          const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n          const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n          const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n          const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n          const largeArcFlag = angle > 180 ? 1 : 0;\n          const pathData = [`M ${centerX} ${centerY}`, `L ${x1} ${y1}`, `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`, 'Z'].join(' ');\n          return /*#__PURE__*/_jsxDEV(\"path\", {\n            d: pathData,\n            fill: \"#6c757d\",\n            stroke: \"#fff\",\n            strokeWidth: \"2\"\n          }, \"unallocated\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-legend\",\n        children: [categoryOrder.map(category => {\n          const value = budgetCategories[category];\n          if (!value || parseFloat(value) === 0) return null;\n          const percentage = parseFloat(value) / income * 100;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: getCategoryColor(category)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-text\",\n              children: [formatCategoryName(category), \": \", percentage.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this);\n        }), remaining > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#6c757d'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-text\",\n            children: [\"Unallocated: \", (remaining / income * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this);\n  };\n  const renderProjectedTotals = () => {\n    const projected = calculateProjectedTotals();\n    const months = parseInt(timeFrame);\n    if (!monthlyIncome) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projected-totals\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Projected Totals - \", getTimeFrameLabel()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-frame-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeFrame\",\n          children: \"Time Frame:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeFrame\",\n          value: timeFrame,\n          onChange: e => setTimeFrame(e.target.value),\n          className: \"time-frame-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"1 Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"3 Months (Quarterly)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"6\",\n            children: \"6 Months (Semi-Annually)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"12\",\n            children: \"12 Months (Yearly)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"24\",\n            children: \"24 Months (2 Years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"60\",\n            children: \"60 Months (5 Years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Projection Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: renderProjectionChart()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projected-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Income:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value income\",\n            children: formatLargeCurrency(projected.totalIncome)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Allocated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value allocated\",\n            children: formatLargeCurrency(projected.totalAllocated)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Remaining:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value remaining\",\n            children: formatLargeCurrency(projected.totalRemaining)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), budgetCategories.save && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item highlight\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Saved:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value saved\",\n            children: formatLargeCurrency(projected.totalSaved)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), budgetCategories.bills && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Bills:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value bills\",\n            children: formatLargeCurrency(projected.totalBills)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), budgetCategories.food && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Food:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value food\",\n            children: formatLargeCurrency(projected.totalFood)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this);\n  };\n  const renderProjectionChart = () => {\n    const months = parseInt(timeFrame);\n    const income = parseFloat(monthlyIncome) || 0;\n    if (!income) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"Enter income to see projection chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 25\n    }, this);\n\n    // Make chart responsive - use container width or default to 600\n    const containerWidth = window.innerWidth;\n    const chartWidth = Math.max(600, Math.min(containerWidth - 100, 1200)); // Min 600, max 1200\n    const chartHeight = 400;\n    const padding = 80;\n    const chartAreaWidth = chartWidth - padding * 2;\n    const chartAreaHeight = chartHeight - padding * 2;\n\n    // Get categories with values\n    const categoriesWithValues = categoryOrder.filter(category => budgetCategories[category] && parseFloat(budgetCategories[category]) > 0);\n    if (categoriesWithValues.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: \"Add budget values to see category comparison\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 14\n      }, this);\n    }\n    const barHeight = chartAreaHeight / categoriesWithValues.length;\n    const maxValue = Math.max(...categoriesWithValues.map(category => parseFloat(budgetCategories[category]) * months));\n    const scale = chartAreaWidth / maxValue;\n\n    // Format large numbers for display\n    const formatLargeNumber = num => {\n      if (num >= 1000000) {\n        return `$${(num / 1000000).toFixed(1)}M`;\n      } else if (num >= 1000) {\n        return `$${(num / 1000).toFixed(1)}K`;\n      }\n      return formatCurrency(num);\n    };\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      height: chartHeight,\n      className: \"projection-chart\",\n      viewBox: `0 0 ${chartWidth} ${chartHeight}`,\n      preserveAspectRatio: \"xMidYMid meet\",\n      children: [[0, 0.25, 0.5, 0.75, 1].map((ratio, i) => {\n        const x = padding + chartAreaWidth * ratio;\n        const value = maxValue * ratio;\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"line\", {\n            x1: x,\n            y1: padding,\n            x2: x,\n            y2: chartHeight - padding,\n            stroke: \"#444\",\n            strokeWidth: \"1\",\n            strokeDasharray: \"5,5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: x,\n            y: chartHeight - padding + 15,\n            fill: \"#666\",\n            fontSize: \"10\",\n            textAnchor: \"middle\",\n            children: formatLargeNumber(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this);\n      }), categoriesWithValues.map((category, index) => {\n        const categoryValue = parseFloat(budgetCategories[category]);\n        const totalValue = categoryValue * months;\n        const barWidth = totalValue * scale;\n        const y = padding + index * barHeight + barHeight * 0.1;\n        const barY = y + barHeight * 0.3;\n        const barHeightActual = barHeight * 0.4;\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: padding,\n            y: barY,\n            width: barWidth,\n            height: barHeightActual,\n            fill: getCategoryColor(category),\n            rx: \"3\",\n            ry: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: padding - 10,\n            y: barY + barHeightActual / 2 + 4,\n            fill: \"#ccc\",\n            fontSize: \"12\",\n            textAnchor: \"end\",\n            children: formatCategoryName(category)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: padding + barWidth + 10,\n            y: barY + barHeightActual / 2 + 4,\n            fill: \"#fff\",\n            fontSize: \"11\",\n            fontWeight: \"bold\",\n            children: formatLargeNumber(totalValue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: padding + barWidth + 10,\n            y: barY + barHeightActual / 2 + 18,\n            fill: \"#999\",\n            fontSize: \"9\",\n            children: [\"(\", formatLargeNumber(categoryValue), \"/month)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n          x: padding,\n          y: padding + categoriesWithValues.length * barHeight + barHeight * 0.1,\n          width: chartAreaWidth,\n          height: barHeight * 0.4,\n          fill: \"#28a745\",\n          opacity: \"0.3\",\n          rx: \"3\",\n          ry: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: padding - 10,\n          y: padding + categoriesWithValues.length * barHeight + barHeight * 0.3,\n          fill: \"#ccc\",\n          fontSize: \"12\",\n          textAnchor: \"end\",\n          children: \"Total Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: padding + chartAreaWidth + 10,\n          y: padding + categoriesWithValues.length * barHeight + barHeight * 0.3,\n          fill: \"#28a745\",\n          fontSize: \"11\",\n          fontWeight: \"bold\",\n          children: formatLargeNumber(income * months)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: chartWidth / 2,\n        y: 20,\n        fill: \"#fff\",\n        fontSize: \"14\",\n        fontWeight: \"bold\",\n        textAnchor: \"middle\",\n        children: [\"Category Comparison - \", getTimeFrameLabel()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this);\n  };\n  const formatCategoryName = category => {\n    return category.charAt(0).toUpperCase() + category.slice(1).replace(/_/g, ' ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Welcome to your Budget Calculator!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"payBox\",\n        children: \"How much will you be paid this month?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"payBox\",\n        value: monthlyIncome,\n        onChange: handleIncomeChange,\n        placeholder: \"Enter amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"budget-table-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"budget-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Budget Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"calcTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"budget-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [categoryOrder.map(category => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: draggedItem === category ? 'dragging' : '',\n                draggable: true,\n                onDragStart: e => handleDragStart(e, category),\n                onDragOver: handleDragOver,\n                onDrop: e => handleDrop(e, category),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"category-name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"drag-handle\",\n                    children: \"\\u22EE\\u22EE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 673,\n                    columnNumber: 23\n                  }, this), editingCategory === category ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: editingCategoryName,\n                    onChange: e => setEditingCategoryName(e.target.value),\n                    onBlur: () => saveCategoryName(category),\n                    onKeyPress: e => {\n                      if (e.key === 'Enter') {\n                        saveCategoryName(category);\n                      }\n                    },\n                    autoFocus: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 675,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => startEditingCategory(category),\n                    children: formatCategoryName(category)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 25\n                  }, this), editingCategory === category && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"cancel-edit-btn\",\n                    onClick: cancelEditing,\n                    title: \"Cancel edit\",\n                    children: \"\\u2715\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"budget-input\",\n                    value: budgetCategories[category],\n                    onChange: e => handleCategoryChange(category, e.target.value),\n                    placeholder: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: renderProgressBar(category, budgetCategories[category])\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"color\",\n                    className: \"color-picker\",\n                    value: getCategoryColor(category),\n                    onChange: e => handleColorChange(category, e.target.value),\n                    title: \"Choose color\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-category-btn\",\n                    onClick: () => removeCategory(category),\n                    title: \"Delete category\",\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 722,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 21\n                }, this)]\n              }, category, true, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"template-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"category-name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"drag-handle\",\n                    children: \"\\u22EE\\u22EE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"template-input\",\n                    placeholder: \"Enter category name...\",\n                    value: templateCategory,\n                    onChange: e => setTemplateCategory(e.target.value),\n                    onKeyPress: e => {\n                      if (e.key === 'Enter') {\n                        if (addCategoryFromTemplate(templateCategory)) {\n                          setTemplateCategory('');\n                        }\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"budget-input\",\n                    disabled: true,\n                    placeholder: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progress-fill\",\n                        style: {\n                          width: '0%'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 763,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-text\",\n                      children: \"0%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 765,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 761,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"color\",\n                    className: \"color-picker\",\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 769,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"add-category-btn\",\n                    onClick: () => {\n                      if (addCategoryFromTemplate(templateCategory)) {\n                        setTemplateCategory('');\n                      }\n                    },\n                    title: \"Add category\",\n                    disabled: !templateCategory.trim(),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 776,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 775,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"total-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Allocated\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 792,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 792,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: formatCurrency(calculateTotal())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 793,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progress-fill total-progress\",\n                        style: {\n                          width: `${Math.min(calculateTotal() / parseFloat(monthlyIncome || 1) * 100, 100)}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 797,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 796,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-text\",\n                      children: monthlyIncome ? `${(calculateTotal() / parseFloat(monthlyIncome) * 100).toFixed(1)}%` : '0%'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 804,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 795,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"remaining-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Remaining\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 813,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: formatCurrency(calculateRemaining())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 814,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progress-fill remaining-progress\",\n                        style: {\n                          width: `${Math.min(calculateRemaining() / parseFloat(monthlyIncome || 1) * 100, 100)}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 818,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 817,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-text\",\n                      children: monthlyIncome ? `${(calculateRemaining() / parseFloat(monthlyIncome) * 100).toFixed(1)}%` : '0%'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 825,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 816,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 830,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 831,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-section\",\n        children: renderPieChart()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 7\n    }, this), renderProjectedTotals()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 632,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetCalculator, \"y4HkjnRVUonJwzamHyadCOovq0E=\");\n_c = BudgetCalculator;\nexport default BudgetCalculator;\nvar _c;\n$RefreshReg$(_c, \"BudgetCalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BudgetCalculator","_s","monthlyIncome","setMonthlyIncome","budgetCategories","setBudgetCategories","bills","food","save","categoryColors","setCategoryColors","categoryOrder","setCategoryOrder","draggedItem","setDraggedItem","timeFrame","setTimeFrame","templateCategory","setTemplateCategory","isAddingCategory","setIsAddingCategory","editingCategory","setEditingCategory","editingCategoryName","setEditingCategoryName","handleIncomeChange","e","target","value","handleCategoryChange","category","prev","addCategory","newCategoryName","prompt","trim","trimmedName","toLowerCase","replace","hasOwnProperty","getRandomColor","alert","addCategoryFromTemplate","categoryName","startEditingCategory","formatCategoryName","saveCategoryName","oldCategory","newOrder","map","cat","newCategories","newColors","cancelEditing","removeCategory","categoryToRemove","Object","keys","length","filter","colors","Math","floor","random","handleDragStart","dataTransfer","effectAllowed","handleDragOver","preventDefault","dropEffect","handleDrop","targetCategory","draggedIndex","indexOf","targetIndex","splice","handleColorChange","color","calculateTotal","values","reduce","total","parseFloat","calculateRemaining","income","calculateProjectedTotals","months","parseInt","totalAllocated","remaining","totalIncome","totalRemaining","totalSaved","totalBills","totalFood","getTimeFrameLabel","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatLargeCurrency","toFixed","getCategoryPercentage","categoryValue","getCategoryColor","renderProgressBar","percentage","className","children","width","min","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","renderPieChart","categories","entries","currentAngle","radius","centerX","centerY","height","angle","startAngle","endAngle","x1","cos","PI","y1","sin","x2","y2","largeArcFlag","pathData","join","d","fill","stroke","strokeWidth","renderProjectedTotals","projected","htmlFor","id","onChange","renderProjectionChart","containerWidth","window","innerWidth","chartWidth","max","chartHeight","padding","chartAreaWidth","chartAreaHeight","categoriesWithValues","barHeight","maxValue","scale","formatLargeNumber","num","viewBox","preserveAspectRatio","ratio","i","x","strokeDasharray","y","fontSize","textAnchor","index","totalValue","barWidth","barY","barHeightActual","rx","ry","fontWeight","opacity","charAt","toUpperCase","slice","type","placeholder","draggable","onDragStart","onDragOver","onDrop","onBlur","onKeyPress","key","autoFocus","onClick","title","disabled","_c","$RefreshReg$"],"sources":["C:/Source/BudgetCalculator/src/components/BudgetCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst BudgetCalculator = () => {\n  const [monthlyIncome, setMonthlyIncome] = useState('');\n  const [budgetCategories, setBudgetCategories] = useState({\n    bills: '',\n    food: '',\n    save: ''\n  });\n  const [categoryColors, setCategoryColors] = useState({\n    bills: '#FF6B6B',\n    food: '#4ECDC4',\n    save: '#45B7D1'\n  });\n  const [categoryOrder, setCategoryOrder] = useState([\n    'bills', 'food', 'save'\n  ]);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [timeFrame, setTimeFrame] = useState('12'); // Default to 12 months\n  const [templateCategory, setTemplateCategory] = useState('');\n  const [isAddingCategory, setIsAddingCategory] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editingCategoryName, setEditingCategoryName] = useState('');\n\n  const handleIncomeChange = (e) => {\n    setMonthlyIncome(e.target.value);\n  };\n\n  const handleCategoryChange = (category, value) => {\n    setBudgetCategories(prev => ({\n      ...prev,\n      [category]: value\n    }));\n  };\n\n  const addCategory = () => {\n    const newCategoryName = prompt('Enter category name:');\n    if (newCategoryName && newCategoryName.trim()) {\n      const trimmedName = newCategoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n      if (!budgetCategories.hasOwnProperty(trimmedName)) {\n        setBudgetCategories(prev => ({\n          ...prev,\n          [trimmedName]: ''\n        }));\n        setCategoryColors(prev => ({\n          ...prev,\n          [trimmedName]: getRandomColor()\n        }));\n        setCategoryOrder(prev => [...prev, trimmedName]);\n      } else {\n        alert('Category already exists!');\n      }\n    }\n  };\n\n  const addCategoryFromTemplate = (categoryName) => {\n    if (categoryName && categoryName.trim()) {\n      const trimmedName = categoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n      if (!budgetCategories.hasOwnProperty(trimmedName)) {\n        setBudgetCategories(prev => ({\n          ...prev,\n          [trimmedName]: ''\n        }));\n        setCategoryColors(prev => ({\n          ...prev,\n          [trimmedName]: getRandomColor()\n        }));\n        setCategoryOrder(prev => [...prev, trimmedName]);\n        return true;\n      } else {\n        alert('Category already exists!');\n        return false;\n      }\n    }\n    return false;\n  };\n\n  const startEditingCategory = (category) => {\n    setEditingCategory(category);\n    setEditingCategoryName(formatCategoryName(category));\n  };\n\n  const saveCategoryName = (oldCategory) => {\n    if (editingCategoryName && editingCategoryName.trim()) {\n      const newCategoryName = editingCategoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n      \n      // Check if the new name already exists (excluding the current category)\n      if (newCategoryName !== oldCategory && budgetCategories.hasOwnProperty(newCategoryName)) {\n        alert('Category name already exists!');\n        return;\n      }\n\n      // Update category order\n      const newOrder = categoryOrder.map(cat => cat === oldCategory ? newCategoryName : cat);\n      setCategoryOrder(newOrder);\n\n      // Update budget categories\n      const newCategories = { ...budgetCategories };\n      newCategories[newCategoryName] = newCategories[oldCategory];\n      delete newCategories[oldCategory];\n      setBudgetCategories(newCategories);\n\n      // Update category colors\n      const newColors = { ...categoryColors };\n      newColors[newCategoryName] = newColors[oldCategory];\n      delete newColors[oldCategory];\n      setCategoryColors(newColors);\n\n      setEditingCategory(null);\n      setEditingCategoryName('');\n    }\n  };\n\n  const cancelEditing = () => {\n    setEditingCategory(null);\n    setEditingCategoryName('');\n  };\n\n  const removeCategory = (categoryToRemove) => {\n    if (Object.keys(budgetCategories).length > 1) {\n      const newCategories = { ...budgetCategories };\n      delete newCategories[categoryToRemove];\n      setBudgetCategories(newCategories);\n      \n      const newColors = { ...categoryColors };\n      delete newColors[categoryToRemove];\n      setCategoryColors(newColors);\n      \n      setCategoryOrder(prev => prev.filter(cat => cat !== categoryToRemove));\n    } else {\n      alert('You must have at least one category!');\n    }\n  };\n\n  const getRandomColor = () => {\n    const colors = [\n      '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD',\n      '#A8E6CF', '#FF8B94', '#FFC3A0', '#FFD3B6', '#FFAAA5', '#FF8B94',\n      '#B8E6B8', '#FFB6C1', '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE'\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  const handleDragStart = (e, category) => {\n    setDraggedItem(category);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const handleDrop = (e, targetCategory) => {\n    e.preventDefault();\n    if (draggedItem && draggedItem !== targetCategory) {\n      const newOrder = [...categoryOrder];\n      const draggedIndex = newOrder.indexOf(draggedItem);\n      const targetIndex = newOrder.indexOf(targetCategory);\n      \n      newOrder.splice(draggedIndex, 1);\n      newOrder.splice(targetIndex, 0, draggedItem);\n      \n      setCategoryOrder(newOrder);\n    }\n    setDraggedItem(null);\n  };\n\n  const handleColorChange = (category, color) => {\n    setCategoryColors(prev => ({\n      ...prev,\n      [category]: color\n    }));\n  };\n\n  const calculateTotal = () => {\n    return Object.values(budgetCategories).reduce((total, value) => {\n      return total + (parseFloat(value) || 0);\n    }, 0);\n  };\n\n  const calculateRemaining = () => {\n    const total = calculateTotal();\n    const income = parseFloat(monthlyIncome) || 0;\n    return income - total;\n  };\n\n  const calculateProjectedTotals = () => {\n    const months = parseInt(timeFrame);\n    const income = parseFloat(monthlyIncome) || 0;\n    const totalAllocated = calculateTotal();\n    const remaining = calculateRemaining();\n    \n    return {\n      totalIncome: income * months,\n      totalAllocated: totalAllocated * months,\n      totalRemaining: remaining * months,\n      totalSaved: (budgetCategories.save || 0) * months,\n      totalBills: (budgetCategories.bills || 0) * months,\n      totalFood: (budgetCategories.food || 0) * months\n    };\n  };\n\n  const getTimeFrameLabel = () => {\n    const months = parseInt(timeFrame);\n    if (months === 1) return '1 Month';\n    if (months === 3) return '3 Months (Quarterly)';\n    if (months === 6) return '6 Months (Semi-Annually)';\n    if (months === 12) return '12 Months (Yearly)';\n    if (months === 24) return '24 Months (2 Years)';\n    if (months === 60) return '60 Months (5 Years)';\n    return `${months} Months`;\n  };\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount || 0);\n  };\n\n  const formatLargeCurrency = (amount) => {\n    if (amount >= 1000000) {\n      return `$${(amount / 1000000).toFixed(1)}M`;\n    } else if (amount >= 1000) {\n      return `$${(amount / 1000).toFixed(1)}K`;\n    }\n    return formatCurrency(amount);\n  };\n\n  const getCategoryPercentage = (categoryValue) => {\n    if (!monthlyIncome || !categoryValue) return 0;\n    return (parseFloat(categoryValue) / parseFloat(monthlyIncome)) * 100;\n  };\n\n  const getCategoryColor = (category) => {\n    return categoryColors[category] || '#6C5CE7';\n  };\n\n  const renderProgressBar = (category, value) => {\n    const percentage = getCategoryPercentage(value);\n    const color = getCategoryColor(category);\n    \n    return (\n      <div className=\"progress-container\">\n        <div className=\"progress-bar\">\n          <div \n            className=\"progress-fill\"\n            style={{ \n              width: `${Math.min(percentage, 100)}%`,\n              backgroundColor: color\n            }}\n          ></div>\n        </div>\n        <span className=\"progress-text\">{percentage.toFixed(1)}%</span>\n      </div>\n    );\n  };\n\n  const renderPieChart = () => {\n    const categories = Object.entries(budgetCategories);\n    const total = calculateTotal();\n    const remaining = calculateRemaining();\n    const income = parseFloat(monthlyIncome) || 0;\n    \n    if (income === 0) return <div className=\"no-data\">Enter your monthly income to see budget distribution</div>;\n\n    let currentAngle = 0;\n    const radius = 80;\n    const centerX = 100;\n    const centerY = 100;\n\n    return (\n      <div className=\"pie-chart-container\">\n        <h3>Budget Distribution</h3>\n        <svg width=\"200\" height=\"200\" className=\"pie-chart\">\n          {/* Render allocated categories in order */}\n          {categoryOrder.map(category => {\n            const value = budgetCategories[category];\n            if (!value || parseFloat(value) === 0) return null;\n            \n            const percentage = (parseFloat(value) / income) * 100;\n            const angle = (percentage / 100) * 360;\n            const startAngle = currentAngle;\n            const endAngle = currentAngle + angle;\n            \n            const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n            const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n            const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n            const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n            \n            const largeArcFlag = angle > 180 ? 1 : 0;\n            \n            const pathData = [\n              `M ${centerX} ${centerY}`,\n              `L ${x1} ${y1}`,\n              `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,\n              'Z'\n            ].join(' ');\n            \n            currentAngle += angle;\n            \n            return (\n              <path\n                key={category}\n                d={pathData}\n                fill={getCategoryColor(category)}\n                stroke=\"#fff\"\n                strokeWidth=\"2\"\n              />\n            );\n          })}\n          \n          {/* Render unallocated/remaining slice */}\n          {remaining > 0 && (\n            (() => {\n              const percentage = (remaining / income) * 100;\n              const angle = (percentage / 100) * 360;\n              const startAngle = currentAngle;\n              const endAngle = currentAngle + angle;\n              \n              const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n              const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n              const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n              const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n              \n              const largeArcFlag = angle > 180 ? 1 : 0;\n              \n              const pathData = [\n                `M ${centerX} ${centerY}`,\n                `L ${x1} ${y1}`,\n                `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,\n                'Z'\n              ].join(' ');\n              \n              return (\n                <path\n                  key=\"unallocated\"\n                  d={pathData}\n                  fill=\"#6c757d\"\n                  stroke=\"#fff\"\n                  strokeWidth=\"2\"\n                />\n              );\n            })()\n          )}\n        </svg>\n        <div className=\"chart-legend\">\n          {/* Show allocated categories in order */}\n          {categoryOrder.map(category => {\n            const value = budgetCategories[category];\n            if (!value || parseFloat(value) === 0) return null;\n            const percentage = (parseFloat(value) / income) * 100;\n            return (\n              <div key={category} className=\"legend-item\">\n                <div \n                  className=\"legend-color\" \n                  style={{ backgroundColor: getCategoryColor(category) }}\n                ></div>\n                <span className=\"legend-text\">\n                  {formatCategoryName(category)}: {percentage.toFixed(1)}%\n                </span>\n              </div>\n            );\n          })}\n          \n          {/* Show unallocated/remaining */}\n          {remaining > 0 && (\n            <div className=\"legend-item\">\n              <div \n                className=\"legend-color\" \n                style={{ backgroundColor: '#6c757d' }}\n              ></div>\n              <span className=\"legend-text\">\n                Unallocated: {((remaining / income) * 100).toFixed(1)}%\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const renderProjectedTotals = () => {\n    const projected = calculateProjectedTotals();\n    const months = parseInt(timeFrame);\n    \n    if (!monthlyIncome) return null;\n\n    return (\n      <div className=\"projected-totals\">\n        <h3>Projected Totals - {getTimeFrameLabel()}</h3>\n        <div className=\"time-frame-selector\">\n          <label htmlFor=\"timeFrame\">Time Frame:</label>\n          <select \n            id=\"timeFrame\" \n            value={timeFrame} \n            onChange={(e) => setTimeFrame(e.target.value)}\n            className=\"time-frame-select\"\n          >\n            <option value=\"1\">1 Month</option>\n            <option value=\"3\">3 Months (Quarterly)</option>\n            <option value=\"6\">6 Months (Semi-Annually)</option>\n            <option value=\"12\">12 Months (Yearly)</option>\n            <option value=\"24\">24 Months (2 Years)</option>\n            <option value=\"60\">60 Months (5 Years)</option>\n          </select>\n        </div>\n        \n        {/* Bar Chart Section */}\n        <div className=\"chart-section\">\n          <h4>Projection Chart</h4>\n          <div className=\"chart-container\">\n            {renderProjectionChart()}\n          </div>\n        </div>\n        \n        <div className=\"projected-grid\">\n          <div className=\"projected-item\">\n            <span className=\"projected-label\">Total Income:</span>\n            <span className=\"projected-value income\">{formatLargeCurrency(projected.totalIncome)}</span>\n          </div>\n          <div className=\"projected-item\">\n            <span className=\"projected-label\">Total Allocated:</span>\n            <span className=\"projected-value allocated\">{formatLargeCurrency(projected.totalAllocated)}</span>\n          </div>\n          <div className=\"projected-item\">\n            <span className=\"projected-label\">Total Remaining:</span>\n            <span className=\"projected-value remaining\">{formatLargeCurrency(projected.totalRemaining)}</span>\n          </div>\n          {budgetCategories.save && (\n            <div className=\"projected-item highlight\">\n              <span className=\"projected-label\">Total Saved:</span>\n              <span className=\"projected-value saved\">{formatLargeCurrency(projected.totalSaved)}</span>\n            </div>\n          )}\n          {budgetCategories.bills && (\n            <div className=\"projected-item\">\n              <span className=\"projected-label\">Total Bills:</span>\n              <span className=\"projected-value bills\">{formatLargeCurrency(projected.totalBills)}</span>\n            </div>\n          )}\n          {budgetCategories.food && (\n            <div className=\"projected-item\">\n              <span className=\"projected-label\">Total Food:</span>\n            <span className=\"projected-value food\">{formatLargeCurrency(projected.totalFood)}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const renderProjectionChart = () => {\n    const months = parseInt(timeFrame);\n    const income = parseFloat(monthlyIncome) || 0;\n    \n    if (!income) return <div className=\"no-data\">Enter income to see projection chart</div>;\n\n    // Make chart responsive - use container width or default to 600\n    const containerWidth = window.innerWidth;\n    const chartWidth = Math.max(600, Math.min(containerWidth - 100, 1200)); // Min 600, max 1200\n    const chartHeight = 400;\n    const padding = 80;\n    const chartAreaWidth = chartWidth - padding * 2;\n    const chartAreaHeight = chartHeight - padding * 2;\n    \n    // Get categories with values\n    const categoriesWithValues = categoryOrder.filter(category => \n      budgetCategories[category] && parseFloat(budgetCategories[category]) > 0\n    );\n    \n    if (categoriesWithValues.length === 0) {\n      return <div className=\"no-data\">Add budget values to see category comparison</div>;\n    }\n\n    const barHeight = chartAreaHeight / categoriesWithValues.length;\n    const maxValue = Math.max(...categoriesWithValues.map(category => \n      parseFloat(budgetCategories[category]) * months\n    ));\n    const scale = chartAreaWidth / maxValue;\n\n    // Format large numbers for display\n    const formatLargeNumber = (num) => {\n      if (num >= 1000000) {\n        return `$${(num / 1000000).toFixed(1)}M`;\n      } else if (num >= 1000) {\n        return `$${(num / 1000).toFixed(1)}K`;\n      }\n      return formatCurrency(num);\n    };\n\n    return (\n      <svg width=\"100%\" height={chartHeight} className=\"projection-chart\" viewBox={`0 0 ${chartWidth} ${chartHeight}`} preserveAspectRatio=\"xMidYMid meet\">\n        {/* Grid lines */}\n        {[0, 0.25, 0.5, 0.75, 1].map((ratio, i) => {\n          const x = padding + chartAreaWidth * ratio;\n          const value = maxValue * ratio;\n          return (\n            <g key={i}>\n              <line\n                x1={x}\n                y1={padding}\n                x2={x}\n                y2={chartHeight - padding}\n                stroke=\"#444\"\n                strokeWidth=\"1\"\n                strokeDasharray=\"5,5\"\n              />\n              <text\n                x={x}\n                y={chartHeight - padding + 15}\n                fill=\"#666\"\n                fontSize=\"10\"\n                textAnchor=\"middle\"\n              >\n                {formatLargeNumber(value)}\n              </text>\n            </g>\n          );\n        })}\n\n        {/* Category bars */}\n        {categoriesWithValues.map((category, index) => {\n          const categoryValue = parseFloat(budgetCategories[category]);\n          const totalValue = categoryValue * months;\n          const barWidth = totalValue * scale;\n          const y = padding + index * barHeight + barHeight * 0.1;\n          const barY = y + barHeight * 0.3;\n          const barHeightActual = barHeight * 0.4;\n          \n          return (\n            <g key={category}>\n              {/* Category bar */}\n              <rect\n                x={padding}\n                y={barY}\n                width={barWidth}\n                height={barHeightActual}\n                fill={getCategoryColor(category)}\n                rx=\"3\"\n                ry=\"3\"\n              />\n              \n              {/* Category label */}\n              <text\n                x={padding - 10}\n                y={barY + barHeightActual / 2 + 4}\n                fill=\"#ccc\"\n                fontSize=\"12\"\n                textAnchor=\"end\"\n              >\n                {formatCategoryName(category)}\n              </text>\n              \n              {/* Value label on bar */}\n              <text\n                x={padding + barWidth + 10}\n                y={barY + barHeightActual / 2 + 4}\n                fill=\"#fff\"\n                fontSize=\"11\"\n                fontWeight=\"bold\"\n              >\n                {formatLargeNumber(totalValue)}\n              </text>\n              \n              {/* Monthly value label */}\n              <text\n                x={padding + barWidth + 10}\n                y={barY + barHeightActual / 2 + 18}\n                fill=\"#999\"\n                fontSize=\"9\"\n              >\n                ({formatLargeNumber(categoryValue)}/month)\n              </text>\n            </g>\n          );\n        })}\n\n        {/* Total income bar for comparison */}\n        <g>\n          <rect\n            x={padding}\n            y={padding + categoriesWithValues.length * barHeight + barHeight * 0.1}\n            width={chartAreaWidth}\n            height={barHeight * 0.4}\n            fill=\"#28a745\"\n            opacity=\"0.3\"\n            rx=\"3\"\n            ry=\"3\"\n          />\n          <text\n            x={padding - 10}\n            y={padding + categoriesWithValues.length * barHeight + barHeight * 0.3}\n            fill=\"#ccc\"\n            fontSize=\"12\"\n            textAnchor=\"end\"\n          >\n            Total Income\n          </text>\n          <text\n            x={padding + chartAreaWidth + 10}\n            y={padding + categoriesWithValues.length * barHeight + barHeight * 0.3}\n            fill=\"#28a745\"\n            fontSize=\"11\"\n            fontWeight=\"bold\"\n          >\n            {formatLargeNumber(income * months)}\n          </text>\n        </g>\n\n        {/* Chart title */}\n        <text\n          x={chartWidth / 2}\n          y={20}\n          fill=\"#fff\"\n          fontSize=\"14\"\n          fontWeight=\"bold\"\n          textAnchor=\"middle\"\n        >\n          Category Comparison - {getTimeFrameLabel()}\n        </text>\n      </svg>\n    );\n  };\n\n  const formatCategoryName = (category) => {\n    return category.charAt(0).toUpperCase() + category.slice(1).replace(/_/g, ' ');\n  };\n\n  return (\n    <div>\n      <header>Welcome to your Budget Calculator!</header>\n      \n      <div className=\"budget-form\">\n        <label htmlFor=\"payBox\">How much will you be paid this month?</label>\n        <input\n          type=\"number\"\n          id=\"payBox\"\n          value={monthlyIncome}\n          onChange={handleIncomeChange}\n          placeholder=\"Enter amount\"\n        />\n      </div>\n\n      <div className=\"budget-container\">\n        <div className=\"budget-table-section\">\n          <div className=\"budget-header\">\n            <h3>Budget Breakdown</h3>\n          </div>\n          <div id=\"calcTable\">\n            <table className=\"budget-table\">\n              <thead>\n                <tr>\n                  <th>Category</th>\n                  <th>Amount</th>\n                  <th>Progress</th>\n                  <th>Color</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {categoryOrder.map((category) => (\n                  <tr \n                    key={category}\n                    className={draggedItem === category ? 'dragging' : ''}\n                    draggable\n                    onDragStart={(e) => handleDragStart(e, category)}\n                    onDragOver={handleDragOver}\n                    onDrop={(e) => handleDrop(e, category)}\n                  >\n                    <td className=\"category-name\">\n                      <span className=\"drag-handle\">⋮⋮</span>\n                      {editingCategory === category ? (\n                        <input\n                          type=\"text\"\n                          value={editingCategoryName}\n                          onChange={(e) => setEditingCategoryName(e.target.value)}\n                          onBlur={() => saveCategoryName(category)}\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter') {\n                              saveCategoryName(category);\n                            }\n                          }}\n                          autoFocus\n                        />\n                      ) : (\n                        <span onClick={() => startEditingCategory(category)}>{formatCategoryName(category)}</span>\n                      )}\n                      {editingCategory === category && (\n                        <button \n                          className=\"cancel-edit-btn\"\n                          onClick={cancelEditing}\n                          title=\"Cancel edit\"\n                        >\n                          ✕\n                        </button>\n                      )}\n                    </td>\n                    <td>\n                      <input\n                        type=\"number\"\n                        className=\"budget-input\"\n                        value={budgetCategories[category]}\n                        onChange={(e) => handleCategoryChange(category, e.target.value)}\n                        placeholder=\"0\"\n                      />\n                    </td>\n                    <td>\n                      {renderProgressBar(category, budgetCategories[category])}\n                    </td>\n                    <td>\n                      <input\n                        type=\"color\"\n                        className=\"color-picker\"\n                        value={getCategoryColor(category)}\n                        onChange={(e) => handleColorChange(category, e.target.value)}\n                        title=\"Choose color\"\n                      />\n                    </td>\n                    <td>\n                      <button \n                        className=\"delete-category-btn\"\n                        onClick={() => removeCategory(category)}\n                        title=\"Delete category\"\n                      >\n                        ×\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n                \n                {/* Template row for adding new category */}\n                <tr className=\"template-row\">\n                  <td className=\"category-name\">\n                    <span className=\"drag-handle\">⋮⋮</span>\n                    <input\n                      type=\"text\"\n                      className=\"template-input\"\n                      placeholder=\"Enter category name...\"\n                      value={templateCategory}\n                      onChange={(e) => setTemplateCategory(e.target.value)}\n                      onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                          if (addCategoryFromTemplate(templateCategory)) {\n                            setTemplateCategory('');\n                          }\n                        }\n                      }}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      type=\"number\"\n                      className=\"budget-input\"\n                      disabled\n                      placeholder=\"0\"\n                    />\n                  </td>\n                  <td>\n                    <div className=\"progress-container\">\n                      <div className=\"progress-bar\">\n                        <div className=\"progress-fill\" style={{ width: '0%' }}></div>\n                      </div>\n                      <span className=\"progress-text\">0%</span>\n                    </div>\n                  </td>\n                  <td>\n                    <input\n                      type=\"color\"\n                      className=\"color-picker\"\n                      disabled\n                    />\n                  </td>\n                  <td>\n                    <button \n                      className=\"add-category-btn\"\n                      onClick={() => {\n                        if (addCategoryFromTemplate(templateCategory)) {\n                          setTemplateCategory('');\n                        }\n                      }}\n                      title=\"Add category\"\n                      disabled={!templateCategory.trim()}\n                    >\n                      +\n                    </button>\n                  </td>\n                </tr>\n                \n                <tr className=\"total-row\">\n                  <td><strong>Total Allocated</strong></td>\n                  <td><strong>{formatCurrency(calculateTotal())}</strong></td>\n                  <td>\n                    <div className=\"progress-container\">\n                      <div className=\"progress-bar\">\n                        <div \n                          className=\"progress-fill total-progress\"\n                          style={{ \n                            width: `${Math.min((calculateTotal() / parseFloat(monthlyIncome || 1)) * 100, 100)}%`\n                          }}\n                        ></div>\n                      </div>\n                      <span className=\"progress-text\">\n                        {monthlyIncome ? `${((calculateTotal() / parseFloat(monthlyIncome)) * 100).toFixed(1)}%` : '0%'}\n                      </span>\n                    </div>\n                  </td>\n                  <td></td>\n                  <td></td>\n                </tr>\n                <tr className=\"remaining-row\">\n                  <td><strong>Remaining</strong></td>\n                  <td><strong>{formatCurrency(calculateRemaining())}</strong></td>\n                  <td>\n                    <div className=\"progress-container\">\n                      <div className=\"progress-bar\">\n                        <div \n                          className=\"progress-fill remaining-progress\"\n                          style={{ \n                            width: `${Math.min((calculateRemaining() / parseFloat(monthlyIncome || 1)) * 100, 100)}%`\n                          }}\n                        ></div>\n                      </div>\n                      <span className=\"progress-text\">\n                        {monthlyIncome ? `${((calculateRemaining() / parseFloat(monthlyIncome)) * 100).toFixed(1)}%` : '0%'}\n                      </span>\n                    </div>\n                  </td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div className=\"visualization-section\">\n          {renderPieChart()}\n        </div>\n      </div>\n\n      {renderProjectedTotals()}\n    </div>\n  );\n};\n\nexport default BudgetCalculator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}