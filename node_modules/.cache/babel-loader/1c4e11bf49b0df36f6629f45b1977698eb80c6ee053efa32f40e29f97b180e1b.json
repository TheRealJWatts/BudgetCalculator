{"ast":null,"code":"var _jsxFileName = \"C:\\\\Source\\\\BudgetCalculator\\\\src\\\\components\\\\BudgetCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BudgetCalculator = () => {\n  _s();\n  const [monthlyIncome, setMonthlyIncome] = useState('');\n  const [budgetCategories, setBudgetCategories] = useState({\n    bills: '',\n    food: '',\n    save: ''\n  });\n  const [categoryColors, setCategoryColors] = useState({\n    bills: '#FF6B6B',\n    food: '#4ECDC4',\n    save: '#45B7D1'\n  });\n  const [categoryOrder, setCategoryOrder] = useState(['bills', 'food', 'save']);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [timeFrame, setTimeFrame] = useState('12'); // Default to 12 months\n\n  const handleIncomeChange = e => {\n    setMonthlyIncome(e.target.value);\n  };\n  const handleCategoryChange = (category, value) => {\n    setBudgetCategories(prev => ({\n      ...prev,\n      [category]: value\n    }));\n  };\n  const addCategory = () => {\n    const newCategoryName = prompt('Enter category name:');\n    if (newCategoryName && newCategoryName.trim()) {\n      const trimmedName = newCategoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n      if (!budgetCategories.hasOwnProperty(trimmedName)) {\n        setBudgetCategories(prev => ({\n          ...prev,\n          [trimmedName]: ''\n        }));\n        setCategoryColors(prev => ({\n          ...prev,\n          [trimmedName]: getRandomColor()\n        }));\n        setCategoryOrder(prev => [...prev, trimmedName]);\n      } else {\n        alert('Category already exists!');\n      }\n    }\n  };\n  const removeCategory = categoryToRemove => {\n    if (Object.keys(budgetCategories).length > 1) {\n      const newCategories = {\n        ...budgetCategories\n      };\n      delete newCategories[categoryToRemove];\n      setBudgetCategories(newCategories);\n      const newColors = {\n        ...categoryColors\n      };\n      delete newColors[categoryToRemove];\n      setCategoryColors(newColors);\n      setCategoryOrder(prev => prev.filter(cat => cat !== categoryToRemove));\n    } else {\n      alert('You must have at least one category!');\n    }\n  };\n  const getRandomColor = () => {\n    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#A8E6CF', '#FF8B94', '#FFC3A0', '#FFD3B6', '#FFAAA5', '#FF8B94', '#B8E6B8', '#FFB6C1', '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n  const handleDragStart = (e, category) => {\n    setDraggedItem(category);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const handleDrop = (e, targetCategory) => {\n    e.preventDefault();\n    if (draggedItem && draggedItem !== targetCategory) {\n      const newOrder = [...categoryOrder];\n      const draggedIndex = newOrder.indexOf(draggedItem);\n      const targetIndex = newOrder.indexOf(targetCategory);\n      newOrder.splice(draggedIndex, 1);\n      newOrder.splice(targetIndex, 0, draggedItem);\n      setCategoryOrder(newOrder);\n    }\n    setDraggedItem(null);\n  };\n  const handleColorChange = (category, color) => {\n    setCategoryColors(prev => ({\n      ...prev,\n      [category]: color\n    }));\n  };\n  const calculateTotal = () => {\n    return Object.values(budgetCategories).reduce((total, value) => {\n      return total + (parseFloat(value) || 0);\n    }, 0);\n  };\n  const calculateRemaining = () => {\n    const total = calculateTotal();\n    const income = parseFloat(monthlyIncome) || 0;\n    return income - total;\n  };\n  const calculateProjectedTotals = () => {\n    const months = parseInt(timeFrame);\n    const income = parseFloat(monthlyIncome) || 0;\n    const totalAllocated = calculateTotal();\n    const remaining = calculateRemaining();\n    return {\n      totalIncome: income * months,\n      totalAllocated: totalAllocated * months,\n      totalRemaining: remaining * months,\n      totalSaved: (budgetCategories.save || 0) * months,\n      totalBills: (budgetCategories.bills || 0) * months,\n      totalFood: (budgetCategories.food || 0) * months\n    };\n  };\n  const getTimeFrameLabel = () => {\n    const months = parseInt(timeFrame);\n    if (months === 1) return '1 Month';\n    if (months === 3) return '3 Months (Quarterly)';\n    if (months === 6) return '6 Months (Semi-Annually)';\n    if (months === 12) return '12 Months (Yearly)';\n    if (months === 24) return '24 Months (2 Years)';\n    if (months === 60) return '60 Months (5 Years)';\n    return `${months} Months`;\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount || 0);\n  };\n  const getCategoryPercentage = categoryValue => {\n    if (!monthlyIncome || !categoryValue) return 0;\n    return parseFloat(categoryValue) / parseFloat(monthlyIncome) * 100;\n  };\n  const getCategoryColor = category => {\n    return categoryColors[category] || '#6C5CE7';\n  };\n  const renderProgressBar = (category, value) => {\n    const percentage = getCategoryPercentage(value);\n    const color = getCategoryColor(category);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${Math.min(percentage, 100)}%`,\n            backgroundColor: color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-text\",\n        children: [percentage.toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  };\n  const renderPieChart = () => {\n    const categories = Object.entries(budgetCategories);\n    const total = calculateTotal();\n    const remaining = calculateRemaining();\n    const income = parseFloat(monthlyIncome) || 0;\n    if (income === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"Enter your monthly income to see budget distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 30\n    }, this);\n    let currentAngle = 0;\n    const radius = 80;\n    const centerX = 100;\n    const centerY = 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Budget Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"200\",\n        height: \"200\",\n        className: \"pie-chart\",\n        children: [categoryOrder.map(category => {\n          const value = budgetCategories[category];\n          if (!value || parseFloat(value) === 0) return null;\n          const percentage = parseFloat(value) / income * 100;\n          const angle = percentage / 100 * 360;\n          const startAngle = currentAngle;\n          const endAngle = currentAngle + angle;\n          const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n          const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n          const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n          const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n          const largeArcFlag = angle > 180 ? 1 : 0;\n          const pathData = [`M ${centerX} ${centerY}`, `L ${x1} ${y1}`, `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`, 'Z'].join(' ');\n          currentAngle += angle;\n          return /*#__PURE__*/_jsxDEV(\"path\", {\n            d: pathData,\n            fill: getCategoryColor(category),\n            stroke: \"#fff\",\n            strokeWidth: \"2\"\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this);\n        }), remaining > 0 && (() => {\n          const percentage = remaining / income * 100;\n          const angle = percentage / 100 * 360;\n          const startAngle = currentAngle;\n          const endAngle = currentAngle + angle;\n          const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n          const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n          const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n          const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n          const largeArcFlag = angle > 180 ? 1 : 0;\n          const pathData = [`M ${centerX} ${centerY}`, `L ${x1} ${y1}`, `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`, 'Z'].join(' ');\n          return /*#__PURE__*/_jsxDEV(\"path\", {\n            d: pathData,\n            fill: \"#6c757d\",\n            stroke: \"#fff\",\n            strokeWidth: \"2\"\n          }, \"unallocated\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-legend\",\n        children: [categoryOrder.map(category => {\n          const value = budgetCategories[category];\n          if (!value || parseFloat(value) === 0) return null;\n          const percentage = parseFloat(value) / income * 100;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: getCategoryColor(category)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-text\",\n              children: [formatCategoryName(category), \": \", percentage.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this);\n        }), remaining > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#6c757d'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-text\",\n            children: [\"Unallocated: \", (remaining / income * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  };\n  const renderProjectedTotals = () => {\n    const projected = calculateProjectedTotals();\n    const months = parseInt(timeFrame);\n    if (!monthlyIncome) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projected-totals\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Projected Totals - \", getTimeFrameLabel()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-frame-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeFrame\",\n          children: \"Time Frame:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeFrame\",\n          value: timeFrame,\n          onChange: e => setTimeFrame(e.target.value),\n          className: \"time-frame-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"1 Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"3 Months (Quarterly)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"6\",\n            children: \"6 Months (Semi-Annually)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"12\",\n            children: \"12 Months (Yearly)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"24\",\n            children: \"24 Months (2 Years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"60\",\n            children: \"60 Months (5 Years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Projection Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: renderProjectionChart()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projected-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Income:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value income\",\n            children: formatCurrency(projected.totalIncome)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Allocated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value allocated\",\n            children: formatCurrency(projected.totalAllocated)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Remaining:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value remaining\",\n            children: formatCurrency(projected.totalRemaining)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), budgetCategories.save && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item highlight\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Saved:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value saved\",\n            children: formatCurrency(projected.totalSaved)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), budgetCategories.bills && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Bills:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value bills\",\n            children: formatCurrency(projected.totalBills)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), budgetCategories.food && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Food:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value food\",\n            children: formatCurrency(projected.totalFood)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this);\n  };\n  const renderProjectionChart = () => {\n    const months = parseInt(timeFrame);\n    const income = parseFloat(monthlyIncome) || 0;\n    const totalAllocated = calculateTotal();\n    const remaining = calculateRemaining();\n    if (!income) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"Enter income to see projection chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 25\n    }, this);\n    const chartWidth = 600;\n    const chartHeight = 300;\n    const padding = 60;\n    const barWidth = (chartWidth - padding * 2) / months;\n    const maxValue = Math.max(income * months, totalAllocated * months, remaining * months);\n    const scale = (chartHeight - padding * 2) / maxValue;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: chartWidth,\n      height: chartHeight,\n      className: \"projection-chart\",\n      children: [[0, 0.25, 0.5, 0.75, 1].map((ratio, i) => {\n        const y = padding + (chartHeight - padding * 2) * (1 - ratio);\n        const value = maxValue * ratio;\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"line\", {\n            x1: padding,\n            y1: y,\n            x2: chartWidth - padding,\n            y2: y,\n            stroke: \"#444\",\n            strokeWidth: \"1\",\n            strokeDasharray: \"5,5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: padding - 10,\n            y: y + 4,\n            fill: \"#666\",\n            fontSize: \"12\",\n            textAnchor: \"end\",\n            children: formatCurrency(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this);\n      }), Array.from({\n        length: months\n      }, (_, i) => {\n        const month = i + 1;\n        const x = padding + i * barWidth + barWidth / 2;\n        const incomeHeight = income * scale;\n        const allocatedHeight = totalAllocated * scale;\n        const remainingHeight = remaining * scale;\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: x - barWidth * 0.3,\n            y: chartHeight - padding - incomeHeight,\n            width: barWidth * 0.2,\n            height: incomeHeight,\n            fill: \"#28a745\",\n            opacity: \"0.3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: x - barWidth * 0.1,\n            y: chartHeight - padding - allocatedHeight,\n            width: barWidth * 0.2,\n            height: allocatedHeight,\n            fill: \"#007bff\",\n            opacity: \"0.7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: x + barWidth * 0.1,\n            y: chartHeight - padding - remainingHeight,\n            width: barWidth * 0.2,\n            height: remainingHeight,\n            fill: \"#ffc107\",\n            opacity: \"0.7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: x,\n            y: chartHeight - padding + 20,\n            fill: \"#ccc\",\n            fontSize: \"10\",\n            textAnchor: \"middle\",\n            children: month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this);\n      }), Array.from({\n        length: months\n      }, (_, i) => {\n        const month = i + 1;\n        const x = padding + i * barWidth + barWidth / 2;\n        const cumulativeIncome = income * month;\n        const cumulativeAllocated = totalAllocated * month;\n        const cumulativeRemaining = remaining * month;\n        const y1 = chartHeight - padding - cumulativeIncome * scale;\n        const y2 = chartHeight - padding - cumulativeAllocated * scale;\n        const y3 = chartHeight - padding - cumulativeRemaining * scale;\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: x,\n            cy: y1,\n            r: \"3\",\n            fill: \"#28a745\",\n            stroke: \"#fff\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: x,\n            cy: y2,\n            r: \"3\",\n            fill: \"#007bff\",\n            stroke: \"#fff\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: x,\n            cy: y3,\n            r: \"3\",\n            fill: \"#ffc107\",\n            stroke: \"#fff\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), i > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: padding + (i - 1) * barWidth + barWidth / 2,\n              y1: chartHeight - padding - income * i * scale,\n              x2: x,\n              y2: y1,\n              stroke: \"#28a745\",\n              strokeWidth: \"2\",\n              fill: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: padding + (i - 1) * barWidth + barWidth / 2,\n              y1: chartHeight - padding - totalAllocated * i * scale,\n              x2: x,\n              y2: y2,\n              stroke: \"#007bff\",\n              strokeWidth: \"2\",\n              fill: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: padding + (i - 1) * barWidth + barWidth / 2,\n              y1: chartHeight - padding - remaining * i * scale,\n              x2: x,\n              y2: y3,\n              stroke: \"#ffc107\",\n              strokeWidth: \"2\",\n              fill: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, `line-${i}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: `translate(${padding}, 20)`,\n        children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"0\",\n          y: \"0\",\n          width: \"12\",\n          height: \"12\",\n          fill: \"#28a745\",\n          opacity: \"0.3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"20\",\n          y: \"10\",\n          fill: \"#ccc\",\n          fontSize: \"12\",\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"80\",\n          y: \"0\",\n          width: \"12\",\n          height: \"12\",\n          fill: \"#007bff\",\n          opacity: \"0.7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"100\",\n          y: \"10\",\n          fill: \"#ccc\",\n          fontSize: \"12\",\n          children: \"Allocated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"160\",\n          y: \"0\",\n          width: \"12\",\n          height: \"12\",\n          fill: \"#ffc107\",\n          opacity: \"0.7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"180\",\n          y: \"10\",\n          fill: \"#ccc\",\n          fontSize: \"12\",\n          children: \"Remaining\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this);\n  };\n  const formatCategoryName = category => {\n    return category.charAt(0).toUpperCase() + category.slice(1).replace(/_/g, ' ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Welcome to your Budget Calculator!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"payBox\",\n        children: \"How much will you be paid this month?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"payBox\",\n        value: monthlyIncome,\n        onChange: handleIncomeChange,\n        placeholder: \"Enter amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"budget-table-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"budget-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Budget Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-category-btn\",\n            onClick: addCategory,\n            title: \"Add new category\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"calcTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"budget-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [categoryOrder.map(category => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: draggedItem === category ? 'dragging' : '',\n                draggable: true,\n                onDragStart: e => handleDragStart(e, category),\n                onDragOver: handleDragOver,\n                onDrop: e => handleDrop(e, category),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"category-name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"drag-handle\",\n                    children: \"\\u22EE\\u22EE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 23\n                  }, this), formatCategoryName(category)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"budget-input\",\n                    value: budgetCategories[category],\n                    onChange: e => handleCategoryChange(category, e.target.value),\n                    placeholder: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: renderProgressBar(category, budgetCategories[category])\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"color\",\n                    className: \"color-picker\",\n                    value: getCategoryColor(category),\n                    onChange: e => handleColorChange(category, e.target.value),\n                    title: \"Choose color\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 638,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-category-btn\",\n                    onClick: () => removeCategory(category),\n                    title: \"Delete category\",\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 647,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 21\n                }, this)]\n              }, category, true, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"total-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Allocated\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 658,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: formatCurrency(calculateTotal())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 659,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progress-fill total-progress\",\n                        style: {\n                          width: `${Math.min(calculateTotal() / parseFloat(monthlyIncome || 1) * 100, 100)}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 663,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 662,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-text\",\n                      children: monthlyIncome ? `${(calculateTotal() / parseFloat(monthlyIncome) * 100).toFixed(1)}%` : '0%'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 670,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"remaining-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Remaining\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 679,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: formatCurrency(calculateRemaining())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 680,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progress-fill remaining-progress\",\n                        style: {\n                          width: `${Math.min(calculateRemaining() / parseFloat(monthlyIncome || 1) * 100, 100)}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 684,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 683,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-text\",\n                      children: monthlyIncome ? `${(calculateRemaining() / parseFloat(monthlyIncome) * 100).toFixed(1)}%` : '0%'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 691,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 682,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 697,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-section\",\n        children: [renderPieChart(), renderProjectedTotals()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 574,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetCalculator, \"jvVkWAxatplXwbffawLcZFEHKR4=\");\n_c = BudgetCalculator;\nexport default BudgetCalculator;\nvar _c;\n$RefreshReg$(_c, \"BudgetCalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","BudgetCalculator","_s","monthlyIncome","setMonthlyIncome","budgetCategories","setBudgetCategories","bills","food","save","categoryColors","setCategoryColors","categoryOrder","setCategoryOrder","draggedItem","setDraggedItem","timeFrame","setTimeFrame","handleIncomeChange","e","target","value","handleCategoryChange","category","prev","addCategory","newCategoryName","prompt","trim","trimmedName","toLowerCase","replace","hasOwnProperty","getRandomColor","alert","removeCategory","categoryToRemove","Object","keys","length","newCategories","newColors","filter","cat","colors","Math","floor","random","handleDragStart","dataTransfer","effectAllowed","handleDragOver","preventDefault","dropEffect","handleDrop","targetCategory","newOrder","draggedIndex","indexOf","targetIndex","splice","handleColorChange","color","calculateTotal","values","reduce","total","parseFloat","calculateRemaining","income","calculateProjectedTotals","months","parseInt","totalAllocated","remaining","totalIncome","totalRemaining","totalSaved","totalBills","totalFood","getTimeFrameLabel","formatCurrency","amount","Intl","NumberFormat","style","currency","format","getCategoryPercentage","categoryValue","getCategoryColor","renderProgressBar","percentage","className","children","width","min","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","renderPieChart","categories","entries","currentAngle","radius","centerX","centerY","height","map","angle","startAngle","endAngle","x1","cos","PI","y1","sin","x2","y2","largeArcFlag","pathData","join","d","fill","stroke","strokeWidth","formatCategoryName","renderProjectedTotals","projected","htmlFor","id","onChange","renderProjectionChart","chartWidth","chartHeight","padding","barWidth","maxValue","max","scale","ratio","i","y","strokeDasharray","x","fontSize","textAnchor","Array","from","_","month","incomeHeight","allocatedHeight","remainingHeight","opacity","cumulativeIncome","cumulativeAllocated","cumulativeRemaining","y3","cx","cy","r","transform","charAt","toUpperCase","slice","type","placeholder","onClick","title","draggable","onDragStart","onDragOver","onDrop","_c","$RefreshReg$"],"sources":["C:/Source/BudgetCalculator/src/components/BudgetCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst BudgetCalculator = () => {\r\n  const [monthlyIncome, setMonthlyIncome] = useState('');\r\n  const [budgetCategories, setBudgetCategories] = useState({\r\n    bills: '',\r\n    food: '',\r\n    save: ''\r\n  });\r\n  const [categoryColors, setCategoryColors] = useState({\r\n    bills: '#FF6B6B',\r\n    food: '#4ECDC4',\r\n    save: '#45B7D1'\r\n  });\r\n  const [categoryOrder, setCategoryOrder] = useState([\r\n    'bills', 'food', 'save'\r\n  ]);\r\n  const [draggedItem, setDraggedItem] = useState(null);\r\n  const [timeFrame, setTimeFrame] = useState('12'); // Default to 12 months\r\n\r\n  const handleIncomeChange = (e) => {\r\n    setMonthlyIncome(e.target.value);\r\n  };\r\n\r\n  const handleCategoryChange = (category, value) => {\r\n    setBudgetCategories(prev => ({\r\n      ...prev,\r\n      [category]: value\r\n    }));\r\n  };\r\n\r\n  const addCategory = () => {\r\n    const newCategoryName = prompt('Enter category name:');\r\n    if (newCategoryName && newCategoryName.trim()) {\r\n      const trimmedName = newCategoryName.trim().toLowerCase().replace(/\\s+/g, '_');\r\n      if (!budgetCategories.hasOwnProperty(trimmedName)) {\r\n        setBudgetCategories(prev => ({\r\n          ...prev,\r\n          [trimmedName]: ''\r\n        }));\r\n        setCategoryColors(prev => ({\r\n          ...prev,\r\n          [trimmedName]: getRandomColor()\r\n        }));\r\n        setCategoryOrder(prev => [...prev, trimmedName]);\r\n      } else {\r\n        alert('Category already exists!');\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeCategory = (categoryToRemove) => {\r\n    if (Object.keys(budgetCategories).length > 1) {\r\n      const newCategories = { ...budgetCategories };\r\n      delete newCategories[categoryToRemove];\r\n      setBudgetCategories(newCategories);\r\n      \r\n      const newColors = { ...categoryColors };\r\n      delete newColors[categoryToRemove];\r\n      setCategoryColors(newColors);\r\n      \r\n      setCategoryOrder(prev => prev.filter(cat => cat !== categoryToRemove));\r\n    } else {\r\n      alert('You must have at least one category!');\r\n    }\r\n  };\r\n\r\n  const getRandomColor = () => {\r\n    const colors = [\r\n      '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD',\r\n      '#A8E6CF', '#FF8B94', '#FFC3A0', '#FFD3B6', '#FFAAA5', '#FF8B94',\r\n      '#B8E6B8', '#FFB6C1', '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE'\r\n    ];\r\n    return colors[Math.floor(Math.random() * colors.length)];\r\n  };\r\n\r\n  const handleDragStart = (e, category) => {\r\n    setDraggedItem(category);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'move';\r\n  };\r\n\r\n  const handleDrop = (e, targetCategory) => {\r\n    e.preventDefault();\r\n    if (draggedItem && draggedItem !== targetCategory) {\r\n      const newOrder = [...categoryOrder];\r\n      const draggedIndex = newOrder.indexOf(draggedItem);\r\n      const targetIndex = newOrder.indexOf(targetCategory);\r\n      \r\n      newOrder.splice(draggedIndex, 1);\r\n      newOrder.splice(targetIndex, 0, draggedItem);\r\n      \r\n      setCategoryOrder(newOrder);\r\n    }\r\n    setDraggedItem(null);\r\n  };\r\n\r\n  const handleColorChange = (category, color) => {\r\n    setCategoryColors(prev => ({\r\n      ...prev,\r\n      [category]: color\r\n    }));\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    return Object.values(budgetCategories).reduce((total, value) => {\r\n      return total + (parseFloat(value) || 0);\r\n    }, 0);\r\n  };\r\n\r\n  const calculateRemaining = () => {\r\n    const total = calculateTotal();\r\n    const income = parseFloat(monthlyIncome) || 0;\r\n    return income - total;\r\n  };\r\n\r\n  const calculateProjectedTotals = () => {\r\n    const months = parseInt(timeFrame);\r\n    const income = parseFloat(monthlyIncome) || 0;\r\n    const totalAllocated = calculateTotal();\r\n    const remaining = calculateRemaining();\r\n    \r\n    return {\r\n      totalIncome: income * months,\r\n      totalAllocated: totalAllocated * months,\r\n      totalRemaining: remaining * months,\r\n      totalSaved: (budgetCategories.save || 0) * months,\r\n      totalBills: (budgetCategories.bills || 0) * months,\r\n      totalFood: (budgetCategories.food || 0) * months\r\n    };\r\n  };\r\n\r\n  const getTimeFrameLabel = () => {\r\n    const months = parseInt(timeFrame);\r\n    if (months === 1) return '1 Month';\r\n    if (months === 3) return '3 Months (Quarterly)';\r\n    if (months === 6) return '6 Months (Semi-Annually)';\r\n    if (months === 12) return '12 Months (Yearly)';\r\n    if (months === 24) return '24 Months (2 Years)';\r\n    if (months === 60) return '60 Months (5 Years)';\r\n    return `${months} Months`;\r\n  };\r\n\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    }).format(amount || 0);\r\n  };\r\n\r\n  const getCategoryPercentage = (categoryValue) => {\r\n    if (!monthlyIncome || !categoryValue) return 0;\r\n    return (parseFloat(categoryValue) / parseFloat(monthlyIncome)) * 100;\r\n  };\r\n\r\n  const getCategoryColor = (category) => {\r\n    return categoryColors[category] || '#6C5CE7';\r\n  };\r\n\r\n  const renderProgressBar = (category, value) => {\r\n    const percentage = getCategoryPercentage(value);\r\n    const color = getCategoryColor(category);\r\n    \r\n    return (\r\n      <div className=\"progress-container\">\r\n        <div className=\"progress-bar\">\r\n          <div \r\n            className=\"progress-fill\"\r\n            style={{ \r\n              width: `${Math.min(percentage, 100)}%`,\r\n              backgroundColor: color\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <span className=\"progress-text\">{percentage.toFixed(1)}%</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderPieChart = () => {\r\n    const categories = Object.entries(budgetCategories);\r\n    const total = calculateTotal();\r\n    const remaining = calculateRemaining();\r\n    const income = parseFloat(monthlyIncome) || 0;\r\n    \r\n    if (income === 0) return <div className=\"no-data\">Enter your monthly income to see budget distribution</div>;\r\n\r\n    let currentAngle = 0;\r\n    const radius = 80;\r\n    const centerX = 100;\r\n    const centerY = 100;\r\n\r\n    return (\r\n      <div className=\"pie-chart-container\">\r\n        <h3>Budget Distribution</h3>\r\n        <svg width=\"200\" height=\"200\" className=\"pie-chart\">\r\n          {/* Render allocated categories in order */}\r\n          {categoryOrder.map(category => {\r\n            const value = budgetCategories[category];\r\n            if (!value || parseFloat(value) === 0) return null;\r\n            \r\n            const percentage = (parseFloat(value) / income) * 100;\r\n            const angle = (percentage / 100) * 360;\r\n            const startAngle = currentAngle;\r\n            const endAngle = currentAngle + angle;\r\n            \r\n            const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\r\n            const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\r\n            const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\r\n            const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\r\n            \r\n            const largeArcFlag = angle > 180 ? 1 : 0;\r\n            \r\n            const pathData = [\r\n              `M ${centerX} ${centerY}`,\r\n              `L ${x1} ${y1}`,\r\n              `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,\r\n              'Z'\r\n            ].join(' ');\r\n            \r\n            currentAngle += angle;\r\n            \r\n            return (\r\n              <path\r\n                key={category}\r\n                d={pathData}\r\n                fill={getCategoryColor(category)}\r\n                stroke=\"#fff\"\r\n                strokeWidth=\"2\"\r\n              />\r\n            );\r\n          })}\r\n          \r\n          {/* Render unallocated/remaining slice */}\r\n          {remaining > 0 && (\r\n            (() => {\r\n              const percentage = (remaining / income) * 100;\r\n              const angle = (percentage / 100) * 360;\r\n              const startAngle = currentAngle;\r\n              const endAngle = currentAngle + angle;\r\n              \r\n              const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\r\n              const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\r\n              const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\r\n              const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\r\n              \r\n              const largeArcFlag = angle > 180 ? 1 : 0;\r\n              \r\n              const pathData = [\r\n                `M ${centerX} ${centerY}`,\r\n                `L ${x1} ${y1}`,\r\n                `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,\r\n                'Z'\r\n              ].join(' ');\r\n              \r\n              return (\r\n                <path\r\n                  key=\"unallocated\"\r\n                  d={pathData}\r\n                  fill=\"#6c757d\"\r\n                  stroke=\"#fff\"\r\n                  strokeWidth=\"2\"\r\n                />\r\n              );\r\n            })()\r\n          )}\r\n        </svg>\r\n        <div className=\"chart-legend\">\r\n          {/* Show allocated categories in order */}\r\n          {categoryOrder.map(category => {\r\n            const value = budgetCategories[category];\r\n            if (!value || parseFloat(value) === 0) return null;\r\n            const percentage = (parseFloat(value) / income) * 100;\r\n            return (\r\n              <div key={category} className=\"legend-item\">\r\n                <div \r\n                  className=\"legend-color\" \r\n                  style={{ backgroundColor: getCategoryColor(category) }}\r\n                ></div>\r\n                <span className=\"legend-text\">\r\n                  {formatCategoryName(category)}: {percentage.toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            );\r\n          })}\r\n          \r\n          {/* Show unallocated/remaining */}\r\n          {remaining > 0 && (\r\n            <div className=\"legend-item\">\r\n              <div \r\n                className=\"legend-color\" \r\n                style={{ backgroundColor: '#6c757d' }}\r\n              ></div>\r\n              <span className=\"legend-text\">\r\n                Unallocated: {((remaining / income) * 100).toFixed(1)}%\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderProjectedTotals = () => {\r\n    const projected = calculateProjectedTotals();\r\n    const months = parseInt(timeFrame);\r\n    \r\n    if (!monthlyIncome) return null;\r\n\r\n    return (\r\n      <div className=\"projected-totals\">\r\n        <h3>Projected Totals - {getTimeFrameLabel()}</h3>\r\n        <div className=\"time-frame-selector\">\r\n          <label htmlFor=\"timeFrame\">Time Frame:</label>\r\n          <select \r\n            id=\"timeFrame\" \r\n            value={timeFrame} \r\n            onChange={(e) => setTimeFrame(e.target.value)}\r\n            className=\"time-frame-select\"\r\n          >\r\n            <option value=\"1\">1 Month</option>\r\n            <option value=\"3\">3 Months (Quarterly)</option>\r\n            <option value=\"6\">6 Months (Semi-Annually)</option>\r\n            <option value=\"12\">12 Months (Yearly)</option>\r\n            <option value=\"24\">24 Months (2 Years)</option>\r\n            <option value=\"60\">60 Months (5 Years)</option>\r\n          </select>\r\n        </div>\r\n        \r\n        {/* Chart Section */}\r\n        <div className=\"chart-section\">\r\n          <h4>Projection Chart</h4>\r\n          <div className=\"chart-container\">\r\n            {renderProjectionChart()}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"projected-grid\">\r\n          <div className=\"projected-item\">\r\n            <span className=\"projected-label\">Total Income:</span>\r\n            <span className=\"projected-value income\">{formatCurrency(projected.totalIncome)}</span>\r\n          </div>\r\n          <div className=\"projected-item\">\r\n            <span className=\"projected-label\">Total Allocated:</span>\r\n            <span className=\"projected-value allocated\">{formatCurrency(projected.totalAllocated)}</span>\r\n          </div>\r\n          <div className=\"projected-item\">\r\n            <span className=\"projected-label\">Total Remaining:</span>\r\n            <span className=\"projected-value remaining\">{formatCurrency(projected.totalRemaining)}</span>\r\n          </div>\r\n          {budgetCategories.save && (\r\n            <div className=\"projected-item highlight\">\r\n              <span className=\"projected-label\">Total Saved:</span>\r\n              <span className=\"projected-value saved\">{formatCurrency(projected.totalSaved)}</span>\r\n            </div>\r\n          )}\r\n          {budgetCategories.bills && (\r\n            <div className=\"projected-item\">\r\n              <span className=\"projected-label\">Total Bills:</span>\r\n              <span className=\"projected-value bills\">{formatCurrency(projected.totalBills)}</span>\r\n            </div>\r\n          )}\r\n          {budgetCategories.food && (\r\n            <div className=\"projected-item\">\r\n              <span className=\"projected-label\">Total Food:</span>\r\n            <span className=\"projected-value food\">{formatCurrency(projected.totalFood)}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderProjectionChart = () => {\r\n    const months = parseInt(timeFrame);\r\n    const income = parseFloat(monthlyIncome) || 0;\r\n    const totalAllocated = calculateTotal();\r\n    const remaining = calculateRemaining();\r\n    \r\n    if (!income) return <div className=\"no-data\">Enter income to see projection chart</div>;\r\n\r\n    const chartWidth = 600;\r\n    const chartHeight = 300;\r\n    const padding = 60;\r\n    const barWidth = (chartWidth - padding * 2) / months;\r\n    \r\n    const maxValue = Math.max(income * months, totalAllocated * months, remaining * months);\r\n    const scale = (chartHeight - padding * 2) / maxValue;\r\n\r\n    return (\r\n      <svg width={chartWidth} height={chartHeight} className=\"projection-chart\">\r\n        {/* Grid lines */}\r\n        {[0, 0.25, 0.5, 0.75, 1].map((ratio, i) => {\r\n          const y = padding + (chartHeight - padding * 2) * (1 - ratio);\r\n          const value = maxValue * ratio;\r\n          return (\r\n            <g key={i}>\r\n              <line\r\n                x1={padding}\r\n                y1={y}\r\n                x2={chartWidth - padding}\r\n                y2={y}\r\n                stroke=\"#444\"\r\n                strokeWidth=\"1\"\r\n                strokeDasharray=\"5,5\"\r\n              />\r\n              <text\r\n                x={padding - 10}\r\n                y={y + 4}\r\n                fill=\"#666\"\r\n                fontSize=\"12\"\r\n                textAnchor=\"end\"\r\n              >\r\n                {formatCurrency(value)}\r\n              </text>\r\n            </g>\r\n          );\r\n        })}\r\n\r\n        {/* Bars for monthly values */}\r\n        {Array.from({ length: months }, (_, i) => {\r\n          const month = i + 1;\r\n          const x = padding + i * barWidth + barWidth / 2;\r\n          const incomeHeight = income * scale;\r\n          const allocatedHeight = totalAllocated * scale;\r\n          const remainingHeight = remaining * scale;\r\n          \r\n          return (\r\n            <g key={i}>\r\n              {/* Income bar */}\r\n              <rect\r\n                x={x - barWidth * 0.3}\r\n                y={chartHeight - padding - incomeHeight}\r\n                width={barWidth * 0.2}\r\n                height={incomeHeight}\r\n                fill=\"#28a745\"\r\n                opacity=\"0.3\"\r\n              />\r\n              {/* Allocated bar */}\r\n              <rect\r\n                x={x - barWidth * 0.1}\r\n                y={chartHeight - padding - allocatedHeight}\r\n                width={barWidth * 0.2}\r\n                height={allocatedHeight}\r\n                fill=\"#007bff\"\r\n                opacity=\"0.7\"\r\n              />\r\n              {/* Remaining bar */}\r\n              <rect\r\n                x={x + barWidth * 0.1}\r\n                y={chartHeight - padding - remainingHeight}\r\n                width={barWidth * 0.2}\r\n                height={remainingHeight}\r\n                fill=\"#ffc107\"\r\n                opacity=\"0.7\"\r\n              />\r\n              \r\n              {/* Month labels */}\r\n              <text\r\n                x={x}\r\n                y={chartHeight - padding + 20}\r\n                fill=\"#ccc\"\r\n                fontSize=\"10\"\r\n                textAnchor=\"middle\"\r\n              >\r\n                {month}\r\n              </text>\r\n            </g>\r\n          );\r\n        })}\r\n\r\n        {/* Line for cumulative totals */}\r\n        {Array.from({ length: months }, (_, i) => {\r\n          const month = i + 1;\r\n          const x = padding + i * barWidth + barWidth / 2;\r\n          const cumulativeIncome = income * month;\r\n          const cumulativeAllocated = totalAllocated * month;\r\n          const cumulativeRemaining = remaining * month;\r\n          \r\n          const y1 = chartHeight - padding - (cumulativeIncome * scale);\r\n          const y2 = chartHeight - padding - (cumulativeAllocated * scale);\r\n          const y3 = chartHeight - padding - (cumulativeRemaining * scale);\r\n          \r\n          return (\r\n            <g key={`line-${i}`}>\r\n              {/* Income line */}\r\n              <circle\r\n                cx={x}\r\n                cy={y1}\r\n                r=\"3\"\r\n                fill=\"#28a745\"\r\n                stroke=\"#fff\"\r\n                strokeWidth=\"1\"\r\n              />\r\n              {/* Allocated line */}\r\n              <circle\r\n                cx={x}\r\n                cy={y2}\r\n                r=\"3\"\r\n                fill=\"#007bff\"\r\n                stroke=\"#fff\"\r\n                strokeWidth=\"1\"\r\n              />\r\n              {/* Remaining line */}\r\n              <circle\r\n                cx={x}\r\n                cy={y3}\r\n                r=\"3\"\r\n                fill=\"#ffc107\"\r\n                stroke=\"#fff\"\r\n                strokeWidth=\"1\"\r\n              />\r\n              \r\n              {/* Connect lines */}\r\n              {i > 0 && (\r\n                <>\r\n                  <line\r\n                    x1={padding + (i - 1) * barWidth + barWidth / 2}\r\n                    y1={chartHeight - padding - (income * (i) * scale)}\r\n                    x2={x}\r\n                    y2={y1}\r\n                    stroke=\"#28a745\"\r\n                    strokeWidth=\"2\"\r\n                    fill=\"none\"\r\n                  />\r\n                  <line\r\n                    x1={padding + (i - 1) * barWidth + barWidth / 2}\r\n                    y1={chartHeight - padding - (totalAllocated * (i) * scale)}\r\n                    x2={x}\r\n                    y2={y2}\r\n                    stroke=\"#007bff\"\r\n                    strokeWidth=\"2\"\r\n                    fill=\"none\"\r\n                  />\r\n                  <line\r\n                    x1={padding + (i - 1) * barWidth + barWidth / 2}\r\n                    y1={chartHeight - padding - (remaining * (i) * scale)}\r\n                    x2={x}\r\n                    y2={y3}\r\n                    stroke=\"#ffc107\"\r\n                    strokeWidth=\"2\"\r\n                    fill=\"none\"\r\n                  />\r\n                </>\r\n              )}\r\n            </g>\r\n          );\r\n        })}\r\n\r\n        {/* Legend */}\r\n        <g transform={`translate(${padding}, 20)`}>\r\n          <rect x=\"0\" y=\"0\" width=\"12\" height=\"12\" fill=\"#28a745\" opacity=\"0.3\" />\r\n          <text x=\"20\" y=\"10\" fill=\"#ccc\" fontSize=\"12\">Income</text>\r\n          \r\n          <rect x=\"80\" y=\"0\" width=\"12\" height=\"12\" fill=\"#007bff\" opacity=\"0.7\" />\r\n          <text x=\"100\" y=\"10\" fill=\"#ccc\" fontSize=\"12\">Allocated</text>\r\n          \r\n          <rect x=\"160\" y=\"0\" width=\"12\" height=\"12\" fill=\"#ffc107\" opacity=\"0.7\" />\r\n          <text x=\"180\" y=\"10\" fill=\"#ccc\" fontSize=\"12\">Remaining</text>\r\n        </g>\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  const formatCategoryName = (category) => {\r\n    return category.charAt(0).toUpperCase() + category.slice(1).replace(/_/g, ' ');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header>Welcome to your Budget Calculator!</header>\r\n      \r\n      <div className=\"budget-form\">\r\n        <label htmlFor=\"payBox\">How much will you be paid this month?</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"payBox\"\r\n          value={monthlyIncome}\r\n          onChange={handleIncomeChange}\r\n          placeholder=\"Enter amount\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"budget-container\">\r\n        <div className=\"budget-table-section\">\r\n          <div className=\"budget-header\">\r\n            <h3>Budget Breakdown</h3>\r\n            <button \r\n              className=\"add-category-btn\"\r\n              onClick={addCategory}\r\n              title=\"Add new category\"\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n          <div id=\"calcTable\">\r\n            <table className=\"budget-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Category</th>\r\n                  <th>Amount</th>\r\n                  <th>Progress</th>\r\n                  <th>Color</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {categoryOrder.map((category) => (\r\n                  <tr \r\n                    key={category}\r\n                    className={draggedItem === category ? 'dragging' : ''}\r\n                    draggable\r\n                    onDragStart={(e) => handleDragStart(e, category)}\r\n                    onDragOver={handleDragOver}\r\n                    onDrop={(e) => handleDrop(e, category)}\r\n                  >\r\n                    <td className=\"category-name\">\r\n                      <span className=\"drag-handle\">⋮⋮</span>\r\n                      {formatCategoryName(category)}\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"budget-input\"\r\n                        value={budgetCategories[category]}\r\n                        onChange={(e) => handleCategoryChange(category, e.target.value)}\r\n                        placeholder=\"0\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      {renderProgressBar(category, budgetCategories[category])}\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"color\"\r\n                        className=\"color-picker\"\r\n                        value={getCategoryColor(category)}\r\n                        onChange={(e) => handleColorChange(category, e.target.value)}\r\n                        title=\"Choose color\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <button \r\n                        className=\"delete-category-btn\"\r\n                        onClick={() => removeCategory(category)}\r\n                        title=\"Delete category\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                <tr className=\"total-row\">\r\n                  <td><strong>Total Allocated</strong></td>\r\n                  <td><strong>{formatCurrency(calculateTotal())}</strong></td>\r\n                  <td>\r\n                    <div className=\"progress-container\">\r\n                      <div className=\"progress-bar\">\r\n                        <div \r\n                          className=\"progress-fill total-progress\"\r\n                          style={{ \r\n                            width: `${Math.min((calculateTotal() / parseFloat(monthlyIncome || 1)) * 100, 100)}%`\r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                      <span className=\"progress-text\">\r\n                        {monthlyIncome ? `${((calculateTotal() / parseFloat(monthlyIncome)) * 100).toFixed(1)}%` : '0%'}\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n                <tr className=\"remaining-row\">\r\n                  <td><strong>Remaining</strong></td>\r\n                  <td><strong>{formatCurrency(calculateRemaining())}</strong></td>\r\n                  <td>\r\n                    <div className=\"progress-container\">\r\n                      <div className=\"progress-bar\">\r\n                        <div \r\n                          className=\"progress-fill remaining-progress\"\r\n                          style={{ \r\n                            width: `${Math.min((calculateRemaining() / parseFloat(monthlyIncome || 1)) * 100, 100)}%`\r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                      <span className=\"progress-text\">\r\n                        {monthlyIncome ? `${((calculateRemaining() / parseFloat(monthlyIncome)) * 100).toFixed(1)}%` : '0%'}\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"visualization-section\">\r\n          {renderPieChart()}\r\n          {renderProjectedTotals()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BudgetCalculator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}