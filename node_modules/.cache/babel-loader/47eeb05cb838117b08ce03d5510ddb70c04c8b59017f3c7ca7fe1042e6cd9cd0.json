{"ast":null,"code":"var _jsxFileName = \"C:\\\\Source\\\\BudgetCalculator\\\\src\\\\components\\\\BudgetCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetCalculator = () => {\n  _s();\n  const [monthlyIncome, setMonthlyIncome] = useState('');\n  const [budgetCategories, setBudgetCategories] = useState({\n    bills: '',\n    food: '',\n    save: ''\n  });\n  const [categoryColors, setCategoryColors] = useState({\n    bills: '#FF6B6B',\n    food: '#4ECDC4',\n    save: '#45B7D1'\n  });\n  const [categoryOrder, setCategoryOrder] = useState(['bills', 'food', 'save']);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [timeFrame, setTimeFrame] = useState('12'); // Default to 12 months\n  const [templateCategory, setTemplateCategory] = useState('');\n  const [isAddingCategory, setIsAddingCategory] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editingCategoryName, setEditingCategoryName] = useState('');\n  const handleIncomeChange = e => {\n    setMonthlyIncome(e.target.value);\n  };\n  const handleCategoryChange = (category, value) => {\n    setBudgetCategories(prev => ({\n      ...prev,\n      [category]: value\n    }));\n  };\n  const addCategory = () => {\n    const newCategoryName = prompt('Enter category name:');\n    if (newCategoryName && newCategoryName.trim()) {\n      const trimmedName = newCategoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n      if (!budgetCategories.hasOwnProperty(trimmedName)) {\n        setBudgetCategories(prev => ({\n          ...prev,\n          [trimmedName]: ''\n        }));\n        setCategoryColors(prev => ({\n          ...prev,\n          [trimmedName]: getRandomColor()\n        }));\n        setCategoryOrder(prev => [...prev, trimmedName]);\n      } else {\n        alert('Category already exists!');\n      }\n    }\n  };\n  const addCategoryFromTemplate = categoryName => {\n    if (categoryName && categoryName.trim()) {\n      const trimmedName = categoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n      if (!budgetCategories.hasOwnProperty(trimmedName)) {\n        setBudgetCategories(prev => ({\n          ...prev,\n          [trimmedName]: ''\n        }));\n        setCategoryColors(prev => ({\n          ...prev,\n          [trimmedName]: getRandomColor()\n        }));\n        setCategoryOrder(prev => [...prev, trimmedName]);\n        return true;\n      } else {\n        alert('Category already exists!');\n        return false;\n      }\n    }\n    return false;\n  };\n  const removeCategory = categoryToRemove => {\n    if (Object.keys(budgetCategories).length > 1) {\n      const newCategories = {\n        ...budgetCategories\n      };\n      delete newCategories[categoryToRemove];\n      setBudgetCategories(newCategories);\n      const newColors = {\n        ...categoryColors\n      };\n      delete newColors[categoryToRemove];\n      setCategoryColors(newColors);\n      setCategoryOrder(prev => prev.filter(cat => cat !== categoryToRemove));\n    } else {\n      alert('You must have at least one category!');\n    }\n  };\n  const getRandomColor = () => {\n    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#A8E6CF', '#FF8B94', '#FFC3A0', '#FFD3B6', '#FFAAA5', '#FF8B94', '#B8E6B8', '#FFB6C1', '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n  const handleDragStart = (e, category) => {\n    setDraggedItem(category);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const handleDrop = (e, targetCategory) => {\n    e.preventDefault();\n    if (draggedItem && draggedItem !== targetCategory) {\n      const newOrder = [...categoryOrder];\n      const draggedIndex = newOrder.indexOf(draggedItem);\n      const targetIndex = newOrder.indexOf(targetCategory);\n      newOrder.splice(draggedIndex, 1);\n      newOrder.splice(targetIndex, 0, draggedItem);\n      setCategoryOrder(newOrder);\n    }\n    setDraggedItem(null);\n  };\n  const handleColorChange = (category, color) => {\n    setCategoryColors(prev => ({\n      ...prev,\n      [category]: color\n    }));\n  };\n  const calculateTotal = () => {\n    return Object.values(budgetCategories).reduce((total, value) => {\n      return total + (parseFloat(value) || 0);\n    }, 0);\n  };\n  const calculateRemaining = () => {\n    const total = calculateTotal();\n    const income = parseFloat(monthlyIncome) || 0;\n    return income - total;\n  };\n  const calculateProjectedTotals = () => {\n    const months = parseInt(timeFrame);\n    const income = parseFloat(monthlyIncome) || 0;\n    const totalAllocated = calculateTotal();\n    const remaining = calculateRemaining();\n    return {\n      totalIncome: income * months,\n      totalAllocated: totalAllocated * months,\n      totalRemaining: remaining * months,\n      totalSaved: (budgetCategories.save || 0) * months,\n      totalBills: (budgetCategories.bills || 0) * months,\n      totalFood: (budgetCategories.food || 0) * months\n    };\n  };\n  const getTimeFrameLabel = () => {\n    const months = parseInt(timeFrame);\n    if (months === 1) return '1 Month';\n    if (months === 3) return '3 Months (Quarterly)';\n    if (months === 6) return '6 Months (Semi-Annually)';\n    if (months === 12) return '12 Months (Yearly)';\n    if (months === 24) return '24 Months (2 Years)';\n    if (months === 60) return '60 Months (5 Years)';\n    return `${months} Months`;\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount || 0);\n  };\n  const formatLargeCurrency = amount => {\n    if (amount >= 1000000) {\n      return `$${(amount / 1000000).toFixed(1)}M`;\n    } else if (amount >= 1000) {\n      return `$${(amount / 1000).toFixed(1)}K`;\n    }\n    return formatCurrency(amount);\n  };\n  const getCategoryPercentage = categoryValue => {\n    if (!monthlyIncome || !categoryValue) return 0;\n    return parseFloat(categoryValue) / parseFloat(monthlyIncome) * 100;\n  };\n  const getCategoryColor = category => {\n    return categoryColors[category] || '#6C5CE7';\n  };\n  const renderProgressBar = (category, value) => {\n    const percentage = getCategoryPercentage(value);\n    const color = getCategoryColor(category);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${Math.min(percentage, 100)}%`,\n            backgroundColor: color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-text\",\n        children: [percentage.toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  };\n  const renderPieChart = () => {\n    const categories = Object.entries(budgetCategories);\n    const total = calculateTotal();\n    const remaining = calculateRemaining();\n    const income = parseFloat(monthlyIncome) || 0;\n    if (income === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"Enter your monthly income to see budget distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 30\n    }, this);\n    let currentAngle = 0;\n    const radius = 80;\n    const centerX = 100;\n    const centerY = 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Budget Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"200\",\n        height: \"200\",\n        className: \"pie-chart\",\n        children: [categoryOrder.map(category => {\n          const value = budgetCategories[category];\n          if (!value || parseFloat(value) === 0) return null;\n          const percentage = parseFloat(value) / income * 100;\n          const angle = percentage / 100 * 360;\n          const startAngle = currentAngle;\n          const endAngle = currentAngle + angle;\n          const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n          const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n          const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n          const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n          const largeArcFlag = angle > 180 ? 1 : 0;\n          const pathData = [`M ${centerX} ${centerY}`, `L ${x1} ${y1}`, `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`, 'Z'].join(' ');\n          currentAngle += angle;\n          return /*#__PURE__*/_jsxDEV(\"path\", {\n            d: pathData,\n            fill: getCategoryColor(category),\n            stroke: \"#fff\",\n            strokeWidth: \"2\"\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this);\n        }), remaining > 0 && (() => {\n          const percentage = remaining / income * 100;\n          const angle = percentage / 100 * 360;\n          const startAngle = currentAngle;\n          const endAngle = currentAngle + angle;\n          const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n          const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n          const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n          const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n          const largeArcFlag = angle > 180 ? 1 : 0;\n          const pathData = [`M ${centerX} ${centerY}`, `L ${x1} ${y1}`, `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`, 'Z'].join(' ');\n          return /*#__PURE__*/_jsxDEV(\"path\", {\n            d: pathData,\n            fill: \"#6c757d\",\n            stroke: \"#fff\",\n            strokeWidth: \"2\"\n          }, \"unallocated\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-legend\",\n        children: [categoryOrder.map(category => {\n          const value = budgetCategories[category];\n          if (!value || parseFloat(value) === 0) return null;\n          const percentage = parseFloat(value) / income * 100;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: getCategoryColor(category)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-text\",\n              children: [formatCategoryName(category), \": \", percentage.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this);\n        }), remaining > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#6c757d'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-text\",\n            children: [\"Unallocated: \", (remaining / income * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this);\n  };\n  const renderProjectedTotals = () => {\n    const projected = calculateProjectedTotals();\n    const months = parseInt(timeFrame);\n    if (!monthlyIncome) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projected-totals\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Projected Totals - \", getTimeFrameLabel()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-frame-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeFrame\",\n          children: \"Time Frame:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeFrame\",\n          value: timeFrame,\n          onChange: e => setTimeFrame(e.target.value),\n          className: \"time-frame-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"1 Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"3 Months (Quarterly)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"6\",\n            children: \"6 Months (Semi-Annually)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"12\",\n            children: \"12 Months (Yearly)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"24\",\n            children: \"24 Months (2 Years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"60\",\n            children: \"60 Months (5 Years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Projection Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: renderProjectionChart()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projected-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Income:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value income\",\n            children: formatLargeCurrency(projected.totalIncome)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Allocated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value allocated\",\n            children: formatLargeCurrency(projected.totalAllocated)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Remaining:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value remaining\",\n            children: formatLargeCurrency(projected.totalRemaining)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), budgetCategories.save && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item highlight\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Saved:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value saved\",\n            children: formatLargeCurrency(projected.totalSaved)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), budgetCategories.bills && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Bills:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value bills\",\n            children: formatLargeCurrency(projected.totalBills)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), budgetCategories.food && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-label\",\n            children: \"Total Food:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projected-value food\",\n            children: formatLargeCurrency(projected.totalFood)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this);\n  };\n  const renderProjectionChart = () => {\n    const months = parseInt(timeFrame);\n    const income = parseFloat(monthlyIncome) || 0;\n    if (!income) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"Enter income to see projection chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }, this);\n\n    // Make chart responsive - use container width or default to 600\n    const containerWidth = window.innerWidth;\n    const chartWidth = Math.max(600, Math.min(containerWidth - 100, 1200)); // Min 600, max 1200\n    const chartHeight = 400;\n    const padding = 80;\n    const chartAreaWidth = chartWidth - padding * 2;\n    const chartAreaHeight = chartHeight - padding * 2;\n\n    // Get categories with values\n    const categoriesWithValues = categoryOrder.filter(category => budgetCategories[category] && parseFloat(budgetCategories[category]) > 0);\n    if (categoriesWithValues.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: \"Add budget values to see category comparison\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 14\n      }, this);\n    }\n    const barHeight = chartAreaHeight / categoriesWithValues.length;\n    const maxValue = Math.max(...categoriesWithValues.map(category => parseFloat(budgetCategories[category]) * months));\n    const scale = chartAreaWidth / maxValue;\n\n    // Format large numbers for display\n    const formatLargeNumber = num => {\n      if (num >= 1000000) {\n        return `$${(num / 1000000).toFixed(1)}M`;\n      } else if (num >= 1000) {\n        return `$${(num / 1000).toFixed(1)}K`;\n      }\n      return formatCurrency(num);\n    };\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      height: chartHeight,\n      className: \"projection-chart\",\n      viewBox: `0 0 ${chartWidth} ${chartHeight}`,\n      preserveAspectRatio: \"xMidYMid meet\",\n      children: [[0, 0.25, 0.5, 0.75, 1].map((ratio, i) => {\n        const x = padding + chartAreaWidth * ratio;\n        const value = maxValue * ratio;\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"line\", {\n            x1: x,\n            y1: padding,\n            x2: x,\n            y2: chartHeight - padding,\n            stroke: \"#444\",\n            strokeWidth: \"1\",\n            strokeDasharray: \"5,5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: x,\n            y: chartHeight - padding + 15,\n            fill: \"#666\",\n            fontSize: \"10\",\n            textAnchor: \"middle\",\n            children: formatLargeNumber(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this);\n      }), categoriesWithValues.map((category, index) => {\n        const categoryValue = parseFloat(budgetCategories[category]);\n        const totalValue = categoryValue * months;\n        const barWidth = totalValue * scale;\n        const y = padding + index * barHeight + barHeight * 0.1;\n        const barY = y + barHeight * 0.3;\n        const barHeightActual = barHeight * 0.4;\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: padding,\n            y: barY,\n            width: barWidth,\n            height: barHeightActual,\n            fill: getCategoryColor(category),\n            rx: \"3\",\n            ry: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: padding - 10,\n            y: barY + barHeightActual / 2 + 4,\n            fill: \"#ccc\",\n            fontSize: \"12\",\n            textAnchor: \"end\",\n            children: formatCategoryName(category)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: padding + barWidth + 10,\n            y: barY + barHeightActual / 2 + 4,\n            fill: \"#fff\",\n            fontSize: \"11\",\n            fontWeight: \"bold\",\n            children: formatLargeNumber(totalValue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: padding + barWidth + 10,\n            y: barY + barHeightActual / 2 + 18,\n            fill: \"#999\",\n            fontSize: \"9\",\n            children: [\"(\", formatLargeNumber(categoryValue), \"/month)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n          x: padding,\n          y: padding + categoriesWithValues.length * barHeight + barHeight * 0.1,\n          width: chartAreaWidth,\n          height: barHeight * 0.4,\n          fill: \"#28a745\",\n          opacity: \"0.3\",\n          rx: \"3\",\n          ry: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: padding - 10,\n          y: padding + categoriesWithValues.length * barHeight + barHeight * 0.3,\n          fill: \"#ccc\",\n          fontSize: \"12\",\n          textAnchor: \"end\",\n          children: \"Total Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: padding + chartAreaWidth + 10,\n          y: padding + categoriesWithValues.length * barHeight + barHeight * 0.3,\n          fill: \"#28a745\",\n          fontSize: \"11\",\n          fontWeight: \"bold\",\n          children: formatLargeNumber(income * months)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: chartWidth / 2,\n        y: 20,\n        fill: \"#fff\",\n        fontSize: \"14\",\n        fontWeight: \"bold\",\n        textAnchor: \"middle\",\n        children: [\"Category Comparison - \", getTimeFrameLabel()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this);\n  };\n  const formatCategoryName = category => {\n    return category.charAt(0).toUpperCase() + category.slice(1).replace(/_/g, ' ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Welcome to your Budget Calculator!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"payBox\",\n        children: \"How much will you be paid this month?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"payBox\",\n        value: monthlyIncome,\n        onChange: handleIncomeChange,\n        placeholder: \"Enter amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"budget-table-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"budget-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Budget Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"calcTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"budget-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [categoryOrder.map(category => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: draggedItem === category ? 'dragging' : '',\n                draggable: true,\n                onDragStart: e => handleDragStart(e, category),\n                onDragOver: handleDragOver,\n                onDrop: e => handleDrop(e, category),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"category-name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"drag-handle\",\n                    children: \"\\u22EE\\u22EE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 23\n                  }, this), formatCategoryName(category)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"budget-input\",\n                    value: budgetCategories[category],\n                    onChange: e => handleCategoryChange(category, e.target.value),\n                    placeholder: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: renderProgressBar(category, budgetCategories[category])\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"color\",\n                    className: \"color-picker\",\n                    value: getCategoryColor(category),\n                    onChange: e => handleColorChange(category, e.target.value),\n                    title: \"Choose color\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-category-btn\",\n                    onClick: () => removeCategory(category),\n                    title: \"Delete category\",\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 21\n                }, this)]\n              }, category, true, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"template-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"category-name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"drag-handle\",\n                    children: \"\\u22EE\\u22EE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 671,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"template-input\",\n                    placeholder: \"Enter category name...\",\n                    value: templateCategory,\n                    onChange: e => setTemplateCategory(e.target.value),\n                    onKeyPress: e => {\n                      if (e.key === 'Enter') {\n                        if (addCategoryFromTemplate(templateCategory)) {\n                          setTemplateCategory('');\n                        }\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"budget-input\",\n                    disabled: true,\n                    placeholder: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progress-fill\",\n                        style: {\n                          width: '0%'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 698,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 697,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-text\",\n                      children: \"0%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 700,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 696,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"color\",\n                    className: \"color-picker\",\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"add-category-btn\",\n                    onClick: () => {\n                      if (addCategoryFromTemplate(templateCategory)) {\n                        setTemplateCategory('');\n                      }\n                    },\n                    title: \"Add category\",\n                    disabled: !templateCategory.trim(),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"total-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Allocated\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 727,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 727,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: formatCurrency(calculateTotal())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 728,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progress-fill total-progress\",\n                        style: {\n                          width: `${Math.min(calculateTotal() / parseFloat(monthlyIncome || 1) * 100, 100)}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 732,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 731,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-text\",\n                      children: monthlyIncome ? `${(calculateTotal() / parseFloat(monthlyIncome) * 100).toFixed(1)}%` : '0%'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 739,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 730,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"remaining-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Remaining\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: formatCurrency(calculateRemaining())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 749,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progress-fill remaining-progress\",\n                        style: {\n                          width: `${Math.min(calculateRemaining() / parseFloat(monthlyIncome || 1) * 100, 100)}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 753,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 752,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-text\",\n                      children: monthlyIncome ? `${(calculateRemaining() / parseFloat(monthlyIncome) * 100).toFixed(1)}%` : '0%'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 760,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 750,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-section\",\n        children: renderPieChart()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 7\n    }, this), renderProjectedTotals()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 591,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetCalculator, \"y4HkjnRVUonJwzamHyadCOovq0E=\");\n_c = BudgetCalculator;\nexport default BudgetCalculator;\nvar _c;\n$RefreshReg$(_c, \"BudgetCalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BudgetCalculator","_s","monthlyIncome","setMonthlyIncome","budgetCategories","setBudgetCategories","bills","food","save","categoryColors","setCategoryColors","categoryOrder","setCategoryOrder","draggedItem","setDraggedItem","timeFrame","setTimeFrame","templateCategory","setTemplateCategory","isAddingCategory","setIsAddingCategory","editingCategory","setEditingCategory","editingCategoryName","setEditingCategoryName","handleIncomeChange","e","target","value","handleCategoryChange","category","prev","addCategory","newCategoryName","prompt","trim","trimmedName","toLowerCase","replace","hasOwnProperty","getRandomColor","alert","addCategoryFromTemplate","categoryName","removeCategory","categoryToRemove","Object","keys","length","newCategories","newColors","filter","cat","colors","Math","floor","random","handleDragStart","dataTransfer","effectAllowed","handleDragOver","preventDefault","dropEffect","handleDrop","targetCategory","newOrder","draggedIndex","indexOf","targetIndex","splice","handleColorChange","color","calculateTotal","values","reduce","total","parseFloat","calculateRemaining","income","calculateProjectedTotals","months","parseInt","totalAllocated","remaining","totalIncome","totalRemaining","totalSaved","totalBills","totalFood","getTimeFrameLabel","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatLargeCurrency","toFixed","getCategoryPercentage","categoryValue","getCategoryColor","renderProgressBar","percentage","className","children","width","min","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","renderPieChart","categories","entries","currentAngle","radius","centerX","centerY","height","map","angle","startAngle","endAngle","x1","cos","PI","y1","sin","x2","y2","largeArcFlag","pathData","join","d","fill","stroke","strokeWidth","formatCategoryName","renderProjectedTotals","projected","htmlFor","id","onChange","renderProjectionChart","containerWidth","window","innerWidth","chartWidth","max","chartHeight","padding","chartAreaWidth","chartAreaHeight","categoriesWithValues","barHeight","maxValue","scale","formatLargeNumber","num","viewBox","preserveAspectRatio","ratio","i","x","strokeDasharray","y","fontSize","textAnchor","index","totalValue","barWidth","barY","barHeightActual","rx","ry","fontWeight","opacity","charAt","toUpperCase","slice","type","placeholder","draggable","onDragStart","onDragOver","onDrop","title","onClick","onKeyPress","key","disabled","_c","$RefreshReg$"],"sources":["C:/Source/BudgetCalculator/src/components/BudgetCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst BudgetCalculator = () => {\n  const [monthlyIncome, setMonthlyIncome] = useState('');\n  const [budgetCategories, setBudgetCategories] = useState({\n    bills: '',\n    food: '',\n    save: ''\n  });\n  const [categoryColors, setCategoryColors] = useState({\n    bills: '#FF6B6B',\n    food: '#4ECDC4',\n    save: '#45B7D1'\n  });\n  const [categoryOrder, setCategoryOrder] = useState([\n    'bills', 'food', 'save'\n  ]);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [timeFrame, setTimeFrame] = useState('12'); // Default to 12 months\n  const [templateCategory, setTemplateCategory] = useState('');\n  const [isAddingCategory, setIsAddingCategory] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editingCategoryName, setEditingCategoryName] = useState('');\n\n  const handleIncomeChange = (e) => {\n    setMonthlyIncome(e.target.value);\n  };\n\n  const handleCategoryChange = (category, value) => {\n    setBudgetCategories(prev => ({\n      ...prev,\n      [category]: value\n    }));\n  };\n\n  const addCategory = () => {\n    const newCategoryName = prompt('Enter category name:');\n    if (newCategoryName && newCategoryName.trim()) {\n      const trimmedName = newCategoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n      if (!budgetCategories.hasOwnProperty(trimmedName)) {\n        setBudgetCategories(prev => ({\n          ...prev,\n          [trimmedName]: ''\n        }));\n        setCategoryColors(prev => ({\n          ...prev,\n          [trimmedName]: getRandomColor()\n        }));\n        setCategoryOrder(prev => [...prev, trimmedName]);\n      } else {\n        alert('Category already exists!');\n      }\n    }\n  };\n\n  const addCategoryFromTemplate = (categoryName) => {\n    if (categoryName && categoryName.trim()) {\n      const trimmedName = categoryName.trim().toLowerCase().replace(/\\s+/g, '_');\n      if (!budgetCategories.hasOwnProperty(trimmedName)) {\n        setBudgetCategories(prev => ({\n          ...prev,\n          [trimmedName]: ''\n        }));\n        setCategoryColors(prev => ({\n          ...prev,\n          [trimmedName]: getRandomColor()\n        }));\n        setCategoryOrder(prev => [...prev, trimmedName]);\n        return true;\n      } else {\n        alert('Category already exists!');\n        return false;\n      }\n    }\n    return false;\n  };\n\n  const removeCategory = (categoryToRemove) => {\n    if (Object.keys(budgetCategories).length > 1) {\n      const newCategories = { ...budgetCategories };\n      delete newCategories[categoryToRemove];\n      setBudgetCategories(newCategories);\n      \n      const newColors = { ...categoryColors };\n      delete newColors[categoryToRemove];\n      setCategoryColors(newColors);\n      \n      setCategoryOrder(prev => prev.filter(cat => cat !== categoryToRemove));\n    } else {\n      alert('You must have at least one category!');\n    }\n  };\n\n  const getRandomColor = () => {\n    const colors = [\n      '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD',\n      '#A8E6CF', '#FF8B94', '#FFC3A0', '#FFD3B6', '#FFAAA5', '#FF8B94',\n      '#B8E6B8', '#FFB6C1', '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE'\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  const handleDragStart = (e, category) => {\n    setDraggedItem(category);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const handleDrop = (e, targetCategory) => {\n    e.preventDefault();\n    if (draggedItem && draggedItem !== targetCategory) {\n      const newOrder = [...categoryOrder];\n      const draggedIndex = newOrder.indexOf(draggedItem);\n      const targetIndex = newOrder.indexOf(targetCategory);\n      \n      newOrder.splice(draggedIndex, 1);\n      newOrder.splice(targetIndex, 0, draggedItem);\n      \n      setCategoryOrder(newOrder);\n    }\n    setDraggedItem(null);\n  };\n\n  const handleColorChange = (category, color) => {\n    setCategoryColors(prev => ({\n      ...prev,\n      [category]: color\n    }));\n  };\n\n  const calculateTotal = () => {\n    return Object.values(budgetCategories).reduce((total, value) => {\n      return total + (parseFloat(value) || 0);\n    }, 0);\n  };\n\n  const calculateRemaining = () => {\n    const total = calculateTotal();\n    const income = parseFloat(monthlyIncome) || 0;\n    return income - total;\n  };\n\n  const calculateProjectedTotals = () => {\n    const months = parseInt(timeFrame);\n    const income = parseFloat(monthlyIncome) || 0;\n    const totalAllocated = calculateTotal();\n    const remaining = calculateRemaining();\n    \n    return {\n      totalIncome: income * months,\n      totalAllocated: totalAllocated * months,\n      totalRemaining: remaining * months,\n      totalSaved: (budgetCategories.save || 0) * months,\n      totalBills: (budgetCategories.bills || 0) * months,\n      totalFood: (budgetCategories.food || 0) * months\n    };\n  };\n\n  const getTimeFrameLabel = () => {\n    const months = parseInt(timeFrame);\n    if (months === 1) return '1 Month';\n    if (months === 3) return '3 Months (Quarterly)';\n    if (months === 6) return '6 Months (Semi-Annually)';\n    if (months === 12) return '12 Months (Yearly)';\n    if (months === 24) return '24 Months (2 Years)';\n    if (months === 60) return '60 Months (5 Years)';\n    return `${months} Months`;\n  };\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount || 0);\n  };\n\n  const formatLargeCurrency = (amount) => {\n    if (amount >= 1000000) {\n      return `$${(amount / 1000000).toFixed(1)}M`;\n    } else if (amount >= 1000) {\n      return `$${(amount / 1000).toFixed(1)}K`;\n    }\n    return formatCurrency(amount);\n  };\n\n  const getCategoryPercentage = (categoryValue) => {\n    if (!monthlyIncome || !categoryValue) return 0;\n    return (parseFloat(categoryValue) / parseFloat(monthlyIncome)) * 100;\n  };\n\n  const getCategoryColor = (category) => {\n    return categoryColors[category] || '#6C5CE7';\n  };\n\n  const renderProgressBar = (category, value) => {\n    const percentage = getCategoryPercentage(value);\n    const color = getCategoryColor(category);\n    \n    return (\n      <div className=\"progress-container\">\n        <div className=\"progress-bar\">\n          <div \n            className=\"progress-fill\"\n            style={{ \n              width: `${Math.min(percentage, 100)}%`,\n              backgroundColor: color\n            }}\n          ></div>\n        </div>\n        <span className=\"progress-text\">{percentage.toFixed(1)}%</span>\n      </div>\n    );\n  };\n\n  const renderPieChart = () => {\n    const categories = Object.entries(budgetCategories);\n    const total = calculateTotal();\n    const remaining = calculateRemaining();\n    const income = parseFloat(monthlyIncome) || 0;\n    \n    if (income === 0) return <div className=\"no-data\">Enter your monthly income to see budget distribution</div>;\n\n    let currentAngle = 0;\n    const radius = 80;\n    const centerX = 100;\n    const centerY = 100;\n\n    return (\n      <div className=\"pie-chart-container\">\n        <h3>Budget Distribution</h3>\n        <svg width=\"200\" height=\"200\" className=\"pie-chart\">\n          {/* Render allocated categories in order */}\n          {categoryOrder.map(category => {\n            const value = budgetCategories[category];\n            if (!value || parseFloat(value) === 0) return null;\n            \n            const percentage = (parseFloat(value) / income) * 100;\n            const angle = (percentage / 100) * 360;\n            const startAngle = currentAngle;\n            const endAngle = currentAngle + angle;\n            \n            const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n            const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n            const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n            const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n            \n            const largeArcFlag = angle > 180 ? 1 : 0;\n            \n            const pathData = [\n              `M ${centerX} ${centerY}`,\n              `L ${x1} ${y1}`,\n              `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,\n              'Z'\n            ].join(' ');\n            \n            currentAngle += angle;\n            \n            return (\n              <path\n                key={category}\n                d={pathData}\n                fill={getCategoryColor(category)}\n                stroke=\"#fff\"\n                strokeWidth=\"2\"\n              />\n            );\n          })}\n          \n          {/* Render unallocated/remaining slice */}\n          {remaining > 0 && (\n            (() => {\n              const percentage = (remaining / income) * 100;\n              const angle = (percentage / 100) * 360;\n              const startAngle = currentAngle;\n              const endAngle = currentAngle + angle;\n              \n              const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n              const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n              const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n              const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n              \n              const largeArcFlag = angle > 180 ? 1 : 0;\n              \n              const pathData = [\n                `M ${centerX} ${centerY}`,\n                `L ${x1} ${y1}`,\n                `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,\n                'Z'\n              ].join(' ');\n              \n              return (\n                <path\n                  key=\"unallocated\"\n                  d={pathData}\n                  fill=\"#6c757d\"\n                  stroke=\"#fff\"\n                  strokeWidth=\"2\"\n                />\n              );\n            })()\n          )}\n        </svg>\n        <div className=\"chart-legend\">\n          {/* Show allocated categories in order */}\n          {categoryOrder.map(category => {\n            const value = budgetCategories[category];\n            if (!value || parseFloat(value) === 0) return null;\n            const percentage = (parseFloat(value) / income) * 100;\n            return (\n              <div key={category} className=\"legend-item\">\n                <div \n                  className=\"legend-color\" \n                  style={{ backgroundColor: getCategoryColor(category) }}\n                ></div>\n                <span className=\"legend-text\">\n                  {formatCategoryName(category)}: {percentage.toFixed(1)}%\n                </span>\n              </div>\n            );\n          })}\n          \n          {/* Show unallocated/remaining */}\n          {remaining > 0 && (\n            <div className=\"legend-item\">\n              <div \n                className=\"legend-color\" \n                style={{ backgroundColor: '#6c757d' }}\n              ></div>\n              <span className=\"legend-text\">\n                Unallocated: {((remaining / income) * 100).toFixed(1)}%\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const renderProjectedTotals = () => {\n    const projected = calculateProjectedTotals();\n    const months = parseInt(timeFrame);\n    \n    if (!monthlyIncome) return null;\n\n    return (\n      <div className=\"projected-totals\">\n        <h3>Projected Totals - {getTimeFrameLabel()}</h3>\n        <div className=\"time-frame-selector\">\n          <label htmlFor=\"timeFrame\">Time Frame:</label>\n          <select \n            id=\"timeFrame\" \n            value={timeFrame} \n            onChange={(e) => setTimeFrame(e.target.value)}\n            className=\"time-frame-select\"\n          >\n            <option value=\"1\">1 Month</option>\n            <option value=\"3\">3 Months (Quarterly)</option>\n            <option value=\"6\">6 Months (Semi-Annually)</option>\n            <option value=\"12\">12 Months (Yearly)</option>\n            <option value=\"24\">24 Months (2 Years)</option>\n            <option value=\"60\">60 Months (5 Years)</option>\n          </select>\n        </div>\n        \n        {/* Bar Chart Section */}\n        <div className=\"chart-section\">\n          <h4>Projection Chart</h4>\n          <div className=\"chart-container\">\n            {renderProjectionChart()}\n          </div>\n        </div>\n        \n        <div className=\"projected-grid\">\n          <div className=\"projected-item\">\n            <span className=\"projected-label\">Total Income:</span>\n            <span className=\"projected-value income\">{formatLargeCurrency(projected.totalIncome)}</span>\n          </div>\n          <div className=\"projected-item\">\n            <span className=\"projected-label\">Total Allocated:</span>\n            <span className=\"projected-value allocated\">{formatLargeCurrency(projected.totalAllocated)}</span>\n          </div>\n          <div className=\"projected-item\">\n            <span className=\"projected-label\">Total Remaining:</span>\n            <span className=\"projected-value remaining\">{formatLargeCurrency(projected.totalRemaining)}</span>\n          </div>\n          {budgetCategories.save && (\n            <div className=\"projected-item highlight\">\n              <span className=\"projected-label\">Total Saved:</span>\n              <span className=\"projected-value saved\">{formatLargeCurrency(projected.totalSaved)}</span>\n            </div>\n          )}\n          {budgetCategories.bills && (\n            <div className=\"projected-item\">\n              <span className=\"projected-label\">Total Bills:</span>\n              <span className=\"projected-value bills\">{formatLargeCurrency(projected.totalBills)}</span>\n            </div>\n          )}\n          {budgetCategories.food && (\n            <div className=\"projected-item\">\n              <span className=\"projected-label\">Total Food:</span>\n            <span className=\"projected-value food\">{formatLargeCurrency(projected.totalFood)}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const renderProjectionChart = () => {\n    const months = parseInt(timeFrame);\n    const income = parseFloat(monthlyIncome) || 0;\n    \n    if (!income) return <div className=\"no-data\">Enter income to see projection chart</div>;\n\n    // Make chart responsive - use container width or default to 600\n    const containerWidth = window.innerWidth;\n    const chartWidth = Math.max(600, Math.min(containerWidth - 100, 1200)); // Min 600, max 1200\n    const chartHeight = 400;\n    const padding = 80;\n    const chartAreaWidth = chartWidth - padding * 2;\n    const chartAreaHeight = chartHeight - padding * 2;\n    \n    // Get categories with values\n    const categoriesWithValues = categoryOrder.filter(category => \n      budgetCategories[category] && parseFloat(budgetCategories[category]) > 0\n    );\n    \n    if (categoriesWithValues.length === 0) {\n      return <div className=\"no-data\">Add budget values to see category comparison</div>;\n    }\n\n    const barHeight = chartAreaHeight / categoriesWithValues.length;\n    const maxValue = Math.max(...categoriesWithValues.map(category => \n      parseFloat(budgetCategories[category]) * months\n    ));\n    const scale = chartAreaWidth / maxValue;\n\n    // Format large numbers for display\n    const formatLargeNumber = (num) => {\n      if (num >= 1000000) {\n        return `$${(num / 1000000).toFixed(1)}M`;\n      } else if (num >= 1000) {\n        return `$${(num / 1000).toFixed(1)}K`;\n      }\n      return formatCurrency(num);\n    };\n\n    return (\n      <svg width=\"100%\" height={chartHeight} className=\"projection-chart\" viewBox={`0 0 ${chartWidth} ${chartHeight}`} preserveAspectRatio=\"xMidYMid meet\">\n        {/* Grid lines */}\n        {[0, 0.25, 0.5, 0.75, 1].map((ratio, i) => {\n          const x = padding + chartAreaWidth * ratio;\n          const value = maxValue * ratio;\n          return (\n            <g key={i}>\n              <line\n                x1={x}\n                y1={padding}\n                x2={x}\n                y2={chartHeight - padding}\n                stroke=\"#444\"\n                strokeWidth=\"1\"\n                strokeDasharray=\"5,5\"\n              />\n              <text\n                x={x}\n                y={chartHeight - padding + 15}\n                fill=\"#666\"\n                fontSize=\"10\"\n                textAnchor=\"middle\"\n              >\n                {formatLargeNumber(value)}\n              </text>\n            </g>\n          );\n        })}\n\n        {/* Category bars */}\n        {categoriesWithValues.map((category, index) => {\n          const categoryValue = parseFloat(budgetCategories[category]);\n          const totalValue = categoryValue * months;\n          const barWidth = totalValue * scale;\n          const y = padding + index * barHeight + barHeight * 0.1;\n          const barY = y + barHeight * 0.3;\n          const barHeightActual = barHeight * 0.4;\n          \n          return (\n            <g key={category}>\n              {/* Category bar */}\n              <rect\n                x={padding}\n                y={barY}\n                width={barWidth}\n                height={barHeightActual}\n                fill={getCategoryColor(category)}\n                rx=\"3\"\n                ry=\"3\"\n              />\n              \n              {/* Category label */}\n              <text\n                x={padding - 10}\n                y={barY + barHeightActual / 2 + 4}\n                fill=\"#ccc\"\n                fontSize=\"12\"\n                textAnchor=\"end\"\n              >\n                {formatCategoryName(category)}\n              </text>\n              \n              {/* Value label on bar */}\n              <text\n                x={padding + barWidth + 10}\n                y={barY + barHeightActual / 2 + 4}\n                fill=\"#fff\"\n                fontSize=\"11\"\n                fontWeight=\"bold\"\n              >\n                {formatLargeNumber(totalValue)}\n              </text>\n              \n              {/* Monthly value label */}\n              <text\n                x={padding + barWidth + 10}\n                y={barY + barHeightActual / 2 + 18}\n                fill=\"#999\"\n                fontSize=\"9\"\n              >\n                ({formatLargeNumber(categoryValue)}/month)\n              </text>\n            </g>\n          );\n        })}\n\n        {/* Total income bar for comparison */}\n        <g>\n          <rect\n            x={padding}\n            y={padding + categoriesWithValues.length * barHeight + barHeight * 0.1}\n            width={chartAreaWidth}\n            height={barHeight * 0.4}\n            fill=\"#28a745\"\n            opacity=\"0.3\"\n            rx=\"3\"\n            ry=\"3\"\n          />\n          <text\n            x={padding - 10}\n            y={padding + categoriesWithValues.length * barHeight + barHeight * 0.3}\n            fill=\"#ccc\"\n            fontSize=\"12\"\n            textAnchor=\"end\"\n          >\n            Total Income\n          </text>\n          <text\n            x={padding + chartAreaWidth + 10}\n            y={padding + categoriesWithValues.length * barHeight + barHeight * 0.3}\n            fill=\"#28a745\"\n            fontSize=\"11\"\n            fontWeight=\"bold\"\n          >\n            {formatLargeNumber(income * months)}\n          </text>\n        </g>\n\n        {/* Chart title */}\n        <text\n          x={chartWidth / 2}\n          y={20}\n          fill=\"#fff\"\n          fontSize=\"14\"\n          fontWeight=\"bold\"\n          textAnchor=\"middle\"\n        >\n          Category Comparison - {getTimeFrameLabel()}\n        </text>\n      </svg>\n    );\n  };\n\n  const formatCategoryName = (category) => {\n    return category.charAt(0).toUpperCase() + category.slice(1).replace(/_/g, ' ');\n  };\n\n  return (\n    <div>\n      <header>Welcome to your Budget Calculator!</header>\n      \n      <div className=\"budget-form\">\n        <label htmlFor=\"payBox\">How much will you be paid this month?</label>\n        <input\n          type=\"number\"\n          id=\"payBox\"\n          value={monthlyIncome}\n          onChange={handleIncomeChange}\n          placeholder=\"Enter amount\"\n        />\n      </div>\n\n      <div className=\"budget-container\">\n        <div className=\"budget-table-section\">\n          <div className=\"budget-header\">\n            <h3>Budget Breakdown</h3>\n          </div>\n          <div id=\"calcTable\">\n            <table className=\"budget-table\">\n              <thead>\n                <tr>\n                  <th>Category</th>\n                  <th>Amount</th>\n                  <th>Progress</th>\n                  <th>Color</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {categoryOrder.map((category) => (\n                  <tr \n                    key={category}\n                    className={draggedItem === category ? 'dragging' : ''}\n                    draggable\n                    onDragStart={(e) => handleDragStart(e, category)}\n                    onDragOver={handleDragOver}\n                    onDrop={(e) => handleDrop(e, category)}\n                  >\n                    <td className=\"category-name\">\n                      <span className=\"drag-handle\">⋮⋮</span>\n                      {formatCategoryName(category)}\n                    </td>\n                    <td>\n                      <input\n                        type=\"number\"\n                        className=\"budget-input\"\n                        value={budgetCategories[category]}\n                        onChange={(e) => handleCategoryChange(category, e.target.value)}\n                        placeholder=\"0\"\n                      />\n                    </td>\n                    <td>\n                      {renderProgressBar(category, budgetCategories[category])}\n                    </td>\n                    <td>\n                      <input\n                        type=\"color\"\n                        className=\"color-picker\"\n                        value={getCategoryColor(category)}\n                        onChange={(e) => handleColorChange(category, e.target.value)}\n                        title=\"Choose color\"\n                      />\n                    </td>\n                    <td>\n                      <button \n                        className=\"delete-category-btn\"\n                        onClick={() => removeCategory(category)}\n                        title=\"Delete category\"\n                      >\n                        ×\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n                \n                {/* Template row for adding new category */}\n                <tr className=\"template-row\">\n                  <td className=\"category-name\">\n                    <span className=\"drag-handle\">⋮⋮</span>\n                    <input\n                      type=\"text\"\n                      className=\"template-input\"\n                      placeholder=\"Enter category name...\"\n                      value={templateCategory}\n                      onChange={(e) => setTemplateCategory(e.target.value)}\n                      onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                          if (addCategoryFromTemplate(templateCategory)) {\n                            setTemplateCategory('');\n                          }\n                        }\n                      }}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      type=\"number\"\n                      className=\"budget-input\"\n                      disabled\n                      placeholder=\"0\"\n                    />\n                  </td>\n                  <td>\n                    <div className=\"progress-container\">\n                      <div className=\"progress-bar\">\n                        <div className=\"progress-fill\" style={{ width: '0%' }}></div>\n                      </div>\n                      <span className=\"progress-text\">0%</span>\n                    </div>\n                  </td>\n                  <td>\n                    <input\n                      type=\"color\"\n                      className=\"color-picker\"\n                      disabled\n                    />\n                  </td>\n                  <td>\n                    <button \n                      className=\"add-category-btn\"\n                      onClick={() => {\n                        if (addCategoryFromTemplate(templateCategory)) {\n                          setTemplateCategory('');\n                        }\n                      }}\n                      title=\"Add category\"\n                      disabled={!templateCategory.trim()}\n                    >\n                      +\n                    </button>\n                  </td>\n                </tr>\n                \n                <tr className=\"total-row\">\n                  <td><strong>Total Allocated</strong></td>\n                  <td><strong>{formatCurrency(calculateTotal())}</strong></td>\n                  <td>\n                    <div className=\"progress-container\">\n                      <div className=\"progress-bar\">\n                        <div \n                          className=\"progress-fill total-progress\"\n                          style={{ \n                            width: `${Math.min((calculateTotal() / parseFloat(monthlyIncome || 1)) * 100, 100)}%`\n                          }}\n                        ></div>\n                      </div>\n                      <span className=\"progress-text\">\n                        {monthlyIncome ? `${((calculateTotal() / parseFloat(monthlyIncome)) * 100).toFixed(1)}%` : '0%'}\n                      </span>\n                    </div>\n                  </td>\n                  <td></td>\n                  <td></td>\n                </tr>\n                <tr className=\"remaining-row\">\n                  <td><strong>Remaining</strong></td>\n                  <td><strong>{formatCurrency(calculateRemaining())}</strong></td>\n                  <td>\n                    <div className=\"progress-container\">\n                      <div className=\"progress-bar\">\n                        <div \n                          className=\"progress-fill remaining-progress\"\n                          style={{ \n                            width: `${Math.min((calculateRemaining() / parseFloat(monthlyIncome || 1)) * 100, 100)}%`\n                          }}\n                        ></div>\n                      </div>\n                      <span className=\"progress-text\">\n                        {monthlyIncome ? `${((calculateRemaining() / parseFloat(monthlyIncome)) * 100).toFixed(1)}%` : '0%'}\n                      </span>\n                    </div>\n                  </td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div className=\"visualization-section\">\n          {renderPieChart()}\n        </div>\n      </div>\n\n      {renderProjectedTotals()}\n    </div>\n  );\n};\n\nexport default BudgetCalculator; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC;IACvDS,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC;IACnDS,KAAK,EAAE,SAAS;IAChBC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,CACjD,OAAO,EAAE,MAAM,EAAE,MAAM,CACxB,CAAC;EACF,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACoB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACwB,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC0B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAElE,MAAM4B,kBAAkB,GAAIC,CAAC,IAAK;IAChCvB,gBAAgB,CAACuB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAACC,QAAQ,EAAEF,KAAK,KAAK;IAChDvB,mBAAmB,CAAC0B,IAAI,KAAK;MAC3B,GAAGA,IAAI;MACP,CAACD,QAAQ,GAAGF;IACd,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,eAAe,GAAGC,MAAM,CAAC,sBAAsB,CAAC;IACtD,IAAID,eAAe,IAAIA,eAAe,CAACE,IAAI,CAAC,CAAC,EAAE;MAC7C,MAAMC,WAAW,GAAGH,eAAe,CAACE,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;MAC7E,IAAI,CAAClC,gBAAgB,CAACmC,cAAc,CAACH,WAAW,CAAC,EAAE;QACjD/B,mBAAmB,CAAC0B,IAAI,KAAK;UAC3B,GAAGA,IAAI;UACP,CAACK,WAAW,GAAG;QACjB,CAAC,CAAC,CAAC;QACH1B,iBAAiB,CAACqB,IAAI,KAAK;UACzB,GAAGA,IAAI;UACP,CAACK,WAAW,GAAGI,cAAc,CAAC;QAChC,CAAC,CAAC,CAAC;QACH5B,gBAAgB,CAACmB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEK,WAAW,CAAC,CAAC;MAClD,CAAC,MAAM;QACLK,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF;EACF,CAAC;EAED,MAAMC,uBAAuB,GAAIC,YAAY,IAAK;IAChD,IAAIA,YAAY,IAAIA,YAAY,CAACR,IAAI,CAAC,CAAC,EAAE;MACvC,MAAMC,WAAW,GAAGO,YAAY,CAACR,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;MAC1E,IAAI,CAAClC,gBAAgB,CAACmC,cAAc,CAACH,WAAW,CAAC,EAAE;QACjD/B,mBAAmB,CAAC0B,IAAI,KAAK;UAC3B,GAAGA,IAAI;UACP,CAACK,WAAW,GAAG;QACjB,CAAC,CAAC,CAAC;QACH1B,iBAAiB,CAACqB,IAAI,KAAK;UACzB,GAAGA,IAAI;UACP,CAACK,WAAW,GAAGI,cAAc,CAAC;QAChC,CAAC,CAAC,CAAC;QACH5B,gBAAgB,CAACmB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEK,WAAW,CAAC,CAAC;QAChD,OAAO,IAAI;MACb,CAAC,MAAM;QACLK,KAAK,CAAC,0BAA0B,CAAC;QACjC,OAAO,KAAK;MACd;IACF;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMG,cAAc,GAAIC,gBAAgB,IAAK;IAC3C,IAAIC,MAAM,CAACC,IAAI,CAAC3C,gBAAgB,CAAC,CAAC4C,MAAM,GAAG,CAAC,EAAE;MAC5C,MAAMC,aAAa,GAAG;QAAE,GAAG7C;MAAiB,CAAC;MAC7C,OAAO6C,aAAa,CAACJ,gBAAgB,CAAC;MACtCxC,mBAAmB,CAAC4C,aAAa,CAAC;MAElC,MAAMC,SAAS,GAAG;QAAE,GAAGzC;MAAe,CAAC;MACvC,OAAOyC,SAAS,CAACL,gBAAgB,CAAC;MAClCnC,iBAAiB,CAACwC,SAAS,CAAC;MAE5BtC,gBAAgB,CAACmB,IAAI,IAAIA,IAAI,CAACoB,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAKP,gBAAgB,CAAC,CAAC;IACxE,CAAC,MAAM;MACLJ,KAAK,CAAC,sCAAsC,CAAC;IAC/C;EACF,CAAC;EAED,MAAMD,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMa,MAAM,GAAG,CACb,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAChE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAChE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CACjE;IACD,OAAOA,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,MAAM,CAACL,MAAM,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMS,eAAe,GAAGA,CAAC/B,CAAC,EAAEI,QAAQ,KAAK;IACvChB,cAAc,CAACgB,QAAQ,CAAC;IACxBJ,CAAC,CAACgC,YAAY,CAACC,aAAa,GAAG,MAAM;EACvC,CAAC;EAED,MAAMC,cAAc,GAAIlC,CAAC,IAAK;IAC5BA,CAAC,CAACmC,cAAc,CAAC,CAAC;IAClBnC,CAAC,CAACgC,YAAY,CAACI,UAAU,GAAG,MAAM;EACpC,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACrC,CAAC,EAAEsC,cAAc,KAAK;IACxCtC,CAAC,CAACmC,cAAc,CAAC,CAAC;IAClB,IAAIhD,WAAW,IAAIA,WAAW,KAAKmD,cAAc,EAAE;MACjD,MAAMC,QAAQ,GAAG,CAAC,GAAGtD,aAAa,CAAC;MACnC,MAAMuD,YAAY,GAAGD,QAAQ,CAACE,OAAO,CAACtD,WAAW,CAAC;MAClD,MAAMuD,WAAW,GAAGH,QAAQ,CAACE,OAAO,CAACH,cAAc,CAAC;MAEpDC,QAAQ,CAACI,MAAM,CAACH,YAAY,EAAE,CAAC,CAAC;MAChCD,QAAQ,CAACI,MAAM,CAACD,WAAW,EAAE,CAAC,EAAEvD,WAAW,CAAC;MAE5CD,gBAAgB,CAACqD,QAAQ,CAAC;IAC5B;IACAnD,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMwD,iBAAiB,GAAGA,CAACxC,QAAQ,EAAEyC,KAAK,KAAK;IAC7C7D,iBAAiB,CAACqB,IAAI,KAAK;MACzB,GAAGA,IAAI;MACP,CAACD,QAAQ,GAAGyC;IACd,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAO1B,MAAM,CAAC2B,MAAM,CAACrE,gBAAgB,CAAC,CAACsE,MAAM,CAAC,CAACC,KAAK,EAAE/C,KAAK,KAAK;MAC9D,OAAO+C,KAAK,IAAIC,UAAU,CAAChD,KAAK,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAED,MAAMiD,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMF,KAAK,GAAGH,cAAc,CAAC,CAAC;IAC9B,MAAMM,MAAM,GAAGF,UAAU,CAAC1E,aAAa,CAAC,IAAI,CAAC;IAC7C,OAAO4E,MAAM,GAAGH,KAAK;EACvB,CAAC;EAED,MAAMI,wBAAwB,GAAGA,CAAA,KAAM;IACrC,MAAMC,MAAM,GAAGC,QAAQ,CAAClE,SAAS,CAAC;IAClC,MAAM+D,MAAM,GAAGF,UAAU,CAAC1E,aAAa,CAAC,IAAI,CAAC;IAC7C,MAAMgF,cAAc,GAAGV,cAAc,CAAC,CAAC;IACvC,MAAMW,SAAS,GAAGN,kBAAkB,CAAC,CAAC;IAEtC,OAAO;MACLO,WAAW,EAAEN,MAAM,GAAGE,MAAM;MAC5BE,cAAc,EAAEA,cAAc,GAAGF,MAAM;MACvCK,cAAc,EAAEF,SAAS,GAAGH,MAAM;MAClCM,UAAU,EAAE,CAAClF,gBAAgB,CAACI,IAAI,IAAI,CAAC,IAAIwE,MAAM;MACjDO,UAAU,EAAE,CAACnF,gBAAgB,CAACE,KAAK,IAAI,CAAC,IAAI0E,MAAM;MAClDQ,SAAS,EAAE,CAACpF,gBAAgB,CAACG,IAAI,IAAI,CAAC,IAAIyE;IAC5C,CAAC;EACH,CAAC;EAED,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMT,MAAM,GAAGC,QAAQ,CAAClE,SAAS,CAAC;IAClC,IAAIiE,MAAM,KAAK,CAAC,EAAE,OAAO,SAAS;IAClC,IAAIA,MAAM,KAAK,CAAC,EAAE,OAAO,sBAAsB;IAC/C,IAAIA,MAAM,KAAK,CAAC,EAAE,OAAO,0BAA0B;IACnD,IAAIA,MAAM,KAAK,EAAE,EAAE,OAAO,oBAAoB;IAC9C,IAAIA,MAAM,KAAK,EAAE,EAAE,OAAO,qBAAqB;IAC/C,IAAIA,MAAM,KAAK,EAAE,EAAE,OAAO,qBAAqB;IAC/C,OAAO,GAAGA,MAAM,SAAS;EAC3B,CAAC;EAED,MAAMU,cAAc,GAAIC,MAAM,IAAK;IACjC,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;MACpCC,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAE;IACZ,CAAC,CAAC,CAACC,MAAM,CAACL,MAAM,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMM,mBAAmB,GAAIN,MAAM,IAAK;IACtC,IAAIA,MAAM,IAAI,OAAO,EAAE;MACrB,OAAO,IAAI,CAACA,MAAM,GAAG,OAAO,EAAEO,OAAO,CAAC,CAAC,CAAC,GAAG;IAC7C,CAAC,MAAM,IAAIP,MAAM,IAAI,IAAI,EAAE;MACzB,OAAO,IAAI,CAACA,MAAM,GAAG,IAAI,EAAEO,OAAO,CAAC,CAAC,CAAC,GAAG;IAC1C;IACA,OAAOR,cAAc,CAACC,MAAM,CAAC;EAC/B,CAAC;EAED,MAAMQ,qBAAqB,GAAIC,aAAa,IAAK;IAC/C,IAAI,CAAClG,aAAa,IAAI,CAACkG,aAAa,EAAE,OAAO,CAAC;IAC9C,OAAQxB,UAAU,CAACwB,aAAa,CAAC,GAAGxB,UAAU,CAAC1E,aAAa,CAAC,GAAI,GAAG;EACtE,CAAC;EAED,MAAMmG,gBAAgB,GAAIvE,QAAQ,IAAK;IACrC,OAAOrB,cAAc,CAACqB,QAAQ,CAAC,IAAI,SAAS;EAC9C,CAAC;EAED,MAAMwE,iBAAiB,GAAGA,CAACxE,QAAQ,EAAEF,KAAK,KAAK;IAC7C,MAAM2E,UAAU,GAAGJ,qBAAqB,CAACvE,KAAK,CAAC;IAC/C,MAAM2C,KAAK,GAAG8B,gBAAgB,CAACvE,QAAQ,CAAC;IAExC,oBACE/B,OAAA;MAAKyG,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC1G,OAAA;QAAKyG,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3B1G,OAAA;UACEyG,SAAS,EAAC,eAAe;UACzBV,KAAK,EAAE;YACLY,KAAK,EAAE,GAAGpD,IAAI,CAACqD,GAAG,CAACJ,UAAU,EAAE,GAAG,CAAC,GAAG;YACtCK,eAAe,EAAErC;UACnB;QAAE;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNjH,OAAA;QAAMyG,SAAS,EAAC,eAAe;QAAAC,QAAA,GAAEF,UAAU,CAACL,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAEV,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,UAAU,GAAGpE,MAAM,CAACqE,OAAO,CAAC/G,gBAAgB,CAAC;IACnD,MAAMuE,KAAK,GAAGH,cAAc,CAAC,CAAC;IAC9B,MAAMW,SAAS,GAAGN,kBAAkB,CAAC,CAAC;IACtC,MAAMC,MAAM,GAAGF,UAAU,CAAC1E,aAAa,CAAC,IAAI,CAAC;IAE7C,IAAI4E,MAAM,KAAK,CAAC,EAAE,oBAAO/E,OAAA;MAAKyG,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAoD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;IAE5G,IAAII,YAAY,GAAG,CAAC;IACpB,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,OAAO,GAAG,GAAG;IACnB,MAAMC,OAAO,GAAG,GAAG;IAEnB,oBACExH,OAAA;MAAKyG,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClC1G,OAAA;QAAA0G,QAAA,EAAI;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BjH,OAAA;QAAK2G,KAAK,EAAC,KAAK;QAACc,MAAM,EAAC,KAAK;QAAChB,SAAS,EAAC,WAAW;QAAAC,QAAA,GAEhD9F,aAAa,CAAC8G,GAAG,CAAC3F,QAAQ,IAAI;UAC7B,MAAMF,KAAK,GAAGxB,gBAAgB,CAAC0B,QAAQ,CAAC;UACxC,IAAI,CAACF,KAAK,IAAIgD,UAAU,CAAChD,KAAK,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI;UAElD,MAAM2E,UAAU,GAAI3B,UAAU,CAAChD,KAAK,CAAC,GAAGkD,MAAM,GAAI,GAAG;UACrD,MAAM4C,KAAK,GAAInB,UAAU,GAAG,GAAG,GAAI,GAAG;UACtC,MAAMoB,UAAU,GAAGP,YAAY;UAC/B,MAAMQ,QAAQ,GAAGR,YAAY,GAAGM,KAAK;UAErC,MAAMG,EAAE,GAAGP,OAAO,GAAGD,MAAM,GAAG/D,IAAI,CAACwE,GAAG,CAACH,UAAU,GAAGrE,IAAI,CAACyE,EAAE,GAAG,GAAG,CAAC;UAClE,MAAMC,EAAE,GAAGT,OAAO,GAAGF,MAAM,GAAG/D,IAAI,CAAC2E,GAAG,CAACN,UAAU,GAAGrE,IAAI,CAACyE,EAAE,GAAG,GAAG,CAAC;UAClE,MAAMG,EAAE,GAAGZ,OAAO,GAAGD,MAAM,GAAG/D,IAAI,CAACwE,GAAG,CAACF,QAAQ,GAAGtE,IAAI,CAACyE,EAAE,GAAG,GAAG,CAAC;UAChE,MAAMI,EAAE,GAAGZ,OAAO,GAAGF,MAAM,GAAG/D,IAAI,CAAC2E,GAAG,CAACL,QAAQ,GAAGtE,IAAI,CAACyE,EAAE,GAAG,GAAG,CAAC;UAEhE,MAAMK,YAAY,GAAGV,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;UAExC,MAAMW,QAAQ,GAAG,CACf,KAAKf,OAAO,IAAIC,OAAO,EAAE,EACzB,KAAKM,EAAE,IAAIG,EAAE,EAAE,EACf,KAAKX,MAAM,IAAIA,MAAM,MAAMe,YAAY,MAAMF,EAAE,IAAIC,EAAE,EAAE,EACvD,GAAG,CACJ,CAACG,IAAI,CAAC,GAAG,CAAC;UAEXlB,YAAY,IAAIM,KAAK;UAErB,oBACE3H,OAAA;YAEEwI,CAAC,EAAEF,QAAS;YACZG,IAAI,EAAEnC,gBAAgB,CAACvE,QAAQ,CAAE;YACjC2G,MAAM,EAAC,MAAM;YACbC,WAAW,EAAC;UAAG,GAJV5G,QAAQ;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKd,CAAC;QAEN,CAAC,CAAC,EAGD7B,SAAS,GAAG,CAAC,IACZ,CAAC,MAAM;UACL,MAAMoB,UAAU,GAAIpB,SAAS,GAAGL,MAAM,GAAI,GAAG;UAC7C,MAAM4C,KAAK,GAAInB,UAAU,GAAG,GAAG,GAAI,GAAG;UACtC,MAAMoB,UAAU,GAAGP,YAAY;UAC/B,MAAMQ,QAAQ,GAAGR,YAAY,GAAGM,KAAK;UAErC,MAAMG,EAAE,GAAGP,OAAO,GAAGD,MAAM,GAAG/D,IAAI,CAACwE,GAAG,CAACH,UAAU,GAAGrE,IAAI,CAACyE,EAAE,GAAG,GAAG,CAAC;UAClE,MAAMC,EAAE,GAAGT,OAAO,GAAGF,MAAM,GAAG/D,IAAI,CAAC2E,GAAG,CAACN,UAAU,GAAGrE,IAAI,CAACyE,EAAE,GAAG,GAAG,CAAC;UAClE,MAAMG,EAAE,GAAGZ,OAAO,GAAGD,MAAM,GAAG/D,IAAI,CAACwE,GAAG,CAACF,QAAQ,GAAGtE,IAAI,CAACyE,EAAE,GAAG,GAAG,CAAC;UAChE,MAAMI,EAAE,GAAGZ,OAAO,GAAGF,MAAM,GAAG/D,IAAI,CAAC2E,GAAG,CAACL,QAAQ,GAAGtE,IAAI,CAACyE,EAAE,GAAG,GAAG,CAAC;UAEhE,MAAMK,YAAY,GAAGV,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;UAExC,MAAMW,QAAQ,GAAG,CACf,KAAKf,OAAO,IAAIC,OAAO,EAAE,EACzB,KAAKM,EAAE,IAAIG,EAAE,EAAE,EACf,KAAKX,MAAM,IAAIA,MAAM,MAAMe,YAAY,MAAMF,EAAE,IAAIC,EAAE,EAAE,EACvD,GAAG,CACJ,CAACG,IAAI,CAAC,GAAG,CAAC;UAEX,oBACEvI,OAAA;YAEEwI,CAAC,EAAEF,QAAS;YACZG,IAAI,EAAC,SAAS;YACdC,MAAM,EAAC,MAAM;YACbC,WAAW,EAAC;UAAG,GAJX,aAAa;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKlB,CAAC;QAEN,CAAC,EAAE,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNjH,OAAA;QAAKyG,SAAS,EAAC,cAAc;QAAAC,QAAA,GAE1B9F,aAAa,CAAC8G,GAAG,CAAC3F,QAAQ,IAAI;UAC7B,MAAMF,KAAK,GAAGxB,gBAAgB,CAAC0B,QAAQ,CAAC;UACxC,IAAI,CAACF,KAAK,IAAIgD,UAAU,CAAChD,KAAK,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI;UAClD,MAAM2E,UAAU,GAAI3B,UAAU,CAAChD,KAAK,CAAC,GAAGkD,MAAM,GAAI,GAAG;UACrD,oBACE/E,OAAA;YAAoByG,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACzC1G,OAAA;cACEyG,SAAS,EAAC,cAAc;cACxBV,KAAK,EAAE;gBAAEc,eAAe,EAAEP,gBAAgB,CAACvE,QAAQ;cAAE;YAAE;cAAA+E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CAAC,eACPjH,OAAA;cAAMyG,SAAS,EAAC,aAAa;cAAAC,QAAA,GAC1BkC,kBAAkB,CAAC7G,QAAQ,CAAC,EAAC,IAAE,EAACyE,UAAU,CAACL,OAAO,CAAC,CAAC,CAAC,EAAC,GACzD;YAAA;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAPClF,QAAQ;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQb,CAAC;QAEV,CAAC,CAAC,EAGD7B,SAAS,GAAG,CAAC,iBACZpF,OAAA;UAAKyG,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B1G,OAAA;YACEyG,SAAS,EAAC,cAAc;YACxBV,KAAK,EAAE;cAAEc,eAAe,EAAE;YAAU;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,eACPjH,OAAA;YAAMyG,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAC,eACf,EAAC,CAAEtB,SAAS,GAAGL,MAAM,GAAI,GAAG,EAAEoB,OAAO,CAAC,CAAC,CAAC,EAAC,GACxD;UAAA;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,MAAM4B,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,SAAS,GAAG9D,wBAAwB,CAAC,CAAC;IAC5C,MAAMC,MAAM,GAAGC,QAAQ,CAAClE,SAAS,CAAC;IAElC,IAAI,CAACb,aAAa,EAAE,OAAO,IAAI;IAE/B,oBACEH,OAAA;MAAKyG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B1G,OAAA;QAAA0G,QAAA,GAAI,qBAAmB,EAAChB,iBAAiB,CAAC,CAAC;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjDjH,OAAA;QAAKyG,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClC1G,OAAA;UAAO+I,OAAO,EAAC,WAAW;UAAArC,QAAA,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9CjH,OAAA;UACEgJ,EAAE,EAAC,WAAW;UACdnH,KAAK,EAAEb,SAAU;UACjBiI,QAAQ,EAAGtH,CAAC,IAAKV,YAAY,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UAC9C4E,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAE7B1G,OAAA;YAAQ6B,KAAK,EAAC,GAAG;YAAA6E,QAAA,EAAC;UAAO;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClCjH,OAAA;YAAQ6B,KAAK,EAAC,GAAG;YAAA6E,QAAA,EAAC;UAAoB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/CjH,OAAA;YAAQ6B,KAAK,EAAC,GAAG;YAAA6E,QAAA,EAAC;UAAwB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnDjH,OAAA;YAAQ6B,KAAK,EAAC,IAAI;YAAA6E,QAAA,EAAC;UAAkB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9CjH,OAAA;YAAQ6B,KAAK,EAAC,IAAI;YAAA6E,QAAA,EAAC;UAAmB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/CjH,OAAA;YAAQ6B,KAAK,EAAC,IAAI;YAAA6E,QAAA,EAAC;UAAmB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGNjH,OAAA;QAAKyG,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B1G,OAAA;UAAA0G,QAAA,EAAI;QAAgB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBjH,OAAA;UAAKyG,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7BwC,qBAAqB,CAAC;QAAC;UAAApC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENjH,OAAA;QAAKyG,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B1G,OAAA;UAAKyG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B1G,OAAA;YAAMyG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAa;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtDjH,OAAA;YAAMyG,SAAS,EAAC,wBAAwB;YAAAC,QAAA,EAAER,mBAAmB,CAAC4C,SAAS,CAACzD,WAAW;UAAC;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzF,CAAC,eACNjH,OAAA;UAAKyG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B1G,OAAA;YAAMyG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAgB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACzDjH,OAAA;YAAMyG,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAER,mBAAmB,CAAC4C,SAAS,CAAC3D,cAAc;UAAC;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/F,CAAC,eACNjH,OAAA;UAAKyG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B1G,OAAA;YAAMyG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAgB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACzDjH,OAAA;YAAMyG,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAER,mBAAmB,CAAC4C,SAAS,CAACxD,cAAc;UAAC;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/F,CAAC,EACL5G,gBAAgB,CAACI,IAAI,iBACpBT,OAAA;UAAKyG,SAAS,EAAC,0BAA0B;UAAAC,QAAA,gBACvC1G,OAAA;YAAMyG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACrDjH,OAAA;YAAMyG,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAER,mBAAmB,CAAC4C,SAAS,CAACvD,UAAU;UAAC;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvF,CACN,EACA5G,gBAAgB,CAACE,KAAK,iBACrBP,OAAA;UAAKyG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B1G,OAAA;YAAMyG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACrDjH,OAAA;YAAMyG,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAER,mBAAmB,CAAC4C,SAAS,CAACtD,UAAU;UAAC;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvF,CACN,EACA5G,gBAAgB,CAACG,IAAI,iBACpBR,OAAA;UAAKyG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B1G,OAAA;YAAMyG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtDjH,OAAA;YAAMyG,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAAER,mBAAmB,CAAC4C,SAAS,CAACrD,SAAS;UAAC;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnF,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,MAAMiC,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMjE,MAAM,GAAGC,QAAQ,CAAClE,SAAS,CAAC;IAClC,MAAM+D,MAAM,GAAGF,UAAU,CAAC1E,aAAa,CAAC,IAAI,CAAC;IAE7C,IAAI,CAAC4E,MAAM,EAAE,oBAAO/E,OAAA;MAAKyG,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAoC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;;IAEvF;IACA,MAAMkC,cAAc,GAAGC,MAAM,CAACC,UAAU;IACxC,MAAMC,UAAU,GAAG/F,IAAI,CAACgG,GAAG,CAAC,GAAG,EAAEhG,IAAI,CAACqD,GAAG,CAACuC,cAAc,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACxE,MAAMK,WAAW,GAAG,GAAG;IACvB,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMC,cAAc,GAAGJ,UAAU,GAAGG,OAAO,GAAG,CAAC;IAC/C,MAAME,eAAe,GAAGH,WAAW,GAAGC,OAAO,GAAG,CAAC;;IAEjD;IACA,MAAMG,oBAAoB,GAAGhJ,aAAa,CAACwC,MAAM,CAACrB,QAAQ,IACxD1B,gBAAgB,CAAC0B,QAAQ,CAAC,IAAI8C,UAAU,CAACxE,gBAAgB,CAAC0B,QAAQ,CAAC,CAAC,GAAG,CACzE,CAAC;IAED,IAAI6H,oBAAoB,CAAC3G,MAAM,KAAK,CAAC,EAAE;MACrC,oBAAOjD,OAAA;QAAKyG,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAA4C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IACpF;IAEA,MAAM4C,SAAS,GAAGF,eAAe,GAAGC,oBAAoB,CAAC3G,MAAM;IAC/D,MAAM6G,QAAQ,GAAGvG,IAAI,CAACgG,GAAG,CAAC,GAAGK,oBAAoB,CAAClC,GAAG,CAAC3F,QAAQ,IAC5D8C,UAAU,CAACxE,gBAAgB,CAAC0B,QAAQ,CAAC,CAAC,GAAGkD,MAC3C,CAAC,CAAC;IACF,MAAM8E,KAAK,GAAGL,cAAc,GAAGI,QAAQ;;IAEvC;IACA,MAAME,iBAAiB,GAAIC,GAAG,IAAK;MACjC,IAAIA,GAAG,IAAI,OAAO,EAAE;QAClB,OAAO,IAAI,CAACA,GAAG,GAAG,OAAO,EAAE9D,OAAO,CAAC,CAAC,CAAC,GAAG;MAC1C,CAAC,MAAM,IAAI8D,GAAG,IAAI,IAAI,EAAE;QACtB,OAAO,IAAI,CAACA,GAAG,GAAG,IAAI,EAAE9D,OAAO,CAAC,CAAC,CAAC,GAAG;MACvC;MACA,OAAOR,cAAc,CAACsE,GAAG,CAAC;IAC5B,CAAC;IAED,oBACEjK,OAAA;MAAK2G,KAAK,EAAC,MAAM;MAACc,MAAM,EAAE+B,WAAY;MAAC/C,SAAS,EAAC,kBAAkB;MAACyD,OAAO,EAAE,OAAOZ,UAAU,IAAIE,WAAW,EAAG;MAACW,mBAAmB,EAAC,eAAe;MAAAzD,QAAA,GAEjJ,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAACgB,GAAG,CAAC,CAAC0C,KAAK,EAAEC,CAAC,KAAK;QACzC,MAAMC,CAAC,GAAGb,OAAO,GAAGC,cAAc,GAAGU,KAAK;QAC1C,MAAMvI,KAAK,GAAGiI,QAAQ,GAAGM,KAAK;QAC9B,oBACEpK,OAAA;UAAA0G,QAAA,gBACE1G,OAAA;YACE8H,EAAE,EAAEwC,CAAE;YACNrC,EAAE,EAAEwB,OAAQ;YACZtB,EAAE,EAAEmC,CAAE;YACNlC,EAAE,EAAEoB,WAAW,GAAGC,OAAQ;YAC1Bf,MAAM,EAAC,MAAM;YACbC,WAAW,EAAC,GAAG;YACf4B,eAAe,EAAC;UAAK;YAAAzD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACFjH,OAAA;YACEsK,CAAC,EAAEA,CAAE;YACLE,CAAC,EAAEhB,WAAW,GAAGC,OAAO,GAAG,EAAG;YAC9BhB,IAAI,EAAC,MAAM;YACXgC,QAAQ,EAAC,IAAI;YACbC,UAAU,EAAC,QAAQ;YAAAhE,QAAA,EAElBsD,iBAAiB,CAACnI,KAAK;UAAC;YAAAiF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC;QAAA,GAlBDoD,CAAC;UAAAvD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmBN,CAAC;MAER,CAAC,CAAC,EAGD2C,oBAAoB,CAAClC,GAAG,CAAC,CAAC3F,QAAQ,EAAE4I,KAAK,KAAK;QAC7C,MAAMtE,aAAa,GAAGxB,UAAU,CAACxE,gBAAgB,CAAC0B,QAAQ,CAAC,CAAC;QAC5D,MAAM6I,UAAU,GAAGvE,aAAa,GAAGpB,MAAM;QACzC,MAAM4F,QAAQ,GAAGD,UAAU,GAAGb,KAAK;QACnC,MAAMS,CAAC,GAAGf,OAAO,GAAGkB,KAAK,GAAGd,SAAS,GAAGA,SAAS,GAAG,GAAG;QACvD,MAAMiB,IAAI,GAAGN,CAAC,GAAGX,SAAS,GAAG,GAAG;QAChC,MAAMkB,eAAe,GAAGlB,SAAS,GAAG,GAAG;QAEvC,oBACE7J,OAAA;UAAA0G,QAAA,gBAEE1G,OAAA;YACEsK,CAAC,EAAEb,OAAQ;YACXe,CAAC,EAAEM,IAAK;YACRnE,KAAK,EAAEkE,QAAS;YAChBpD,MAAM,EAAEsD,eAAgB;YACxBtC,IAAI,EAAEnC,gBAAgB,CAACvE,QAAQ,CAAE;YACjCiJ,EAAE,EAAC,GAAG;YACNC,EAAE,EAAC;UAAG;YAAAnE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eAGFjH,OAAA;YACEsK,CAAC,EAAEb,OAAO,GAAG,EAAG;YAChBe,CAAC,EAAEM,IAAI,GAAGC,eAAe,GAAG,CAAC,GAAG,CAAE;YAClCtC,IAAI,EAAC,MAAM;YACXgC,QAAQ,EAAC,IAAI;YACbC,UAAU,EAAC,KAAK;YAAAhE,QAAA,EAEfkC,kBAAkB,CAAC7G,QAAQ;UAAC;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eAGPjH,OAAA;YACEsK,CAAC,EAAEb,OAAO,GAAGoB,QAAQ,GAAG,EAAG;YAC3BL,CAAC,EAAEM,IAAI,GAAGC,eAAe,GAAG,CAAC,GAAG,CAAE;YAClCtC,IAAI,EAAC,MAAM;YACXgC,QAAQ,EAAC,IAAI;YACbS,UAAU,EAAC,MAAM;YAAAxE,QAAA,EAEhBsD,iBAAiB,CAACY,UAAU;UAAC;YAAA9D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eAGPjH,OAAA;YACEsK,CAAC,EAAEb,OAAO,GAAGoB,QAAQ,GAAG,EAAG;YAC3BL,CAAC,EAAEM,IAAI,GAAGC,eAAe,GAAG,CAAC,GAAG,EAAG;YACnCtC,IAAI,EAAC,MAAM;YACXgC,QAAQ,EAAC,GAAG;YAAA/D,QAAA,GACb,GACE,EAACsD,iBAAiB,CAAC3D,aAAa,CAAC,EAAC,SACrC;UAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GA1CDlF,QAAQ;UAAA+E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA2Cb,CAAC;MAER,CAAC,CAAC,eAGFjH,OAAA;QAAA0G,QAAA,gBACE1G,OAAA;UACEsK,CAAC,EAAEb,OAAQ;UACXe,CAAC,EAAEf,OAAO,GAAGG,oBAAoB,CAAC3G,MAAM,GAAG4G,SAAS,GAAGA,SAAS,GAAG,GAAI;UACvElD,KAAK,EAAE+C,cAAe;UACtBjC,MAAM,EAAEoC,SAAS,GAAG,GAAI;UACxBpB,IAAI,EAAC,SAAS;UACd0C,OAAO,EAAC,KAAK;UACbH,EAAE,EAAC,GAAG;UACNC,EAAE,EAAC;QAAG;UAAAnE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACFjH,OAAA;UACEsK,CAAC,EAAEb,OAAO,GAAG,EAAG;UAChBe,CAAC,EAAEf,OAAO,GAAGG,oBAAoB,CAAC3G,MAAM,GAAG4G,SAAS,GAAGA,SAAS,GAAG,GAAI;UACvEpB,IAAI,EAAC,MAAM;UACXgC,QAAQ,EAAC,IAAI;UACbC,UAAU,EAAC,KAAK;UAAAhE,QAAA,EACjB;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPjH,OAAA;UACEsK,CAAC,EAAEb,OAAO,GAAGC,cAAc,GAAG,EAAG;UACjCc,CAAC,EAAEf,OAAO,GAAGG,oBAAoB,CAAC3G,MAAM,GAAG4G,SAAS,GAAGA,SAAS,GAAG,GAAI;UACvEpB,IAAI,EAAC,SAAS;UACdgC,QAAQ,EAAC,IAAI;UACbS,UAAU,EAAC,MAAM;UAAAxE,QAAA,EAEhBsD,iBAAiB,CAACjF,MAAM,GAAGE,MAAM;QAAC;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGJjH,OAAA;QACEsK,CAAC,EAAEhB,UAAU,GAAG,CAAE;QAClBkB,CAAC,EAAE,EAAG;QACN/B,IAAI,EAAC,MAAM;QACXgC,QAAQ,EAAC,IAAI;QACbS,UAAU,EAAC,MAAM;QACjBR,UAAU,EAAC,QAAQ;QAAAhE,QAAA,GACpB,wBACuB,EAAChB,iBAAiB,CAAC,CAAC;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEV,CAAC;EAED,MAAM2B,kBAAkB,GAAI7G,QAAQ,IAAK;IACvC,OAAOA,QAAQ,CAACqJ,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGtJ,QAAQ,CAACuJ,KAAK,CAAC,CAAC,CAAC,CAAC/I,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EAChF,CAAC;EAED,oBACEvC,OAAA;IAAA0G,QAAA,gBACE1G,OAAA;MAAA0G,QAAA,EAAQ;IAAkC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEnDjH,OAAA;MAAKyG,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B1G,OAAA;QAAO+I,OAAO,EAAC,QAAQ;QAAArC,QAAA,EAAC;MAAqC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrEjH,OAAA;QACEuL,IAAI,EAAC,QAAQ;QACbvC,EAAE,EAAC,QAAQ;QACXnH,KAAK,EAAE1B,aAAc;QACrB8I,QAAQ,EAAEvH,kBAAmB;QAC7B8J,WAAW,EAAC;MAAc;QAAA1E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENjH,OAAA;MAAKyG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B1G,OAAA;QAAKyG,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnC1G,OAAA;UAAKyG,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5B1G,OAAA;YAAA0G,QAAA,EAAI;UAAgB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eACNjH,OAAA;UAAKgJ,EAAE,EAAC,WAAW;UAAAtC,QAAA,eACjB1G,OAAA;YAAOyG,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC7B1G,OAAA;cAAA0G,QAAA,eACE1G,OAAA;gBAAA0G,QAAA,gBACE1G,OAAA;kBAAA0G,QAAA,EAAI;gBAAQ;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACjBjH,OAAA;kBAAA0G,QAAA,EAAI;gBAAM;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACfjH,OAAA;kBAAA0G,QAAA,EAAI;gBAAQ;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACjBjH,OAAA;kBAAA0G,QAAA,EAAI;gBAAK;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACdjH,OAAA;kBAAA0G,QAAA,EAAI;gBAAM;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACb;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACRjH,OAAA;cAAA0G,QAAA,GACG9F,aAAa,CAAC8G,GAAG,CAAE3F,QAAQ,iBAC1B/B,OAAA;gBAEEyG,SAAS,EAAE3F,WAAW,KAAKiB,QAAQ,GAAG,UAAU,GAAG,EAAG;gBACtD0J,SAAS;gBACTC,WAAW,EAAG/J,CAAC,IAAK+B,eAAe,CAAC/B,CAAC,EAAEI,QAAQ,CAAE;gBACjD4J,UAAU,EAAE9H,cAAe;gBAC3B+H,MAAM,EAAGjK,CAAC,IAAKqC,UAAU,CAACrC,CAAC,EAAEI,QAAQ,CAAE;gBAAA2E,QAAA,gBAEvC1G,OAAA;kBAAIyG,SAAS,EAAC,eAAe;kBAAAC,QAAA,gBAC3B1G,OAAA;oBAAMyG,SAAS,EAAC,aAAa;oBAAAC,QAAA,EAAC;kBAAE;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,EACtC2B,kBAAkB,CAAC7G,QAAQ,CAAC;gBAAA;kBAAA+E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3B,CAAC,eACLjH,OAAA;kBAAA0G,QAAA,eACE1G,OAAA;oBACEuL,IAAI,EAAC,QAAQ;oBACb9E,SAAS,EAAC,cAAc;oBACxB5E,KAAK,EAAExB,gBAAgB,CAAC0B,QAAQ,CAAE;oBAClCkH,QAAQ,EAAGtH,CAAC,IAAKG,oBAAoB,CAACC,QAAQ,EAAEJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;oBAChE2J,WAAW,EAAC;kBAAG;oBAAA1E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAChB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACLjH,OAAA;kBAAA0G,QAAA,EACGH,iBAAiB,CAACxE,QAAQ,EAAE1B,gBAAgB,CAAC0B,QAAQ,CAAC;gBAAC;kBAAA+E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtD,CAAC,eACLjH,OAAA;kBAAA0G,QAAA,eACE1G,OAAA;oBACEuL,IAAI,EAAC,OAAO;oBACZ9E,SAAS,EAAC,cAAc;oBACxB5E,KAAK,EAAEyE,gBAAgB,CAACvE,QAAQ,CAAE;oBAClCkH,QAAQ,EAAGtH,CAAC,IAAK4C,iBAAiB,CAACxC,QAAQ,EAAEJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;oBAC7DgK,KAAK,EAAC;kBAAc;oBAAA/E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACLjH,OAAA;kBAAA0G,QAAA,eACE1G,OAAA;oBACEyG,SAAS,EAAC,qBAAqB;oBAC/BqF,OAAO,EAAEA,CAAA,KAAMjJ,cAAc,CAACd,QAAQ,CAAE;oBACxC8J,KAAK,EAAC,iBAAiB;oBAAAnF,QAAA,EACxB;kBAED;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACP,CAAC;cAAA,GAxCAlF,QAAQ;gBAAA+E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAyCX,CACL,CAAC,eAGFjH,OAAA;gBAAIyG,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC1B1G,OAAA;kBAAIyG,SAAS,EAAC,eAAe;kBAAAC,QAAA,gBAC3B1G,OAAA;oBAAMyG,SAAS,EAAC,aAAa;oBAAAC,QAAA,EAAC;kBAAE;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACvCjH,OAAA;oBACEuL,IAAI,EAAC,MAAM;oBACX9E,SAAS,EAAC,gBAAgB;oBAC1B+E,WAAW,EAAC,wBAAwB;oBACpC3J,KAAK,EAAEX,gBAAiB;oBACxB+H,QAAQ,EAAGtH,CAAC,IAAKR,mBAAmB,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;oBACrDkK,UAAU,EAAGpK,CAAC,IAAK;sBACjB,IAAIA,CAAC,CAACqK,GAAG,KAAK,OAAO,EAAE;wBACrB,IAAIrJ,uBAAuB,CAACzB,gBAAgB,CAAC,EAAE;0BAC7CC,mBAAmB,CAAC,EAAE,CAAC;wBACzB;sBACF;oBACF;kBAAE;oBAAA2F,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACLjH,OAAA;kBAAA0G,QAAA,eACE1G,OAAA;oBACEuL,IAAI,EAAC,QAAQ;oBACb9E,SAAS,EAAC,cAAc;oBACxBwF,QAAQ;oBACRT,WAAW,EAAC;kBAAG;oBAAA1E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAChB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACLjH,OAAA;kBAAA0G,QAAA,eACE1G,OAAA;oBAAKyG,SAAS,EAAC,oBAAoB;oBAAAC,QAAA,gBACjC1G,OAAA;sBAAKyG,SAAS,EAAC,cAAc;sBAAAC,QAAA,eAC3B1G,OAAA;wBAAKyG,SAAS,EAAC,eAAe;wBAACV,KAAK,EAAE;0BAAEY,KAAK,EAAE;wBAAK;sBAAE;wBAAAG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC1D,CAAC,eACNjH,OAAA;sBAAMyG,SAAS,EAAC,eAAe;sBAAAC,QAAA,EAAC;oBAAE;sBAAAI,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACLjH,OAAA;kBAAA0G,QAAA,eACE1G,OAAA;oBACEuL,IAAI,EAAC,OAAO;oBACZ9E,SAAS,EAAC,cAAc;oBACxBwF,QAAQ;kBAAA;oBAAAnF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACLjH,OAAA;kBAAA0G,QAAA,eACE1G,OAAA;oBACEyG,SAAS,EAAC,kBAAkB;oBAC5BqF,OAAO,EAAEA,CAAA,KAAM;sBACb,IAAInJ,uBAAuB,CAACzB,gBAAgB,CAAC,EAAE;wBAC7CC,mBAAmB,CAAC,EAAE,CAAC;sBACzB;oBACF,CAAE;oBACF0K,KAAK,EAAC,cAAc;oBACpBI,QAAQ,EAAE,CAAC/K,gBAAgB,CAACkB,IAAI,CAAC,CAAE;oBAAAsE,QAAA,EACpC;kBAED;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACP,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eAELjH,OAAA;gBAAIyG,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACvB1G,OAAA;kBAAA0G,QAAA,eAAI1G,OAAA;oBAAA0G,QAAA,EAAQ;kBAAe;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACzCjH,OAAA;kBAAA0G,QAAA,eAAI1G,OAAA;oBAAA0G,QAAA,EAASf,cAAc,CAAClB,cAAc,CAAC,CAAC;kBAAC;oBAAAqC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC5DjH,OAAA;kBAAA0G,QAAA,eACE1G,OAAA;oBAAKyG,SAAS,EAAC,oBAAoB;oBAAAC,QAAA,gBACjC1G,OAAA;sBAAKyG,SAAS,EAAC,cAAc;sBAAAC,QAAA,eAC3B1G,OAAA;wBACEyG,SAAS,EAAC,8BAA8B;wBACxCV,KAAK,EAAE;0BACLY,KAAK,EAAE,GAAGpD,IAAI,CAACqD,GAAG,CAAEnC,cAAc,CAAC,CAAC,GAAGI,UAAU,CAAC1E,aAAa,IAAI,CAAC,CAAC,GAAI,GAAG,EAAE,GAAG,CAAC;wBACpF;sBAAE;wBAAA2G,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ,CAAC,eACNjH,OAAA;sBAAMyG,SAAS,EAAC,eAAe;sBAAAC,QAAA,EAC5BvG,aAAa,GAAG,GAAG,CAAEsE,cAAc,CAAC,CAAC,GAAGI,UAAU,CAAC1E,aAAa,CAAC,GAAI,GAAG,EAAEgG,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;oBAAI;sBAAAW,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC3F,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACLjH,OAAA;kBAAA8G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACTjH,OAAA;kBAAA8G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLjH,OAAA;gBAAIyG,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC3B1G,OAAA;kBAAA0G,QAAA,eAAI1G,OAAA;oBAAA0G,QAAA,EAAQ;kBAAS;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACnCjH,OAAA;kBAAA0G,QAAA,eAAI1G,OAAA;oBAAA0G,QAAA,EAASf,cAAc,CAACb,kBAAkB,CAAC,CAAC;kBAAC;oBAAAgC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAChEjH,OAAA;kBAAA0G,QAAA,eACE1G,OAAA;oBAAKyG,SAAS,EAAC,oBAAoB;oBAAAC,QAAA,gBACjC1G,OAAA;sBAAKyG,SAAS,EAAC,cAAc;sBAAAC,QAAA,eAC3B1G,OAAA;wBACEyG,SAAS,EAAC,kCAAkC;wBAC5CV,KAAK,EAAE;0BACLY,KAAK,EAAE,GAAGpD,IAAI,CAACqD,GAAG,CAAE9B,kBAAkB,CAAC,CAAC,GAAGD,UAAU,CAAC1E,aAAa,IAAI,CAAC,CAAC,GAAI,GAAG,EAAE,GAAG,CAAC;wBACxF;sBAAE;wBAAA2G,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ,CAAC,eACNjH,OAAA;sBAAMyG,SAAS,EAAC,eAAe;sBAAAC,QAAA,EAC5BvG,aAAa,GAAG,GAAG,CAAE2E,kBAAkB,CAAC,CAAC,GAAGD,UAAU,CAAC1E,aAAa,CAAC,GAAI,GAAG,EAAEgG,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;oBAAI;sBAAAW,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC/F,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACLjH,OAAA;kBAAA8G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACTjH,OAAA;kBAAA8G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENjH,OAAA;QAAKyG,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EACnCQ,cAAc,CAAC;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEL4B,qBAAqB,CAAC,CAAC;EAAA;IAAA/B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAAC/G,EAAA,CA1wBID,gBAAgB;AAAAiM,EAAA,GAAhBjM,gBAAgB;AA4wBtB,eAAeA,gBAAgB;AAAC,IAAAiM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}